{
  "api/DNV.Application.Abstractions.Extensions.ApplicationExtensions.html": {
    "href": "api/DNV.Application.Abstractions.Extensions.ApplicationExtensions.html",
    "title": "Class ApplicationExtensions",
    "keywords": "Class ApplicationExtensions Inheritance object ApplicationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Application.Abstractions.Extensions Assembly: DNV.Application.Abstractions.dll Syntax public static class ApplicationExtensions Methods | Improve this Doc View Source CreateUoW(IServiceProvider, bool) Declaration public static IUnitOfWork CreateUoW(this IServiceProvider serviceProvider, bool autoCommit = true) Parameters Type Name Description IServiceProvider serviceProvider bool autoCommit Returns Type Description IUnitOfWork"
  },
  "api/DNV.Application.Abstractions.Extensions.html": {
    "href": "api/DNV.Application.Abstractions.Extensions.html",
    "title": "Namespace DNV.Application.Abstractions.Extensions",
    "keywords": "Namespace DNV.Application.Abstractions.Extensions Classes ApplicationExtensions"
  },
  "api/DNV.Application.Abstractions.html": {
    "href": "api/DNV.Application.Abstractions.html",
    "title": "Namespace DNV.Application.Abstractions",
    "keywords": "Namespace DNV.Application.Abstractions Interfaces IEventHub IQueryableRepository<T> IRepository<T> IUnitOfWork"
  },
  "api/DNV.Application.Abstractions.IEventHub.html": {
    "href": "api/DNV.Application.Abstractions.IEventHub.html",
    "title": "Interface IEventHub",
    "keywords": "Interface IEventHub Namespace: DNV.Application.Abstractions Assembly: DNV.Application.Abstractions.dll Syntax public interface IEventHub Methods | Improve this Doc View Source PublishAsync<T>(T, CancellationToken) Declaration Task PublishAsync<T>(T @event, CancellationToken cancellationToken = default) where T : Event Parameters Type Name Description T event CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.Abstractions.IQueryableRepository-1.html": {
    "href": "api/DNV.Application.Abstractions.IQueryableRepository-1.html",
    "title": "Interface IQueryableRepository<T>",
    "keywords": "Interface IQueryableRepository<T> Namespace: DNV.Application.Abstractions Assembly: DNV.Application.Abstractions.dll Syntax public interface IQueryableRepository<T> where T : Entity Type Parameters Name Description T Methods | Improve this Doc View Source QueryAsync(Expression<Func<T, bool>>, PageParam, SortParam?, CancellationToken) Declaration Task<PaginatedResult<T>> QueryAsync(Expression<Func<T, bool>> predict, PageParam pageParam, SortParam? sortParam = null, CancellationToken cancellationToken = default) Parameters Type Name Description Expression<Func<T, bool>> predict PageParam pageParam SortParam sortParam CancellationToken cancellationToken Returns Type Description Task<PaginatedResult<T>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.Abstractions.IRepository-1.html": {
    "href": "api/DNV.Application.Abstractions.IRepository-1.html",
    "title": "Interface IRepository<T>",
    "keywords": "Interface IRepository<T> Namespace: DNV.Application.Abstractions Assembly: DNV.Application.Abstractions.dll Syntax public interface IRepository<T> where T : Entity, IAggregateRoot Type Parameters Name Description T Methods | Improve this Doc View Source Add(T) Declaration T Add(T entity) Parameters Type Name Description T entity Returns Type Description T | Improve this Doc View Source Delete(T) Declaration void Delete(T entity) Parameters Type Name Description T entity | Improve this Doc View Source FindAsync(Expression<Func<T, bool>>, CancellationToken) Declaration Task<IEnumerable<T>> FindAsync(Expression<Func<T, bool>> predict, CancellationToken cancellationToken = default) Parameters Type Name Description Expression<Func<T, bool>> predict CancellationToken cancellationToken Returns Type Description Task<IEnumerable<T>> | Improve this Doc View Source GetAsync(string, CancellationToken) Declaration Task<T?> GetAsync(string id, CancellationToken cancellationToken = default) Parameters Type Name Description string id CancellationToken cancellationToken Returns Type Description Task<T> | Improve this Doc View Source Update(T) Declaration void Update(T entity) Parameters Type Name Description T entity Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.Abstractions.IUnitOfWork.html": {
    "href": "api/DNV.Application.Abstractions.IUnitOfWork.html",
    "title": "Interface IUnitOfWork",
    "keywords": "Interface IUnitOfWork Inherited Members IDisposable.Dispose() Namespace: DNV.Application.Abstractions Assembly: DNV.Application.Abstractions.dll Syntax public interface IUnitOfWork : IDisposable Properties | Improve this Doc View Source AutoCommit Declaration bool AutoCommit { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source ResolveRepository<TR, TE>(out TR?) Declaration void ResolveRepository<TR, TE>(out TR? repository) where TR : class, IRepository<TE> where TE : Entity, IAggregateRoot Parameters Type Name Description TR repository Type Parameters Name Description TR TE | Improve this Doc View Source SaveAllEntitiesAsync(CancellationToken) Declaration Task<int> SaveAllEntitiesAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task<int> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.Abstractions.UoW.html": {
    "href": "api/DNV.Application.Abstractions.UoW.html",
    "title": "Namespace DNV.Application.Abstractions.UoW",
    "keywords": "Namespace DNV.Application.Abstractions.UoW Classes UnitOfWork Interfaces IUoWProvider"
  },
  "api/DNV.Application.Abstractions.UoW.IUoWProvider.html": {
    "href": "api/DNV.Application.Abstractions.UoW.IUoWProvider.html",
    "title": "Interface IUoWProvider",
    "keywords": "Interface IUoWProvider Namespace: DNV.Application.Abstractions.UoW Assembly: DNV.Application.Abstractions.dll Syntax public interface IUoWProvider Properties | Improve this Doc View Source ChangedEntities Declaration IReadOnlyCollection<Entity> ChangedEntities { get; } Property Value Type Description IReadOnlyCollection<Entity> Methods | Improve this Doc View Source JoinUoW<T>(IRepository<T>) Declaration void JoinUoW<T>(IRepository<T> repository) where T : Entity, IAggregateRoot Parameters Type Name Description IRepository<T> repository Type Parameters Name Description T | Improve this Doc View Source SaveChangesAsync(CancellationToken) Declaration Task<int> SaveChangesAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task<int> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.Abstractions.UoW.UnitOfWork.html": {
    "href": "api/DNV.Application.Abstractions.UoW.UnitOfWork.html",
    "title": "Class UnitOfWork",
    "keywords": "Class UnitOfWork Inheritance object UnitOfWork Implements IUnitOfWork IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Application.Abstractions.UoW Assembly: DNV.Application.Abstractions.dll Syntax public class UnitOfWork : IUnitOfWork, IDisposable Properties | Improve this Doc View Source AutoCommit Declaration public bool AutoCommit { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Improve this Doc View Source ResolveRepository<TR, TE>(out TR?) Declaration public void ResolveRepository<TR, TE>(out TR? repository) where TR : class, IRepository<TE> where TE : Entity, IAggregateRoot Parameters Type Name Description TR repository Type Parameters Name Description TR TE | Improve this Doc View Source SaveAllEntitiesAsync(CancellationToken) Declaration public virtual Task<int> SaveAllEntitiesAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task<int> Implements IUnitOfWork IDisposable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.CQRS.Abstractions.html": {
    "href": "api/DNV.Application.CQRS.Abstractions.html",
    "title": "Namespace DNV.Application.CQRS.Abstractions",
    "keywords": "Namespace DNV.Application.CQRS.Abstractions Interfaces ICommand ICommandHandler<TCommand> ICommandHandler<TCommand, TResult> ICommand<TResponse> IQueryHandler<TRequest, TResponse> IQuery<TResponse>"
  },
  "api/DNV.Application.CQRS.Abstractions.ICommand-1.html": {
    "href": "api/DNV.Application.CQRS.Abstractions.ICommand-1.html",
    "title": "Interface ICommand<TResponse>",
    "keywords": "Interface ICommand<TResponse> Namespace: DNV.Application.CQRS.Abstractions Assembly: DNV.Application.CQRS.Abstractions.dll Syntax public interface ICommand<out TResponse> : IRequest<TResponse>, IBaseRequest Type Parameters Name Description TResponse Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.CQRS.Abstractions.ICommand.html": {
    "href": "api/DNV.Application.CQRS.Abstractions.ICommand.html",
    "title": "Interface ICommand",
    "keywords": "Interface ICommand Namespace: DNV.Application.CQRS.Abstractions Assembly: DNV.Application.CQRS.Abstractions.dll Syntax public interface ICommand : IRequest<Unit>, IBaseRequest Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.CQRS.Abstractions.ICommandHandler-1.html": {
    "href": "api/DNV.Application.CQRS.Abstractions.ICommandHandler-1.html",
    "title": "Interface ICommandHandler<TCommand>",
    "keywords": "Interface ICommandHandler<TCommand> Inherited Members IRequestHandler<TCommand, Unit>.Handle(TCommand, CancellationToken) Namespace: DNV.Application.CQRS.Abstractions Assembly: DNV.Application.CQRS.Abstractions.dll Syntax public interface ICommandHandler<TCommand> : IRequestHandler<TCommand>, IRequestHandler<TCommand, Unit> where TCommand : ICommand Type Parameters Name Description TCommand Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.CQRS.Abstractions.ICommandHandler-2.html": {
    "href": "api/DNV.Application.CQRS.Abstractions.ICommandHandler-2.html",
    "title": "Interface ICommandHandler<TCommand, TResult>",
    "keywords": "Interface ICommandHandler<TCommand, TResult> Inherited Members IRequestHandler<TCommand, TResult>.Handle(TCommand, CancellationToken) Namespace: DNV.Application.CQRS.Abstractions Assembly: DNV.Application.CQRS.Abstractions.dll Syntax public interface ICommandHandler<TCommand, TResult> : IRequestHandler<TCommand, TResult> where TCommand : ICommand<TResult> Type Parameters Name Description TCommand TResult Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.CQRS.Abstractions.IQuery-1.html": {
    "href": "api/DNV.Application.CQRS.Abstractions.IQuery-1.html",
    "title": "Interface IQuery<TResponse>",
    "keywords": "Interface IQuery<TResponse> Namespace: DNV.Application.CQRS.Abstractions Assembly: DNV.Application.CQRS.Abstractions.dll Syntax public interface IQuery<out TResponse> : IRequest<TResponse>, IBaseRequest Type Parameters Name Description TResponse Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Application.CQRS.Abstractions.IQueryHandler-2.html": {
    "href": "api/DNV.Application.CQRS.Abstractions.IQueryHandler-2.html",
    "title": "Interface IQueryHandler<TRequest, TResponse>",
    "keywords": "Interface IQueryHandler<TRequest, TResponse> Inherited Members IRequestHandler<TRequest, TResponse>.Handle(TRequest, CancellationToken) Namespace: DNV.Application.CQRS.Abstractions Assembly: DNV.Application.CQRS.Abstractions.dll Syntax public interface IQueryHandler<TRequest, TResponse> : IRequestHandler<TRequest, TResponse> where TRequest : IQuery<TResponse> Type Parameters Name Description TRequest TResponse Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.Entity.Company.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.Entity.Company.html",
    "title": "Class Company",
    "keywords": "Class Company Represents company information for a company record. Inheritance object Company Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.Abstraction.Entity Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public class Company Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this company is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this company is active, otherwise false. | Improve this Doc View Source CreatedBy Gets or sets the name of user who created this company. Declaration public string CreatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source CreatedOnUtc Gets or sets the UTC date that this company is created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Deleted Gets or sets a flag indicating if this company is deleted or not. Declaration public bool Deleted { get; set; } Property Value Type Description bool Remarks This property is not being used by in the package now. it will be used to support soft delete in future release. | Improve this Doc View Source Description Gets or sets the description name for this company. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source DomainUrl Gets or sets the company domain or sub domain name for this company. Declaration public string DomainUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Id Gets or sets the primary key for this company. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Name Gets or sets the company name for this company. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source PermissionKeys Gets the company permission list for this company. Declaration public virtual IReadOnlyList<string> PermissionKeys { get; } Property Value Type Description IReadOnlyList<string> | Improve this Doc View Source Permissions Gets or sets the company permissions for this company. Declaration public virtual string Permissions { get; set; } Property Value Type Description string Permissions are combined as a string which use semicolon(;) as a delimiter. | Improve this Doc View Source ServiceId Gets or sets the service id for this company. Declaration public string ServiceId { get; set; } Property Value Type Description string | Improve this Doc View Source UpdatedBy Gets or sets the name of user who updated this company last time. Declaration public string UpdatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source UpdatedOnUtc Gets or sets the UTC date that this company is updated. Declaration public DateTime UpdatedOnUtc { get; set; } Property Value Type Description DateTime Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.Entity.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.Entity.html",
    "title": "Namespace DNV.Authorization.UserManagement.Abstraction.Entity",
    "keywords": "Namespace DNV.Authorization.UserManagement.Abstraction.Entity Classes Company Represents company information for a company record. Role Represents role information for a role record. User Represents user information for a user record."
  },
  "api/DNV.Authorization.UserManagement.Abstraction.Entity.Role.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.Entity.Role.html",
    "title": "Class Role",
    "keywords": "Class Role Represents role information for a role record. Inheritance object Role Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.Abstraction.Entity Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public class Role Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this role is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this role is active, otherwise false. | Improve this Doc View Source Company Gets the company to which this role belongs. Declaration public Company Company { get; set; } Property Value Type Description Company Remarks Do not set this property to change a role's company. Instead, set CompanyId. It is null if it is a global role. | Improve this Doc View Source CompanyId Gets or sets id of the company to which this role belongs. Declaration public virtual string CompanyId { get; set; } Property Value Type Description string Remarks It is null if it is a global role. | Improve this Doc View Source CreatedBy Gets or sets the name of user who created this role. Declaration public string CreatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source CreatedOnUtc Gets or sets the UTC date that this role is created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Deleted Gets or sets a flag indicating if this role is deleted or not. Declaration public bool Deleted { get; set; } Property Value Type Description bool Remarks This property is not being used by in the package now. it will be used to support soft delete in future release. | Improve this Doc View Source Description Gets or sets the description for this role. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Id Gets or sets the primary key for this role. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Name Gets or sets the role name for this role. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source PermissionKeys Gets the company permission list for this role. Declaration public virtual IReadOnlyList<string> PermissionKeys { get; } Property Value Type Description IReadOnlyList<string> | Improve this Doc View Source Permissions Gets or sets the role permissions for this role. Declaration public virtual string Permissions { get; set; } Property Value Type Description string Permissions are combined as a string which use semicolon(;) as a delimiter. | Improve this Doc View Source UpdatedBy Gets or sets the name of user who updated this role last time. Declaration public string UpdatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source UpdatedOnUtc Gets or sets the UTC date that this role is updated last time. Declaration public DateTime UpdatedOnUtc { get; set; } Property Value Type Description DateTime Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.Entity.User.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.Entity.User.html",
    "title": "Class User",
    "keywords": "Class User Represents user information for a user record. Inheritance object User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.Abstraction.Entity Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public class User Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this user is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this user is active, otherwise false. | Improve this Doc View Source CompanyIdList Get the company's id list of company to which this user belongs. Declaration public virtual IReadOnlyList<string> CompanyIdList { get; } Property Value Type Description IReadOnlyList<string> | Improve this Doc View Source CompanyIds Gets or sets id of company to which this user belongs. Declaration public virtual string CompanyIds { get; set; } Property Value Type Description string Company's ids are combined as a string which use semicolon(;) as a delimiter. | Improve this Doc View Source CompanyList Get the list of companys to which this user belongs. Declaration public virtual IReadOnlyList<Company> CompanyList { get; set; } Property Value Type Description IReadOnlyList<Company> Remarks Do not set this property to change a user's company. Instead, set CompanyIds. | Improve this Doc View Source CreatedBy Gets or sets the name of user who created this user. Declaration public string CreatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source CreatedOnUtc Gets or sets the UTC date that this user is created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Deleted Gets or sets a flag indicating if this user is deleted or not. Declaration public bool Deleted { get; set; } Property Value Type Description bool Remarks This property is not being used by in the package now. it will be used to support soft delete in future release. | Improve this Doc View Source Description Gets or sets the description for this user. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Email Gets or sets the email for this user. Declaration public string Email { get; set; } Property Value Type Description string | Improve this Doc View Source FirstName Gets or sets the first name for this user. Declaration public string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source Id Gets or sets the primary key for this user. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source LastName Gets or sets the last name for this user. Declaration public string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source RoleIdList Get the roles id list of roles which this user has. Declaration public virtual IReadOnlyList<string> RoleIdList { get; } Property Value Type Description IReadOnlyList<string> | Improve this Doc View Source RoleIds Gets or sets id of roles which this user has. Declaration public virtual string RoleIds { get; set; } Property Value Type Description string Role's ids are combined as a string which use semicolon(;) as a delimiter. | Improve this Doc View Source RoleList Get the list of roles which this user has. Declaration public virtual IReadOnlyList<Role> RoleList { get; set; } Property Value Type Description IReadOnlyList<Role> Remarks Do not set this property to change a user's role. Instead, set RoleIds. | Improve this Doc View Source SuperAdmin Gets or sets a flag indicating if this user is super admin or not. Declaration public bool SuperAdmin { get; set; } Property Value Type Description bool True if this user is super admin, otherwise false. | Improve this Doc View Source UpdatedBy Gets or sets the name of user who updated this user last time. Declaration public string UpdatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source UpdatedOnUtc Gets or sets the UTC date that this user is updated last time. Declaration public DateTime UpdatedOnUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source VeracityId Gets or sets the identity id for this user. Declaration public string VeracityId { get; set; } Property Value Type Description string Remarks It is an id provided by identity provider. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.html",
    "title": "Namespace DNV.Authorization.UserManagement.Abstraction",
    "keywords": "Namespace DNV.Authorization.UserManagement.Abstraction Classes StringHelper string helper class. UserManagementSettings Provides a class to configure the user management business flow. Interfaces ICompany<TCompany> Provides an abstraction for a storage and management of companies. IRole<TRole> Provides an abstraction for a storage and management of roles. IUserSynchronization<TUser> Provides an abstraction for user synchronization between local and third party platform. IUser<TUser> Provides an abstraction for a storage and management of roles. Enums UserManagementMode Provide an enum to define supported user management business flow."
  },
  "api/DNV.Authorization.UserManagement.Abstraction.ICompany-1.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.ICompany-1.html",
    "title": "Interface ICompany<TCompany>",
    "keywords": "Interface ICompany<TCompany> Provides an abstraction for a storage and management of companies. Namespace: DNV.Authorization.UserManagement.Abstraction Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public interface ICompany<TCompany> where TCompany : Company Type Parameters Name Description TCompany The type that represents a company. Methods | Improve this Doc View Source All() Get a list of all company as an asynchronous operation. Declaration Task<IEnumerable<TCompany>> All() Returns Type Description Task<IEnumerable<TCompany>> A Task<TResult> that represents the company list. | Improve this Doc View Source Create(TCompany) Creates a new company in a store as an asynchronous operation. Declaration Task<TCompany> Create(TCompany company) Parameters Type Name Description TCompany company The company to create in the store. Returns Type Description Task<TCompany> A Task<TResult> that represents the company. | Improve this Doc View Source Delete(string) Deletes a company in a store as an asynchronous operation. Declaration Task Delete(string Id) Parameters Type Name Description string Id The company ID to delete. Returns Type Description Task The Task that represents the asynchronous operation. | Improve this Doc View Source List(IEnumerable<string>) Get a list of companies which has the specified ID as an asynchronous operation. Declaration Task<IEnumerable<TCompany>> List(IEnumerable<string> Ids) Parameters Type Name Description IEnumerable<string> Ids The company ID list to look for. Returns Type Description Task<IEnumerable<TCompany>> A Task<TResult> that represents the company list. | Improve this Doc View Source QueryCompanys() Return a querable company dataset. Declaration IQueryable<TCompany> QueryCompanys() Returns Type Description IQueryable<TCompany> | Improve this Doc View Source Read(string) Get a company which has the specified ID as an asynchronous operation. Declaration Task<TCompany> Read(string Id) Parameters Type Name Description string Id The company ID to look for. Returns Type Description Task<TCompany> A Task<TResult> that represents the company. | Improve this Doc View Source ReadByDomain(string) Get a company which has the specified web domain as an asynchronous operation. Declaration Task<TCompany> ReadByDomain(string domain) Parameters Type Name Description string domain The web domain to look for. Returns Type Description Task<TCompany> A Task<TResult> that represents the company. | Improve this Doc View Source Update(TCompany) Updates a company in a store as an asynchronous operation. Declaration Task Update(TCompany company) Parameters Type Name Description TCompany company The company to update in the store. Returns Type Description Task The Task that represents the asynchronous operation. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.IRole-1.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.IRole-1.html",
    "title": "Interface IRole<TRole>",
    "keywords": "Interface IRole<TRole> Provides an abstraction for a storage and management of roles. Namespace: DNV.Authorization.UserManagement.Abstraction Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public interface IRole<TRole> where TRole : Role Type Parameters Name Description TRole The type that represents a role. Methods | Improve this Doc View Source All() Get a list of all role as an asynchronous operation. Declaration Task<IEnumerable<TRole>> All() Returns Type Description Task<IEnumerable<TRole>> A Task<TResult> that represents the role list. | Improve this Doc View Source Create(TRole) Creates a new role in a store as an asynchronous operation. Declaration Task<TRole> Create(TRole role) Parameters Type Name Description TRole role The role to create in the store. Returns Type Description Task<TRole> A Task<TResult> that represents the role. | Improve this Doc View Source Delete(string) Deletes a role in a store as an asynchronous operation. Declaration Task Delete(string Id) Parameters Type Name Description string Id The role ID to delete. Returns Type Description Task The Task that represents the asynchronous operation. | Improve this Doc View Source GetRolesOfCompany(string) Get a list of a company's roles as an asynchronous operation. Declaration Task<IEnumerable<TRole>> GetRolesOfCompany(string companyId) Parameters Type Name Description string companyId The company ID to look for. Returns Type Description Task<IEnumerable<TRole>> A Task<TResult> that represents the role list. | Improve this Doc View Source QueryRoles() Return a querable role dataset. Declaration IQueryable<TRole> QueryRoles() Returns Type Description IQueryable<TRole> | Improve this Doc View Source Read(string) Get a role which has the specified ID as an asynchronous operation. Declaration Task<TRole> Read(string Id) Parameters Type Name Description string Id The role ID to look for. Returns Type Description Task<TRole> A Task<TResult> that represents the role. | Improve this Doc View Source Update(TRole) Updates a role in a store as an asynchronous operation. Declaration Task Update(TRole role) Parameters Type Name Description TRole role The role to update in the store. Returns Type Description Task The Task that represents the asynchronous operation. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.IUser-1.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.IUser-1.html",
    "title": "Interface IUser<TUser>",
    "keywords": "Interface IUser<TUser> Provides an abstraction for a storage and management of roles. Namespace: DNV.Authorization.UserManagement.Abstraction Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public interface IUser<TUser> where TUser : User Type Parameters Name Description TUser The type that represents a user. Methods | Improve this Doc View Source All(PageParam) Get a list of all user as an asynchronous operation. Declaration Task<PaginatedResult<TUser>> All(PageParam pageParam = null) Parameters Type Name Description PageParam pageParam The page index and size PageParam, starting from 1 Returns Type Description Task<PaginatedResult<TUser>> A Task<TResult> that represents the user list. | Improve this Doc View Source Create(TUser) Creates a new user in a store as an asynchronous operation. Declaration Task<TUser> Create(TUser user) Parameters Type Name Description TUser user The user to create in the store. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source Delete(string) Deletes a user in a store as an asynchronous operation. Declaration Task Delete(string Id) Parameters Type Name Description string Id The user ID to delete. Returns Type Description Task The Task that represents the asynchronous operation. | Improve this Doc View Source GetUserByEmail(string) Get a user list by matching email. Declaration Task<TUser> GetUserByEmail(string email) Parameters Type Name Description string email The email address to look for. Returns Type Description Task<TUser> A Task<TResult> that represents the user list. | Improve this Doc View Source GetUsersOfCompany(string, PageParam) Get a user list of a company. Declaration Task<PaginatedResult<TUser>> GetUsersOfCompany(string companyId, PageParam pageParam = null) Parameters Type Name Description string companyId The company ID to look for. PageParam pageParam The page index and size PageParam, starting from 1 Returns Type Description Task<PaginatedResult<TUser>> A Task<TResult> that represents the user list. | Improve this Doc View Source GetUsersOfRole(string) Get a user list of a role Declaration Task<IEnumerable<TUser>> GetUsersOfRole(string roleId) Parameters Type Name Description string roleId The role ID to look for. Returns Type Description Task<IEnumerable<TUser>> A Task<TResult> that represents the user list. | Improve this Doc View Source QueryUsers() Return a querable user dataset. Declaration IQueryable<TUser> QueryUsers() Returns Type Description IQueryable<TUser> | Improve this Doc View Source Read(string) Get a user which has the specified ID as an asynchronous operation. Declaration Task<TUser> Read(string Id) Parameters Type Name Description string Id The user ID to look for. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source ReadByIdentityId(string) Get a user which has the specified Identity ID as an asynchronous operation. Declaration Task<TUser> ReadByIdentityId(string IdentityId) Parameters Type Name Description string IdentityId The identity id to look for. It is an ID provided by Identity provider. It is varacity id if Varacity provide identity. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source Update(TUser) Updates a user in a store as an asynchronous operation. Declaration Task Update(TUser user) Parameters Type Name Description TUser user The user to update in the store. Returns Type Description Task The Task that represents the asynchronous operation. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.IUserSynchronization-1.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.IUserSynchronization-1.html",
    "title": "Interface IUserSynchronization<TUser>",
    "keywords": "Interface IUserSynchronization<TUser> Provides an abstraction for user synchronization between local and third party platform. Namespace: DNV.Authorization.UserManagement.Abstraction Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public interface IUserSynchronization<TUser> where TUser : User Type Parameters Name Description TUser Methods | Improve this Doc View Source PullUserFromSource(TUser) pull a user update from the third party platform. Declaration Task<TUser> PullUserFromSource(TUser user) Parameters Type Name Description TUser user The user to update at the local. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source PushUserToSource(TUser) push a user update to the third party platform. Declaration Task<TUser> PushUserToSource(TUser user) Parameters Type Name Description TUser user The user to update in the third party platform. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source RemoveUserAtLocal(TUser) remove a user or user access at the local. Declaration Task<TUser> RemoveUserAtLocal(TUser user) Parameters Type Name Description TUser user The user to remove at the local. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source RemoveUserAtSource(TUser) remove a user or user access on the third party platform. Declaration Task<TUser> RemoveUserAtSource(TUser user) Parameters Type Name Description TUser user The user to remove at the third party platform. Returns Type Description Task<TUser> A Task<TResult> that represents the user. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.StringHelper.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.StringHelper.html",
    "title": "Class StringHelper",
    "keywords": "Class StringHelper string helper class. Inheritance object StringHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.Abstraction Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public static class StringHelper Methods | Improve this Doc View Source JoinList(IEnumerable<string>, string) Join a list to a string Declaration public static string JoinList(this IEnumerable<string> source, string delimiter) Parameters Type Name Description IEnumerable<string> source The source list to join string delimiter The character delimit the string. Returns Type Description string | Improve this Doc View Source SplitToList(string, char) Split a string and combine all sub strings as a list. Declaration public static List<string> SplitToList(this string source, char delimiter) Parameters Type Name Description string source The source stirng to split. char delimiter The character delimit the string. Returns Type Description List<string>"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.UserManagementMode.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.UserManagementMode.html",
    "title": "Enum UserManagementMode",
    "keywords": "Enum UserManagementMode Provide an enum to define supported user management business flow. Namespace: DNV.Authorization.UserManagement.Abstraction Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public enum UserManagementMode Fields Name Description Company_CompanyRole_User A Role must belongs to a compnay. A User must belongs to one or mutiple companies. A User has one or mutiple company roles. Company_GlobalRole_User Roles desn't belong to any compnay. They are global. A User must belongs to one or mutiple companies. A User has one or mutiple roles. Role_User Roles are global. There is no company. A User has one or mutiple roles. Extension Methods Throws.IfNull<UserManagementMode>(UserManagementMode, string) EnumExtensions.GetPermissionKey(Enum)"
  },
  "api/DNV.Authorization.UserManagement.Abstraction.UserManagementSettings.html": {
    "href": "api/DNV.Authorization.UserManagement.Abstraction.UserManagementSettings.html",
    "title": "Class UserManagementSettings",
    "keywords": "Class UserManagementSettings Provides a class to configure the user management business flow. Inheritance object UserManagementSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.Abstraction Assembly: DNV.Authorization.UserManagement.Abstraction.dll Syntax public class UserManagementSettings Properties | Improve this Doc View Source Mode Gets or sets the user management business flow. Declaration public UserManagementMode Mode { get; set; } Property Value Type Description UserManagementMode Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.AccessCrossCompanyPermissionFilterAttribute.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.AccessCrossCompanyPermissionFilterAttribute.html",
    "title": "Class AccessCrossCompanyPermissionFilterAttribute",
    "keywords": "Class AccessCrossCompanyPermissionFilterAttribute Provides a api controller filter to add permissions check for users when access resource of company they do not belong. Inheritance object Attribute TypeFilterAttribute AccessCrossCompanyPermissionFilterAttribute Implements IFilterFactory IOrderedFilter IFilterMetadata Inherited Members TypeFilterAttribute.CreateInstance(IServiceProvider) TypeFilterAttribute.Arguments TypeFilterAttribute.ImplementationType TypeFilterAttribute.Order TypeFilterAttribute.IsReusable Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = false)] public class AccessCrossCompanyPermissionFilterAttribute : TypeFilterAttribute, IFilterFactory, IOrderedFilter, IFilterMetadata Constructors | Improve this Doc View Source AccessCrossCompanyPermissionFilterAttribute(params object[]) Constructs a new instance of AccessCrossCompanyPermissionFilterAttribute. Declaration public AccessCrossCompanyPermissionFilterAttribute(params object[] permissionsToCheck) Parameters Type Name Description object[] permissionsToCheck A collection of required permissions. | Improve this Doc View Source AccessCrossCompanyPermissionFilterAttribute(params string[]) Constructs a new instance of AccessCrossCompanyPermissionFilterAttribute. Declaration public AccessCrossCompanyPermissionFilterAttribute(params string[] permissionsToCheck) Parameters Type Name Description string[] permissionsToCheck A collection of required permissions. Properties | Improve this Doc View Source PermissionsToCheck Get a collection of required permissions. Declaration public string[] PermissionsToCheck { get; } Property Value Type Description string[] Implements IFilterFactory IOrderedFilter IFilterMetadata Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.AccessibleCompanyFilterAttribute.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.AccessibleCompanyFilterAttribute.html",
    "title": "Class AccessibleCompanyFilterAttribute",
    "keywords": "Class AccessibleCompanyFilterAttribute Provides a api controller filter to check if user has access on a specific company resource. Inheritance object Attribute TypeFilterAttribute AccessibleCompanyFilterAttribute Implements IFilterFactory IOrderedFilter IFilterMetadata Inherited Members TypeFilterAttribute.CreateInstance(IServiceProvider) TypeFilterAttribute.Arguments TypeFilterAttribute.ImplementationType TypeFilterAttribute.Order TypeFilterAttribute.IsReusable Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class AccessibleCompanyFilterAttribute : TypeFilterAttribute, IFilterFactory, IOrderedFilter, IFilterMetadata Remarks The specific Company Id is specified in attribute CompanyIdentityFieldNameFilterAttribute Constructors | Improve this Doc View Source AccessibleCompanyFilterAttribute() Constructs a new instance of AccessibleCompanyFilterAttribute. Declaration public AccessibleCompanyFilterAttribute() Implements IFilterFactory IOrderedFilter IFilterMetadata Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.CompaniesController-2.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.CompaniesController-2.html",
    "title": "Class CompaniesController<TCompany, TUser>",
    "keywords": "Class CompaniesController<TCompany, TUser> Inheritance object ControllerBase UserManagementBaseController<TUser> CompaniesController<TCompany, TUser> Inherited Members UserManagementBaseController<TUser>.GetCurrentUser() UserManagementBaseController<TUser>.IsCompanyAccessible(string) UserManagementBaseController<TUser>.FetchRole<TRole>(string, IPermissionRepository, IRole<TRole>) UserManagementBaseController<TUser>.PruneUserInfo(UserViewModel, string) UserManagementBaseController<TUser>.PruneUserCompanyInfo(UserViewModel, string) UserManagementBaseController<TUser>.PopulateUserRoleInfo(TUser, UserViewModel, IEnumerable<PermissionEntity>) UserManagementBaseController<TUser>.GetAllUsers(IUser<TUser>, IPermissionRepository, PageParam) UserManagementBaseController<TUser>.GetAllRoles<TRole>(IRole<TRole>, IPermissionRepository) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax [Authorize] [Produces(\"application/json\", new string[] { })] [ApiController] [Route(\"api/companies\")] [TypeFilter(typeof(ErrorCodeExceptionFilter))] [ApiExplorerSettings(GroupName = \"UserManagement's Company APIs\")] public class CompaniesController<TCompany, TUser> : UserManagementBaseController<TUser> where TCompany : Company, new() where TUser : User, new() Type Parameters Name Description TCompany TUser Constructors | Improve this Doc View Source CompaniesController(ICompany<TCompany>, IPermissionRepository, IUser<TUser>, PermissionOptions) Declaration public CompaniesController(ICompany<TCompany> companyRepository, IPermissionRepository permissionRepository, IUser<TUser> userRepository, PermissionOptions premissionOptions) Parameters Type Name Description ICompany<TCompany> companyRepository IPermissionRepository permissionRepository IUser<TUser> userRepository PermissionOptions premissionOptions Methods | Improve this Doc View Source CreateCompany(CompanyEditModel) Create a company. Declaration [HttpPost] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageCompany })] [ProducesResponseType(200, Type = typeof(string))] [ProducesResponseType(500, Type = typeof(string))] [ProducesResponseType(400, Type = typeof(string))] public Task<ActionResult> CreateCompany(CompanyEditModel model) Parameters Type Name Description CompanyEditModel model Returns Type Description Task<ActionResult> Remarks Required Permissions: ManageCompany Sample request: { \"name\": \"Item1\", \"description\": \"\", \"domainUrl\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source CreateCompanyFromCustomModel(TCompany) Create a company using custom model. Only if custom company model is used. Declaration [HttpPost] [Route(\"custommodel\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageCompany })] [ProducesResponseType(200, Type = typeof(string))] [ProducesResponseType(500, Type = typeof(string))] [ProducesResponseType(400, Type = typeof(string))] [ApiExplorerSettings(GroupName = \"UserManagement's Company APIs - Custom Model\")] public Task<ActionResult> CreateCompanyFromCustomModel(TCompany model) Parameters Type Name Description TCompany model Returns Type Description Task<ActionResult> Remarks Required Permissions: ManageCompany Sample request: { \"name\": \"Item1\", \"description\": \"\", \"domainUrl\": \"\", \"active\":true, \"customProperty\":\"\", \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source DeleteCompany(string) Delete a company. It is hard delete. Declaration [HttpDelete] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageCompany })] public Task DeleteCompany(string id) Parameters Type Name Description string id Company Id Returns Type Description Task Remarks Required Permissions: ManageCompany | Improve this Doc View Source GetCompany(string) Get a company by companyId Declaration [HttpGet] [Route(\"{companyId}\")] [CompanyIdentityFieldNameFilter(\"companyId\", \"\", \"\")] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<CompanyViewDto> GetCompany(string companyId) Parameters Type Name Description string companyId Company Id Returns Type Description Task<CompanyViewDto> Remarks Required Permission: ViewCompany | Improve this Doc View Source GetCompanyAdmin(string) Declaration [HttpGet] [Route(\"obsoletedapi/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewCompany })] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] public Task<CompanyViewDto> GetCompanyAdmin(string id) Parameters Type Name Description string id Returns Type Description Task<CompanyViewDto> | Improve this Doc View Source GetCompanyByDomain(string) Get a company from its dedicated domain url. Declaration [HttpGet] [Route(\"domain/{*url}\")] [ProducesResponseType(200, Type = typeof(CompanyViewDto))] [ProducesResponseType(500, Type = typeof(string))] [ProducesResponseType(400, Type = typeof(string))] [ProducesResponseType(204, Type = typeof(string))] [ProducesResponseType(403, Type = typeof(string))] public Task<ActionResult> GetCompanyByDomain(string url) Parameters Type Name Description string url Company Domain URL Returns Type Description Task<ActionResult> Remarks Required Permission: None | Improve this Doc View Source GetCompanys() Get all companies. Declaration [HttpGet] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewCompany })] public Task<IEnumerable<CompanyViewDto>> GetCompanys() Returns Type Description Task<IEnumerable<CompanyViewDto>> An array of company Remarks Required Permission: ViewCompany | Improve this Doc View Source UpdateCompany(string, CompanyEditModel) Update a company Declaration [HttpPut] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageCompany })] [ProducesResponseType(200, Type = typeof(string))] [ProducesResponseType(500, Type = typeof(string))] [ProducesResponseType(400, Type = typeof(string))] public Task<ActionResult> UpdateCompany(string id, CompanyEditModel model) Parameters Type Name Description string id CompanyEditModel model Returns Type Description Task<ActionResult> Remarks Required Permissions: ManageCompany Sample request: { \"name\": \"Item1\", \"description\": \"\", \"domainUrl\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source UpdateCompanyFromCustomModel(string, TCompany) Update a company using custom model. Only if custom company model is used. Declaration [HttpPut] [Route(\"custommodel/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageCompany })] [ProducesResponseType(200, Type = typeof(string))] [ProducesResponseType(500, Type = typeof(string))] [ProducesResponseType(400, Type = typeof(string))] [ApiExplorerSettings(GroupName = \"UserManagement's Company APIs - Custom Model\")] public Task<ActionResult> UpdateCompanyFromCustomModel(string id, TCompany model) Parameters Type Name Description string id TCompany model Returns Type Description Task<ActionResult> Remarks Required Permissions: ManageCompany Sample request: { \"name\": \"Item1\", \"description\": \"\", \"domainUrl\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DTO.CompanyEditModel.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DTO.CompanyEditModel.html",
    "title": "Class CompanyEditModel",
    "keywords": "Class CompanyEditModel Represents company information for a company edit record. Inheritance object CompanyEditModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers.DTO Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class CompanyEditModel Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this company is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this company is active, otherwise false. | Improve this Doc View Source Description Gets or sets the company description for this company. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source DomainUrl Gets or sets the company web domain for this company. Declaration public string DomainUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Name Gets or sets the company name for this company. Declaration [Required(AllowEmptyStrings = false)] public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source PermissionKeys Gets or sets the company permissions for this company. Declaration public IEnumerable<string> PermissionKeys { get; set; } Property Value Type Description IEnumerable<string> | Improve this Doc View Source ServiceId Gets or sets the service id for this company. Declaration public string ServiceId { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DTO.CompanyViewDto.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DTO.CompanyViewDto.html",
    "title": "Class CompanyViewDto",
    "keywords": "Class CompanyViewDto Represents company information for a company view record. Inheritance object CompanyViewDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers.DTO Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class CompanyViewDto Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this company is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this company is active, otherwise false. | Improve this Doc View Source CreatedBy Gets or sets the name of user who created this company. Declaration public string CreatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source CreatedOnUtc Gets or sets the UTC date that this company is created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Deleted Gets or sets a flag indicating if this company is deleted or not. Declaration public bool Deleted { get; set; } Property Value Type Description bool Remarks This property is not being used by in the package now. it will be used to support soft delete in future release. | Improve this Doc View Source Description Gets or sets the description name for this company. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source DomainUrl Gets or sets the company domain or sub domain name for this company. Declaration public string DomainUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Id Gets or sets the primary key for this company. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Name Gets or sets the company name for this company. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source Permissions Gets or sets the company permissions for this company. Declaration public IEnumerable<PermissionEntity> Permissions { get; set; } Property Value Type Description IEnumerable<PermissionEntity> Permissions are combined as a string which use semicolon(;) as a delimiter. | Improve this Doc View Source ServiceId Gets or sets the service id for this company. Declaration public string ServiceId { get; set; } Property Value Type Description string | Improve this Doc View Source UpdatedBy Gets or sets the name of user who updated this company last time. Declaration public string UpdatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source UpdatedOnUtc Gets or sets the UTC date that this company is updated. Declaration public DateTime UpdatedOnUtc { get; set; } Property Value Type Description DateTime Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DTO.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DTO.html",
    "title": "Namespace DNV.Authorization.UserManagement.ApiControllers.DTO",
    "keywords": "Namespace DNV.Authorization.UserManagement.ApiControllers.DTO Classes CompanyEditModel Represents company information for a company edit record. CompanyViewDto Represents company information for a company view record. PaginatedResultViewModel<T> RoleEditModel Represents role information for a role edit record. RoleViewDto Represents role information for a role view record.. UserEditModel Represents user information for a user edit record. UserViewModel Represents user information for a user view record."
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DTO.PaginatedResultViewModel-1.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DTO.PaginatedResultViewModel-1.html",
    "title": "Class PaginatedResultViewModel<T>",
    "keywords": "Class PaginatedResultViewModel<T> Inheritance object PaginatedResultViewModel<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers.DTO Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class PaginatedResultViewModel<T> Type Parameters Name Description T Constructors | Improve this Doc View Source PaginatedResultViewModel(PaginatedResult<T>) Declaration public PaginatedResultViewModel(PaginatedResult<T> paginatedResult) Parameters Type Name Description PaginatedResult<T> paginatedResult Properties | Improve this Doc View Source List Declaration public IEnumerable<T> List { get; set; } Property Value Type Description IEnumerable<T> | Improve this Doc View Source PageIndex Declaration public int PageIndex { get; set; } Property Value Type Description int | Improve this Doc View Source PageSize Declaration public int PageSize { get; set; } Property Value Type Description int | Improve this Doc View Source TotalCount Declaration public int? TotalCount { get; set; } Property Value Type Description int? Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DTO.RoleEditModel.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DTO.RoleEditModel.html",
    "title": "Class RoleEditModel",
    "keywords": "Class RoleEditModel Represents role information for a role edit record. Inheritance object RoleEditModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers.DTO Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class RoleEditModel Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this role is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this role is active, otherwise false. | Improve this Doc View Source Description Gets or sets the role description for this role. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Name Gets or sets the role name for this role. Declaration [Required(AllowEmptyStrings = false)] public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source PermissionKeys Gets the company permission list for this role. Declaration [Required] public IList<string> PermissionKeys { get; set; } Property Value Type Description IList<string> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DTO.RoleViewDto.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DTO.RoleViewDto.html",
    "title": "Class RoleViewDto",
    "keywords": "Class RoleViewDto Represents role information for a role view record.. Inheritance object RoleViewDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers.DTO Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class RoleViewDto Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this role is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this role is active, otherwise false. | Improve this Doc View Source Company Gets the company to which this role belongs. Declaration public Company Company { get; set; } Property Value Type Description Company Remarks Do not set this property to change a role's company. Instead, set . It is null if it is a global role. | Improve this Doc View Source CreatedBy Gets or sets the name of user who created this role. Declaration public string CreatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source CreatedOnUtc Gets or sets the UTC date that this role is created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Deleted Gets or sets a flag indicating if this role is deleted or not. Declaration public bool Deleted { get; set; } Property Value Type Description bool Remarks This property is not being used by in the package now. it will be used to support soft delete in future release. | Improve this Doc View Source Description Gets or sets the description for this role. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Id Gets or sets the primary key for this role. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Name Gets or sets the role name for this role. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source Permissions Gets or sets the role permissions for this role. Declaration public IEnumerable<PermissionEntity> Permissions { get; set; } Property Value Type Description IEnumerable<PermissionEntity> Permissions are combined as a string which use semicolon(;) as a delimiter. | Improve this Doc View Source UpdatedBy Gets or sets the name of user who updated this role last time. Declaration public string UpdatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source UpdatedOnUtc Gets or sets the UTC date that this role is updated last time. Declaration public DateTime UpdatedOnUtc { get; set; } Property Value Type Description DateTime Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DTO.UserEditModel.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DTO.UserEditModel.html",
    "title": "Class UserEditModel",
    "keywords": "Class UserEditModel Represents user information for a user edit record. Inheritance object UserEditModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers.DTO Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class UserEditModel Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this user is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this user is active, otherwise false. | Improve this Doc View Source CompanyIds Gets or sets id of company to which this user belongs. Declaration public IList<string> CompanyIds { get; set; } Property Value Type Description IList<string> Company's ids are combined as a string which use semicolon(;) as a delimiter. | Improve this Doc View Source Description Gets or sets the description for this user. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Email Gets or sets the email for this user. Declaration [Required(AllowEmptyStrings = false)] public string Email { get; set; } Property Value Type Description string | Improve this Doc View Source FirstName Gets or sets the first name for this user. Declaration public string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source LastName Gets or sets the last name for this user. Declaration public string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source RoleIds Gets or sets id of roles which this user has. Declaration public IList<string> RoleIds { get; set; } Property Value Type Description IList<string> Role's ids are combined as a string which use semicolon(;) as a delimiter. | Improve this Doc View Source SuperAdmin Gets or sets a flag indicating if this user is super admin or not. Declaration public bool SuperAdmin { get; set; } Property Value Type Description bool True if this user is super admin, otherwise false. | Improve this Doc View Source VeracityId Gets or sets the identity id for this user. Declaration [Required(AllowEmptyStrings = false)] public string VeracityId { get; set; } Property Value Type Description string Remarks It is an id provided by identity provider. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DTO.UserViewModel.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DTO.UserViewModel.html",
    "title": "Class UserViewModel",
    "keywords": "Class UserViewModel Represents user information for a user view record. Inheritance object UserViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers.DTO Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class UserViewModel Properties | Improve this Doc View Source Active Gets or sets a flag indicating if this user is active or not. Declaration public bool Active { get; set; } Property Value Type Description bool True if this user is active, otherwise false. | Improve this Doc View Source Companies Get the list of companys to which this user belongs. Declaration public IEnumerable<CompanyViewDto> Companies { get; set; } Property Value Type Description IEnumerable<CompanyViewDto> Remarks Do not set this property to change a user's company. Instead, set . | Improve this Doc View Source CreatedBy Gets or sets the name of user who created this user. Declaration public string CreatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source CreatedOnUtc Gets or sets the UTC date that this user is created. Declaration public DateTime CreatedOnUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Deleted Gets or sets a flag indicating if this user is deleted or not. Declaration public bool Deleted { get; set; } Property Value Type Description bool Remarks This property is not being used by in the package now. it will be used to support soft delete in future release. | Improve this Doc View Source Description Gets or sets the description for this user. Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Email Gets or sets the email for this user. Declaration public string Email { get; set; } Property Value Type Description string | Improve this Doc View Source FirstName Gets or sets the first name for this user. Declaration public string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source Id Gets or sets the primary key for this user. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source LastName Gets or sets the last name for this user. Declaration public string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source Roles Get the list of roles which this user has. Declaration public IEnumerable<RoleViewDto> Roles { get; set; } Property Value Type Description IEnumerable<RoleViewDto> Remarks Do not set this property to change a user's role. Instead, set . | Improve this Doc View Source SuperAdmin Gets or sets a flag indicating if this user is super admin or not. Declaration public bool SuperAdmin { get; set; } Property Value Type Description bool True if this user is super admin, otherwise false. | Improve this Doc View Source UpdatedBy Gets or sets the name of user who updated this user last time. Declaration public string UpdatedBy { get; set; } Property Value Type Description string | Improve this Doc View Source UpdatedOnUtc Gets or sets the UTC date that this user is updated last time. Declaration public DateTime UpdatedOnUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source VeracityId Gets or sets the identity id for this user. Declaration public string VeracityId { get; set; } Property Value Type Description string Remarks It is an id provided by identity provider. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.DummyUserSynchronization.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.DummyUserSynchronization.html",
    "title": "Class DummyUserSynchronization",
    "keywords": "Class DummyUserSynchronization Inheritance object DummyUserSynchronization Implements IUserSynchronization<User> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class DummyUserSynchronization : IUserSynchronization<User> Methods | Improve this Doc View Source PullUserFromSource(User) pull a user update from the third party platform. Declaration public Task<User> PullUserFromSource(User user) Parameters Type Name Description User user The user to update at the local. Returns Type Description Task<User> A Task<TResult> that represents the user. | Improve this Doc View Source PushUserToSource(User) push a user update to the third party platform. Declaration public Task<User> PushUserToSource(User user) Parameters Type Name Description User user The user to update in the third party platform. Returns Type Description Task<User> A Task<TResult> that represents the user. | Improve this Doc View Source RemoveUserAtLocal(User) remove a user or user access at the local. Declaration public Task<User> RemoveUserAtLocal(User user) Parameters Type Name Description User user The user to remove at the local. Returns Type Description Task<User> A Task<TResult> that represents the user. | Improve this Doc View Source RemoveUserAtSource(User) remove a user or user access on the third party platform. Declaration public Task<User> RemoveUserAtSource(User user) Parameters Type Name Description User user The user to remove at the third party platform. Returns Type Description Task<User> A Task<TResult> that represents the user. Implements IUserSynchronization<TUser> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.GlobalRolesController-2.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.GlobalRolesController-2.html",
    "title": "Class GlobalRolesController<TRole, TUser>",
    "keywords": "Class GlobalRolesController<TRole, TUser> Inheritance object ControllerBase UserManagementBaseController<TUser> GlobalRolesController<TRole, TUser> Inherited Members UserManagementBaseController<TUser>.GetCurrentUser() UserManagementBaseController<TUser>.IsCompanyAccessible(string) UserManagementBaseController<TUser>.FetchRole<TRole>(string, IPermissionRepository, IRole<TRole>) UserManagementBaseController<TUser>.PruneUserInfo(UserViewModel, string) UserManagementBaseController<TUser>.PruneUserCompanyInfo(UserViewModel, string) UserManagementBaseController<TUser>.PopulateUserRoleInfo(TUser, UserViewModel, IEnumerable<PermissionEntity>) UserManagementBaseController<TUser>.GetAllUsers(IUser<TUser>, IPermissionRepository, PageParam) UserManagementBaseController<TUser>.GetAllRoles<TRole>(IRole<TRole>, IPermissionRepository) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax [Authorize] [Produces(\"application/json\", new string[] { })] [ApiController] [Route(\"api/roles\")] [TypeFilter(typeof(ErrorCodeExceptionFilter))] [ApiExplorerSettings(GroupName = \"UserManagement's Role APIs\")] public class GlobalRolesController<TRole, TUser> : UserManagementBaseController<TUser> where TRole : Role, new() where TUser : User, new() Type Parameters Name Description TRole TUser Constructors | Improve this Doc View Source GlobalRolesController(IUser<TUser>, IRole<TRole>, IPermissionRepository, PermissionOptions) Declaration public GlobalRolesController(IUser<TUser> userRepository, IRole<TRole> roleRepository, IPermissionRepository permissionRepository, PermissionOptions premissionOptions) Parameters Type Name Description IUser<TUser> userRepository IRole<TRole> roleRepository IPermissionRepository permissionRepository PermissionOptions premissionOptions Methods | Improve this Doc View Source CreateRole(RoleEditModel) Create a role Declaration [HttpPost] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] public Task<string> CreateRole(RoleEditModel model) Parameters Type Name Description RoleEditModel model Returns Type Description Task<string> Remarks Required Permission: ManageRole Sample request: { \"name\": \"Item1\", \"description\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source CreateRoleFromCustomModel(TRole) Create a role using custom model. Only if custom role model is used. Declaration [HttpPost] [Route(\"custommodel\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] [ApiExplorerSettings(GroupName = \"UserManagement's Role APIs - Custom Model\")] public Task<string> CreateRoleFromCustomModel(TRole model) Parameters Type Name Description TRole model Returns Type Description Task<string> Remarks Required Permission: ManageRole Sample request: { \"name\": \"Item1\", \"description\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source DeleteRole(string) Delete a role. Declaration [HttpDelete] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] public Task DeleteRole(string id) Parameters Type Name Description string id Role Id Returns Type Description Task Remarks Required Permission: ManageRole | Improve this Doc View Source GetRole(string) Get role by role id Declaration [HttpGet] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewRole })] public Task<RoleViewDto> GetRole(string id) Parameters Type Name Description string id Role id Returns Type Description Task<RoleViewDto> Remarks Required Permission: ViewRole | Improve this Doc View Source GetRoles() Get all roles. Declaration [HttpGet] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewRole })] public Task<IEnumerable<RoleViewDto>> GetRoles() Returns Type Description Task<IEnumerable<RoleViewDto>> Remarks Required Permission: ViewRole | Improve this Doc View Source UpdateRole(string, RoleEditModel) Update a role. Declaration [HttpPut] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] public Task UpdateRole(string id, RoleEditModel model) Parameters Type Name Description string id Role Id RoleEditModel model Returns Type Description Task Remarks Required Permission: ManageRole Sample request: { \"name\": \"Item1\", \"description\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source UpdateRoleFromCustomModel(string, TRole) Update a role using custom model. Only if custom role model is used. Declaration [HttpPut] [Route(\"custommodel/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] [ApiExplorerSettings(GroupName = \"UserManagement's Role APIs - Custom Model\")] public Task UpdateRoleFromCustomModel(string id, TRole model) Parameters Type Name Description string id TRole model Returns Type Description Task Remarks Required Permission: ManageRole Sample request: { \"name\": \"Item1\", \"description\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.GlobalUsersController-1.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.GlobalUsersController-1.html",
    "title": "Class GlobalUsersController<TUser>",
    "keywords": "Class GlobalUsersController<TUser> Inheritance object ControllerBase UserManagementBaseController<TUser> GlobalUsersController<TUser> Inherited Members UserManagementBaseController<TUser>.GetCurrentUser() UserManagementBaseController<TUser>.IsCompanyAccessible(string) UserManagementBaseController<TUser>.FetchRole<TRole>(string, IPermissionRepository, IRole<TRole>) UserManagementBaseController<TUser>.PruneUserInfo(UserViewModel, string) UserManagementBaseController<TUser>.PruneUserCompanyInfo(UserViewModel, string) UserManagementBaseController<TUser>.PopulateUserRoleInfo(TUser, UserViewModel, IEnumerable<PermissionEntity>) UserManagementBaseController<TUser>.GetAllUsers(IUser<TUser>, IPermissionRepository, PageParam) UserManagementBaseController<TUser>.GetAllRoles<TRole>(IRole<TRole>, IPermissionRepository) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax [Authorize] [Produces(\"application/json\", new string[] { })] [ApiController] [Route(\"api/users\")] [TypeFilter(typeof(ErrorCodeExceptionFilter))] [ApiExplorerSettings(GroupName = \"UserManagement's User APIs\")] public class GlobalUsersController<TUser> : UserManagementBaseController<TUser> where TUser : User, new() Type Parameters Name Description TUser Constructors | Improve this Doc View Source GlobalUsersController(IUser<TUser>, IUserSynchronization<TUser>, PermissionOptions, IPermissionRepository) Declaration public GlobalUsersController(IUser<TUser> userRepository, IUserSynchronization<TUser> userSynchronization, PermissionOptions premissionOptions, IPermissionRepository permissionRepository) Parameters Type Name Description IUser<TUser> userRepository IUserSynchronization<TUser> userSynchronization PermissionOptions premissionOptions IPermissionRepository permissionRepository Methods | Improve this Doc View Source CreateUser(UserEditModel) Create a user Declaration [HttpPost] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] public Task<string> CreateUser(UserEditModel model) Parameters Type Name Description UserEditModel model Returns Type Description Task<string> Remarks Required Permissions: ManageUser Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source CreateUserFromCustommodel(TUser) Create a user using custom model. Only if custom user model is used. Declaration [HttpPost] [Route(\"custommodel\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] [ApiExplorerSettings(GroupName = \"UserManagement's User APIs - Custom Model\")] public Task<string> CreateUserFromCustommodel(TUser model) Parameters Type Name Description TUser model Returns Type Description Task<string> Remarks Required Permissions: ManageUser Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source DeleteUser(string) Delete a user Declaration [HttpDelete] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] public Task DeleteUser(string id) Parameters Type Name Description string id User Id Returns Type Description Task Remarks Required Permissions: ManageUser | Improve this Doc View Source GetUser(string) Get a user by user id Declaration [HttpGet] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] public Task<UserViewModel> GetUser(string id) Parameters Type Name Description string id User Id Returns Type Description Task<UserViewModel> Remarks Required Permission: ViewUser | Improve this Doc View Source GetUserByEmail(string) Get a user by user email Declaration [HttpGet] [Route(\"email/{email}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] public Task<UserViewModel> GetUserByEmail(string email) Parameters Type Name Description string email User email Returns Type Description Task<UserViewModel> Remarks Required Permission: ViewUser | Improve this Doc View Source GetUserByIdentityId() Get current user info. Declaration [HttpGet] [Route(\"~/api/users/currentUser\")] public Task<UserViewModel> GetUserByIdentityId() Returns Type Description Task<UserViewModel> Remarks No Required Permissions | Improve this Doc View Source GetUserCorssCompanyPermissions(string) Get a user's all permissions Declaration [HttpGet] [Route(\"~/api/users/{id}/permissions\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] public Task<IEnumerable<string>> GetUserCorssCompanyPermissions(string id) Parameters Type Name Description string id User Id Returns Type Description Task<IEnumerable<string>> Remarks No Required Permissions | Improve this Doc View Source GetUsers() Get all users Declaration [HttpGet] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] public Task<IEnumerable<UserViewModel>> GetUsers() Returns Type Description Task<IEnumerable<UserViewModel>> Remarks Required Permission: ViewUser | Improve this Doc View Source GetUsersPaged(int, int) Get all users, grouping large sets of data into pages. Declaration [HttpGet] [Route(\"{page:int}/{size:int}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] public Task<PaginatedResultViewModel<UserViewModel>> GetUsersPaged(int page = 0, int size = 0) Parameters Type Name Description int page The page index, starting from 1 int size the page size Returns Type Description Task<PaginatedResultViewModel<UserViewModel>> Remarks Required Permission: ViewUser | Improve this Doc View Source UpdateUser(string, UserEditModel) Update a user Declaration [HttpPut] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] public Task UpdateUser(string id, UserEditModel model) Parameters Type Name Description string id User Id UserEditModel model Returns Type Description Task Remarks Required Permissions: ManageUser Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source UpdateUserFromCustomModel(string, TUser) Update a user using custom model. Only if custom user model is used. Declaration [HttpPut] [Route(\"custommodel/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] [ApiExplorerSettings(GroupName = \"UserManagement's User APIs - Custom Model\")] public Task UpdateUserFromCustomModel(string id, TUser model) Parameters Type Name Description string id User Id TUser model Returns Type Description Task Remarks Required Permissions: ManageUser Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.html",
    "title": "Namespace DNV.Authorization.UserManagement.ApiControllers",
    "keywords": "Namespace DNV.Authorization.UserManagement.ApiControllers Classes AccessCrossCompanyPermissionFilterAttribute Provides a api controller filter to add permissions check for users when access resource of company they do not belong. AccessibleCompanyFilterAttribute Provides a api controller filter to check if user has access on a specific company resource. CompaniesController<TCompany, TUser> DummyUserSynchronization GlobalRolesController<TRole, TUser> GlobalUsersController<TUser> RolesController<TCompany, TRole, TUser> UserManagementBaseController<TUser> UserManagementDefaultSetup Provides extension methods to register user management related services to IServiceCollection UserManagementOptions Provides an option to configure the user management module. UsersController<TRole, TUser>"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.RolesController-3.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.RolesController-3.html",
    "title": "Class RolesController<TCompany, TRole, TUser>",
    "keywords": "Class RolesController<TCompany, TRole, TUser> Inheritance object ControllerBase UserManagementBaseController<TUser> RolesController<TCompany, TRole, TUser> Inherited Members UserManagementBaseController<TUser>.GetCurrentUser() UserManagementBaseController<TUser>.IsCompanyAccessible(string) UserManagementBaseController<TUser>.FetchRole<TRole>(string, IPermissionRepository, IRole<TRole>) UserManagementBaseController<TUser>.PruneUserInfo(UserViewModel, string) UserManagementBaseController<TUser>.PruneUserCompanyInfo(UserViewModel, string) UserManagementBaseController<TUser>.PopulateUserRoleInfo(TUser, UserViewModel, IEnumerable<PermissionEntity>) UserManagementBaseController<TUser>.GetAllUsers(IUser<TUser>, IPermissionRepository, PageParam) UserManagementBaseController<TUser>.GetAllRoles<TRole>(IRole<TRole>, IPermissionRepository) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax [Authorize] [Produces(\"application/json\", new string[] { })] [ApiController] [TypeFilter(typeof(ErrorCodeExceptionFilter))] [Route(\"api/company/{companyId}/roles\")] [CompanyIdentityFieldNameFilter(\"companyId\", \"\", \"\")] [ApiExplorerSettings(GroupName = \"UserManagement's Role APIs\")] public class RolesController<TCompany, TRole, TUser> : UserManagementBaseController<TUser> where TCompany : Company, new() where TRole : Role, new() where TUser : User, new() Type Parameters Name Description TCompany TRole TUser Constructors | Improve this Doc View Source RolesController(IUser<TUser>, IRole<TRole>, ICompany<TCompany>, IPermissionRepository, PermissionOptions) Declaration public RolesController(IUser<TUser> userRepository, IRole<TRole> roleRepository, ICompany<TCompany> companyRepository, IPermissionRepository permissionRepository, PermissionOptions premissionOptions) Parameters Type Name Description IUser<TUser> userRepository IRole<TRole> roleRepository ICompany<TCompany> companyRepository IPermissionRepository permissionRepository PermissionOptions premissionOptions Methods | Improve this Doc View Source CreateCrosscompanyRole(string, RoleEditModel) Declaration [HttpPost] [Route(\"~/api/crosscompany/{companyId}/roles\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole, PermissionMatrix.Premissions.ViewCompany })] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] public Task<string> CreateCrosscompanyRole(string companyId, RoleEditModel model) Parameters Type Name Description string companyId RoleEditModel model Returns Type Description Task<string> | Improve this Doc View Source CreateCrosscompanyRoleFromCustomModel(TRole) Declaration [HttpPost] [Route(\"~/api/crosscompany/roles/custommodel\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole, PermissionMatrix.Premissions.ViewCompany })] [ApiExplorerSettings(GroupName = \"UserManagement's Role APIs - Custom Model\")] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] public Task<string> CreateCrosscompanyRoleFromCustomModel(TRole model) Parameters Type Name Description TRole model Returns Type Description Task<string> | Improve this Doc View Source CreateRole(string, RoleEditModel) Create a role Declaration [HttpPost] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<string> CreateRole(string companyId, RoleEditModel model) Parameters Type Name Description string companyId Company Id RoleEditModel model Returns Type Description Task<string> Remarks Required Permission for user in the this company: ManageRole Required Permission for user not in this company: ManageRole,ViewCompany Sample request: { \"name\": \"Item1\", \"description\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source CreateRoleFromCustomModel(string, TRole) Create a role using custom model. Only if custom role model is used. Declaration [HttpPost] [Route(\"custommodel\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] [ApiExplorerSettings(GroupName = \"UserManagement's Role APIs - Custom Model\")] public Task<string> CreateRoleFromCustomModel(string companyId, TRole model) Parameters Type Name Description string companyId Company Id TRole model Returns Type Description Task<string> Remarks Required Permission for user in the this company: ManageRole Required Permission for user not in this company: ManageRole,ViewCompany Sample request: { \"name\": \"Item1\", \"description\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source DeleteCrosscompanyRole(string) Declaration [HttpDelete] [Route(\"~/api/crosscompany/roles/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole, PermissionMatrix.Premissions.ViewCompany })] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] public Task DeleteCrosscompanyRole(string id) Parameters Type Name Description string id Returns Type Description Task | Improve this Doc View Source DeleteRole(string, string) Delete Role Declaration [HttpDelete] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task DeleteRole(string companyId, string id) Parameters Type Name Description string companyId Company Id string id Role Id Returns Type Description Task Remarks Required Permission for user in the this company: ManageRole Required Permission for user not in this company: ManageRole,ViewCompany | Improve this Doc View Source GetCompanyRoles(string) Get all roles of a company. Declaration [HttpGet] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewRole })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<IEnumerable<RoleViewDto>> GetCompanyRoles(string companyId) Parameters Type Name Description string companyId Company Id Returns Type Description Task<IEnumerable<RoleViewDto>> Remarks Required Permission for user in the this company: ViewRole Required Permission for user not in this company: ViewRole,ViewCompany | Improve this Doc View Source GetCrossCompanyRoles(string) Declaration [HttpGet] [Route(\"~/api/crosscompany/roles/{companyid}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewRole, PermissionMatrix.Premissions.ViewCompany })] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] public Task<IEnumerable<RoleViewDto>> GetCrossCompanyRoles(string companyid) Parameters Type Name Description string companyid Returns Type Description Task<IEnumerable<RoleViewDto>> | Improve this Doc View Source GetCrosscompanyRole(string) Declaration [HttpGet] [Route(\"~/api/crosscompany/roles/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewRole, PermissionMatrix.Premissions.ViewCompany })] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] public Task<RoleViewDto> GetCrosscompanyRole(string id) Parameters Type Name Description string id Returns Type Description Task<RoleViewDto> | Improve this Doc View Source GetRole(string, string) Get a role by its id Declaration [HttpGet] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewRole })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<RoleViewDto> GetRole(string companyId, string id) Parameters Type Name Description string companyId Company Id string id Role Id Returns Type Description Task<RoleViewDto> Remarks Required Permission for user in the this company: ViewRole Required Permission for user not in this company: ViewRole,ViewCompany | Improve this Doc View Source GetRoles() Get all roles Declaration [HttpGet] [Route(\"~/api/roles\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewRole, PermissionMatrix.Premissions.ViewCompany })] public Task<IEnumerable<RoleViewDto>> GetRoles() Returns Type Description Task<IEnumerable<RoleViewDto>> Remarks Required Permission: ViewRole, ViewCompany | Improve this Doc View Source UpdateCrosscompanyRole(string, string, RoleEditModel) Declaration [HttpPut] [Route(\"~/api/crosscompany/{companyId}/roles/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole, PermissionMatrix.Premissions.ViewCompany })] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] public Task UpdateCrosscompanyRole(string id, string companyId, RoleEditModel model) Parameters Type Name Description string id string companyId RoleEditModel model Returns Type Description Task | Improve this Doc View Source UpdateCrosscompanyRoleFromCustomModel(string, TRole) Declaration [HttpPut] [Route(\"~/api/crosscompany/roles/custommodel/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole, PermissionMatrix.Premissions.ViewCompany })] [ApiExplorerSettings(GroupName = \"UserManagement's Role APIs - Custom Model\")] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] public Task UpdateCrosscompanyRoleFromCustomModel(string id, TRole model) Parameters Type Name Description string id TRole model Returns Type Description Task | Improve this Doc View Source UpdateRole(string, string, RoleEditModel) Update a role Declaration [HttpPut] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task UpdateRole(string companyId, string id, RoleEditModel model) Parameters Type Name Description string companyId Company Id string id Role Id RoleEditModel model Returns Type Description Task Remarks Required Permission for user in the this company: ManageRole Required Permission for user not in this company: ManageRole,ViewCompany Sample request: { \"name\": \"Item1\", \"description\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } | Improve this Doc View Source UpdateRoleFromCustomModel(string, string, TRole) Update a role using custom model. Only if custom role model is used. Declaration [HttpPut] [Route(\"custommodel/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageRole })] [ApiExplorerSettings(GroupName = \"UserManagement's Role APIs - Custom Model\")] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task UpdateRoleFromCustomModel(string companyId, string id, TRole model) Parameters Type Name Description string companyId Company Id string id Role Id TRole model Returns Type Description Task Remarks Required Permission for user in the this company: ManageRole Required Permission for user not in this company: ManageRole,ViewCompany Sample request: { \"name\": \"Item1\", \"description\": \"\", \"active\":true, \"permissionKeys\":[\"ReadWeather\",\"ManageWeather\"] } Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.UserManagementBaseController-1.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.UserManagementBaseController-1.html",
    "title": "Class UserManagementBaseController<TUser>",
    "keywords": "Class UserManagementBaseController<TUser> Inheritance object ControllerBase UserManagementBaseController<TUser> CompaniesController<TCompany, TUser> GlobalRolesController<TRole, TUser> GlobalUsersController<TUser> RolesController<TCompany, TRole, TUser> UsersController<TRole, TUser> Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class UserManagementBaseController<TUser> : ControllerBase where TUser : User, new() Type Parameters Name Description TUser Constructors | Improve this Doc View Source UserManagementBaseController(IUser<TUser>, PermissionOptions) Declaration protected UserManagementBaseController(IUser<TUser> userRepository, PermissionOptions premissionOptions) Parameters Type Name Description IUser<TUser> userRepository PermissionOptions premissionOptions Methods | Improve this Doc View Source FetchRole<TRole>(string, IPermissionRepository, IRole<TRole>) Declaration protected Task<RoleViewDto> FetchRole<TRole>(string id, IPermissionRepository permissionRepository, IRole<TRole> roleRepository) where TRole : Role, new() Parameters Type Name Description string id IPermissionRepository permissionRepository IRole<TRole> roleRepository Returns Type Description Task<RoleViewDto> Type Parameters Name Description TRole | Improve this Doc View Source GetAllRoles<TRole>(IRole<TRole>, IPermissionRepository) Declaration protected Task<IEnumerable<RoleViewDto>> GetAllRoles<TRole>(IRole<TRole> roleRepository, IPermissionRepository permissionRepository) where TRole : Role, new() Parameters Type Name Description IRole<TRole> roleRepository IPermissionRepository permissionRepository Returns Type Description Task<IEnumerable<RoleViewDto>> Type Parameters Name Description TRole | Improve this Doc View Source GetAllUsers(IUser<TUser>, IPermissionRepository, PageParam) Declaration protected Task<PaginatedResult<UserViewModel>> GetAllUsers(IUser<TUser> userRepository, IPermissionRepository permissionRepository, PageParam pageParam = null) Parameters Type Name Description IUser<TUser> userRepository IPermissionRepository permissionRepository PageParam pageParam Returns Type Description Task<PaginatedResult<UserViewModel>> | Improve this Doc View Source GetCurrentUser() Declaration protected Task<TUser> GetCurrentUser() Returns Type Description Task<TUser> | Improve this Doc View Source IsCompanyAccessible(string) Declaration protected Task<bool> IsCompanyAccessible(string companyId) Parameters Type Name Description string companyId Returns Type Description Task<bool> | Improve this Doc View Source PopulateUserRoleInfo(TUser, UserViewModel, IEnumerable<PermissionEntity>) Declaration protected UserViewModel PopulateUserRoleInfo(TUser user, UserViewModel userViewModel, IEnumerable<PermissionEntity> allPermissions) Parameters Type Name Description TUser user UserViewModel userViewModel IEnumerable<PermissionEntity> allPermissions Returns Type Description UserViewModel | Improve this Doc View Source PruneUserCompanyInfo(UserViewModel, string) Declaration protected UserViewModel PruneUserCompanyInfo(UserViewModel user, string companyId) Parameters Type Name Description UserViewModel user string companyId Returns Type Description UserViewModel | Improve this Doc View Source PruneUserInfo(UserViewModel, string) Declaration protected UserViewModel PruneUserInfo(UserViewModel user, string companyId) Parameters Type Name Description UserViewModel user string companyId Returns Type Description UserViewModel Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.UserManagementDefaultSetup.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.UserManagementDefaultSetup.html",
    "title": "Class UserManagementDefaultSetup",
    "keywords": "Class UserManagementDefaultSetup Provides extension methods to register user management related services to IServiceCollection Inheritance object UserManagementDefaultSetup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public static class UserManagementDefaultSetup Methods | Improve this Doc View Source AddUserManagement(IServiceCollection, UserManagementOptions) Thie extension methods will setup user management module with built in services and data models:Company,Role and User. Declaration public static IServiceCollection AddUserManagement(this IServiceCollection services, UserManagementOptions options = null) Parameters Type Name Description IServiceCollection services IServiceCollection UserManagementOptions options A instance of UserManagementOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection | Improve this Doc View Source AddUserManagementWithCustomModelAndCRUD<TCompany, TRole, TUser>(IServiceCollection, UserManagementOptions) customized data access service to be registered into IServiceCollection at other place. customized company, role and user model should be specified to replace generic type: TCompany, TRole, TUser. Declaration public static IServiceCollection AddUserManagementWithCustomModelAndCRUD<TCompany, TRole, TUser>(this IServiceCollection services, UserManagementOptions options) where TCompany : Company, new() where TRole : Role, new() where TUser : User, new() Parameters Type Name Description IServiceCollection services IServiceCollection UserManagementOptions options A instance of UserManagementOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TCompany The type that represents a customized company model.It mush be inherited from Company. TRole The type that represents a customized role model.It mush be inherited from Role. TUser The type that represents a customized user model.It mush be inherited from User. Remarks For example, services.AddUserManagementWithCustomModel<Company,Role,User>( ... }); services.AddDbContext<UserManagementContext>(options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\")) .AddScoped<IUserPermissionReader, UserPermissionReader>() .AddScoped<IRole<Role>, RoleRepository>() .AddScoped<IUser<User>, UserRepository>() .AddScoped<ICompany<Company>, CompanyRepository>(); | Improve this Doc View Source AddUserManagementWithCustomModel<TUser>(IServiceCollection, UserManagementOptions) Thie extension methods will setup user management module with built in services and data models:Company and Role. A customized user model should be specified to replace generic type: TUser Declaration public static IServiceCollection AddUserManagementWithCustomModel<TUser>(this IServiceCollection services, UserManagementOptions options = null) where TUser : User, new() Parameters Type Name Description IServiceCollection services IServiceCollection UserManagementOptions options A instance of UserManagementOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TUser The type that represents a customized user model.It mush be inherited from User. Remarks For example, services.AddUserManagementWithCustomModel<User>( ... }); | Improve this Doc View Source AddUserManagementWithCustomModel<TCompany, TUser>(IServiceCollection, UserManagementOptions) Thie extension methods will setup user management module with built in services and data models:Role. customized company and user model should be specified to replace generic type: TCompany, TUser Declaration public static IServiceCollection AddUserManagementWithCustomModel<TCompany, TUser>(this IServiceCollection services, UserManagementOptions options = null) where TCompany : Company, new() where TUser : User, new() Parameters Type Name Description IServiceCollection services IServiceCollection UserManagementOptions options A instance of UserManagementOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TCompany The type that represents a customized company model.It mush be inherited from Company. TUser The type that represents a customized user model.It mush be inherited from User. Remarks For example, services.AddUserManagementWithCustomModel<Company,User>( ... }); | Improve this Doc View Source AddUserManagementWithCustomModel<TCompany, TRole, TUser>(IServiceCollection, UserManagementOptions) Thie extension methods will setup user management module with built in services. customized company, role and user model should be specified to replace generic type: TCompany, TRole, TUser Declaration public static IServiceCollection AddUserManagementWithCustomModel<TCompany, TRole, TUser>(this IServiceCollection services, UserManagementOptions options = null) where TCompany : Company, new() where TRole : Role, new() where TUser : User, new() Parameters Type Name Description IServiceCollection services IServiceCollection UserManagementOptions options A instance of UserManagementOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TCompany The type that represents a customized company model.It mush be inherited from Company. TRole The type that represents a customized role model.It mush be inherited from Role. TUser The type that represents a customized user model.It mush be inherited from User. Remarks For example, services.AddUserManagementWithCustomModel<Company,Role,User>( ... });"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.UserManagementOptions.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.UserManagementOptions.html",
    "title": "Class UserManagementOptions",
    "keywords": "Class UserManagementOptions Provides an option to configure the user management module. Inheritance object UserManagementOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax public class UserManagementOptions Properties | Improve this Doc View Source Mode Gets or sets the UserManagementMode. Declaration public UserManagementMode Mode { get; set; } Property Value Type Description UserManagementMode Remarks By default, it is Company_CompanyRole_User. | Improve this Doc View Source PermissionOptions Gets or sets the PermissionOptions. For example, Get user identity from name claim in windows authentication: PermissionOptions = new PermissionOptions{ GetUserIdentity = (userPrincipal) => userPrincipal.Claims.FirstOrDefault(t => t.Type == \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\")?.Value, HandleUnauthorizedAccess = BuiltinUnauthorizedAccessHandler.Return403ForbiddenCode} Declaration public PermissionOptions PermissionOptions { get; set; } Property Value Type Description PermissionOptions Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.ApiControllers.UsersController-2.html": {
    "href": "api/DNV.Authorization.UserManagement.ApiControllers.UsersController-2.html",
    "title": "Class UsersController<TRole, TUser>",
    "keywords": "Class UsersController<TRole, TUser> Inheritance object ControllerBase UserManagementBaseController<TUser> UsersController<TRole, TUser> Inherited Members UserManagementBaseController<TUser>.GetCurrentUser() UserManagementBaseController<TUser>.IsCompanyAccessible(string) UserManagementBaseController<TUser>.FetchRole<TRole>(string, IPermissionRepository, IRole<TRole>) UserManagementBaseController<TUser>.PruneUserInfo(UserViewModel, string) UserManagementBaseController<TUser>.PruneUserCompanyInfo(UserViewModel, string) UserManagementBaseController<TUser>.PopulateUserRoleInfo(TUser, UserViewModel, IEnumerable<PermissionEntity>) UserManagementBaseController<TUser>.GetAllUsers(IUser<TUser>, IPermissionRepository, PageParam) UserManagementBaseController<TUser>.GetAllRoles<TRole>(IRole<TRole>, IPermissionRepository) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.ApiControllers Assembly: DNV.Authorization.UserManagement.ApiControllers.dll Syntax [Authorize] [Produces(\"application/json\", new string[] { })] [ApiController] [TypeFilter(typeof(ErrorCodeExceptionFilter))] [Route(\"api/company/{companyId}/users\")] [CompanyIdentityFieldNameFilter(\"companyId\", \"\", \"\")] [ApiExplorerSettings(GroupName = \"UserManagement's User APIs\")] public class UsersController<TRole, TUser> : UserManagementBaseController<TUser> where TRole : Role, new() where TUser : User, new() Type Parameters Name Description TRole TUser Constructors | Improve this Doc View Source UsersController(IUser<TUser>, IRole<TRole>, IUserSynchronization<TUser>, PermissionOptions, IPermissionRepository, UserManagementSettings) Declaration public UsersController(IUser<TUser> userRepository, IRole<TRole> roleRepository, IUserSynchronization<TUser> userSynchronization, PermissionOptions premissionOptions, IPermissionRepository permissionRepository, UserManagementSettings userManagementSettings) Parameters Type Name Description IUser<TUser> userRepository IRole<TRole> roleRepository IUserSynchronization<TUser> userSynchronization PermissionOptions premissionOptions IPermissionRepository permissionRepository UserManagementSettings userManagementSettings Methods | Improve this Doc View Source CreateCrossCompanyUser(UserEditModel) Create a user. Only using it if user's company is unknown. Declaration [HttpPost] [Route(\"~/api/admin/users\")] [ProducesResponseType(200, Type = typeof(string))] [ProducesResponseType(500, Type = typeof(string))] [ProducesResponseType(400, Type = typeof(string))] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser, PermissionMatrix.Premissions.ViewCompany })] public Task<ActionResult> CreateCrossCompanyUser(UserEditModel model) Parameters Type Name Description UserEditModel model Returns Type Description Task<ActionResult> Remarks Required Permission: ManageUser, ViewCompany Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source CreateCrossCompanyUserFromCustomModel(TUser) Create a user using custom model. Only if custom user model is used. Only using it if user's company is unknown. Declaration [HttpPost] [Route(\"~/api/admin/users/custommodel\")] [ProducesResponseType(200, Type = typeof(string))] [ProducesResponseType(500, Type = typeof(string))] [ProducesResponseType(400, Type = typeof(string))] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser, PermissionMatrix.Premissions.ViewCompany })] [ApiExplorerSettings(GroupName = \"UserManagement's User APIs - Custom Model\")] public Task<ActionResult> CreateCrossCompanyUserFromCustomModel(TUser model) Parameters Type Name Description TUser model Returns Type Description Task<ActionResult> Remarks Required Permission: ManageUser, ViewCompany Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source CreateUser(string, UserEditModel) Create a user. Declaration [HttpPost] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<string> CreateUser(string companyId, UserEditModel model) Parameters Type Name Description string companyId Company Id UserEditModel model Returns Type Description Task<string> Remarks Required Permission for user in the this company: ManageUser Required Permission for user not in this company: ManageUser,ViewCompany Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source CreateUserFromCustommodel(string, TUser) Create a user using custom model. Only if custom user model is used. Declaration [HttpPost] [Route(\"custommodel\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] [ApiExplorerSettings(GroupName = \"UserManagement's User APIs - Custom Model\")] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<string> CreateUserFromCustommodel(string companyId, TUser model) Parameters Type Name Description string companyId Company Id TUser model Returns Type Description Task<string> Remarks Required Permission for user in the this company: ManageUser Required Permission for user not in this company: ManageUser,ViewCompany Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source DeleteCrossCompanyUser(string) Delete a user.Only using it if user's company is unknown. Declaration [HttpDelete] [Route(\"~/api/admin/users/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser, PermissionMatrix.Premissions.ViewCompany })] public Task DeleteCrossCompanyUser(string id) Parameters Type Name Description string id User Id Returns Type Description Task Remarks Required Permission: ManageUser, ViewCompany | Improve this Doc View Source DeleteUser(string, string) Delete a user Declaration [HttpDelete] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task DeleteUser(string companyId, string id) Parameters Type Name Description string companyId Company Id string id User Id Returns Type Description Task Remarks Required Permission for user in the this company: ManageUser Required Permission for user not in this company: ManageUser,ViewCompany | Improve this Doc View Source GetCompanyUserByIdentityId(string) Get Current user info with user's permission in this company. Declaration [HttpGet] [Route(\"~/api/company/{companyId}/users/currentUser\")] public Task<UserViewModel> GetCompanyUserByIdentityId(string companyId) Parameters Type Name Description string companyId Company Id Returns Type Description Task<UserViewModel> Remarks No permission is required | Improve this Doc View Source GetCompanyUsers(string) Declaration [HttpGet] [Route(\"~/api/admin/{companyid}/users\")] [Obsolete(\"It's an obsoleted end point. not suggest to use.\", true)] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser, PermissionMatrix.Premissions.ViewCompany })] public Task<IEnumerable<UserViewModel>> GetCompanyUsers(string companyid) Parameters Type Name Description string companyid Returns Type Description Task<IEnumerable<UserViewModel>> | Improve this Doc View Source GetCrossCompanyUser(string) Get a user's info. Only using it if user's company is unknown. Declaration [HttpGet] [Route(\"~/api/admin/users/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser, PermissionMatrix.Premissions.ViewCompany })] public Task<UserViewModel> GetCrossCompanyUser(string id) Parameters Type Name Description string id User Id Returns Type Description Task<UserViewModel> Remarks Required Permission: ViewUser,ViewCompany | Improve this Doc View Source GetCrossCompanyUserByEmail(string) Get a user's info. Only using it if user's company is unknown. Declaration [HttpGet] [Route(\"~/api/admin/users/email/{email}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser, PermissionMatrix.Premissions.ViewCompany })] public Task<UserViewModel> GetCrossCompanyUserByEmail(string email) Parameters Type Name Description string email User Email Returns Type Description Task<UserViewModel> Remarks Required Permission: ViewUser,ViewCompany | Improve this Doc View Source GetCrossCompanyUsers() Get all users. Declaration [HttpGet] [Route(\"~/api/admin/users\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser, PermissionMatrix.Premissions.ViewCompany })] public Task<IEnumerable<UserViewModel>> GetCrossCompanyUsers() Returns Type Description Task<IEnumerable<UserViewModel>> Remarks Required Permission: ViewUser,ViewCompany | Improve this Doc View Source GetCrossCompanyUsersGetUsersPaged(int, int) Get all users, grouping large sets of data into pages. Declaration [HttpGet] [Route(\"~/api/admin/users/{page:int}/{size:int}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser, PermissionMatrix.Premissions.ViewCompany })] public Task<PaginatedResultViewModel<UserViewModel>> GetCrossCompanyUsersGetUsersPaged(int page = 0, int size = 0) Parameters Type Name Description int page The page index, starting from 1 int size the page size Returns Type Description Task<PaginatedResultViewModel<UserViewModel>> Remarks Required Permission: ViewUser,ViewCompany | Improve this Doc View Source GetUser(string, string) Get user info by user id Declaration [HttpGet] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<UserViewModel> GetUser(string companyId, string id) Parameters Type Name Description string companyId Company Id string id User Id Returns Type Description Task<UserViewModel> Remarks Required Permission for user in the this company: ViewUser Required Permission for user not in this company: ViewUser,ViewCompany | Improve this Doc View Source GetUserByEmail(string, string) Get user info by user email Declaration [HttpGet] [Route(\"email/{email}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<UserViewModel> GetUserByEmail(string companyId, string email) Parameters Type Name Description string companyId Company Id string email User email Returns Type Description Task<UserViewModel> Remarks Required Permission for user in the this company: ViewUser Required Permission for user not in this company: ViewUser,ViewCompany | Improve this Doc View Source GetUserByIdentityId() Get Current user info with user's all permission Declaration [HttpGet] [Route(\"~/api/users/currentUser\")] public Task<UserViewModel> GetUserByIdentityId() Returns Type Description Task<UserViewModel> Remarks No permission is required | Improve this Doc View Source GetUserCorssCompanyPermissions(string) Get a user's all permissions. This API should only be used in Company_GlobalRole_User mode Declaration [HttpGet] [Route(\"~/api/users/{id}/permissions\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] public Task<IEnumerable<string>> GetUserCorssCompanyPermissions(string id) Parameters Type Name Description string id User Id Returns Type Description Task<IEnumerable<string>> Remarks Required Permission for user in the this company: ViewUser Required Permission for user not in this company: ViewUser,ViewCompany | Improve this Doc View Source GetUserPermissions(string, string) Ger a user's permission in this company. Declaration [HttpGet] [Route(\"~/api/company/{companyId}/users/{id}/permissions\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] public Task<IEnumerable<string>> GetUserPermissions(string companyId, string id) Parameters Type Name Description string companyId Company Id string id User Id Returns Type Description Task<IEnumerable<string>> Remarks Required Permission for user in the this company: ViewUser Required Permission for user not in this company: ViewUser,ViewCompany | Improve this Doc View Source GetUsers(string) Get all user of a company Declaration [HttpGet] [Route(\"\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<IEnumerable<UserViewModel>> GetUsers(string companyId) Parameters Type Name Description string companyId Company Id Returns Type Description Task<IEnumerable<UserViewModel>> Remarks Required Permission for user in the this company: ViewUser Required Permission for user not in this company: ViewUser,ViewCompany | Improve this Doc View Source GetUsersPaged(string, int, int) Get all user of a company, grouping large sets of data into pages. Declaration [HttpGet] [Route(\"{page:int}/{size:int}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ViewUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task<PaginatedResultViewModel<UserViewModel>> GetUsersPaged(string companyId, int page = 0, int size = 0) Parameters Type Name Description string companyId Company Id int page The page index, starting from 1 int size the page size Returns Type Description Task<PaginatedResultViewModel<UserViewModel>> Remarks Required Permission for user in the this company: ViewUser Required Permission for user not in this company: ViewUser,ViewCompany | Improve this Doc View Source UpdateCrossCompanyUser(string, UserEditModel) Update a user.Only using it if user's company is unknown. Declaration [HttpPut] [Route(\"~/api/admin/users/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser, PermissionMatrix.Premissions.ViewCompany })] public Task UpdateCrossCompanyUser(string id, UserEditModel model) Parameters Type Name Description string id User Id UserEditModel model Returns Type Description Task Remarks Required Permission: ManageUser, ViewCompany Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source UpdateCrossCompanyUserFromCustomModel(string, TUser) Update a user using custom model. Only if custom user model is used. Only using it if user's company is unknown. Declaration [HttpPut] [Route(\"~/api/admin/users/custommodel/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser, PermissionMatrix.Premissions.ViewCompany })] [ApiExplorerSettings(GroupName = \"UserManagement's User APIs - Custom Model\")] public Task UpdateCrossCompanyUserFromCustomModel(string id, TUser model) Parameters Type Name Description string id User Id TUser model Returns Type Description Task Remarks Required Permission: ManageUser, ViewCompany Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source UpdateUser(string, string, UserEditModel) Update a user Declaration [HttpPut] [Route(\"{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] public Task UpdateUser(string companyId, string id, UserEditModel model) Parameters Type Name Description string companyId Company Id string id User Id UserEditModel model Returns Type Description Task Remarks Required Permission for user in the this company: ManageUser Required Permission for user not in this company: ManageUser,ViewCompany Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } | Improve this Doc View Source UpdateUserFromCustomModel(string, string, TUser) Update a user using custom model. Only if custom user model is used. Declaration [HttpPut] [Route(\"custommodel/{id}\")] [PermissionAuthorize(new object[] { PermissionMatrix.Premissions.ManageUser })] [AccessCrossCompanyPermissionFilter(new object[] { PermissionMatrix.Premissions.ViewCompany })] [AccessibleCompanyFilter] [ApiExplorerSettings(GroupName = \"UserManagement's User APIs - Custom Model\")] public Task UpdateUserFromCustomModel(string companyId, string id, TUser model) Parameters Type Name Description string companyId Company Id string id User Id TUser model Returns Type Description Task Remarks Required Permission for user in the this company: ManageUser Required Permission for user not in this company: ManageUser,ViewCompany Sample request: { \"email\": \"\", \"firstName\": \"\", \"lastName\": \"\", \"veracityId\": \"user identity id in Identity Provider\", \"description\": \"\", \"superAdmin\": false, \"active\":true, \"roleIds\":[\"1\",\"2\"], \"companyIds\":[\"1\",\"2\"] } Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.CompanyRepository-3.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.CompanyRepository-3.html",
    "title": "Class CompanyRepository<TCompany, TRole, TUser>",
    "keywords": "Class CompanyRepository<TCompany, TRole, TUser> Inheritance object CompanyRepository<TCompany, TRole, TUser> CompanyRepository Implements ICompany<TCompany> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class CompanyRepository<TCompany, TRole, TUser> : ICompany<TCompany> where TCompany : Company, new() where TRole : Role, new() where TUser : User, new() Type Parameters Name Description TCompany TRole TUser Constructors | Improve this Doc View Source CompanyRepository(UserManagementContext<TCompany, TRole, TUser>) Declaration public CompanyRepository(UserManagementContext<TCompany, TRole, TUser> context) Parameters Type Name Description UserManagementContext<TCompany, TRole, TUser> context Methods | Improve this Doc View Source All() Get a list of all company as an asynchronous operation. Declaration public Task<IEnumerable<TCompany>> All() Returns Type Description Task<IEnumerable<TCompany>> A Task<TResult> that represents the company list. | Improve this Doc View Source Create(TCompany) Creates a new company in a store as an asynchronous operation. Declaration public Task<TCompany> Create(TCompany company) Parameters Type Name Description TCompany company The company to create in the store. Returns Type Description Task<TCompany> A Task<TResult> that represents the company. | Improve this Doc View Source Delete(string) Deletes a company in a store as an asynchronous operation. Declaration public Task Delete(string Id) Parameters Type Name Description string Id The company ID to delete. Returns Type Description Task The Task that represents the asynchronous operation. | Improve this Doc View Source List(IEnumerable<string>) Get a list of companies which has the specified ID as an asynchronous operation. Declaration public Task<IEnumerable<TCompany>> List(IEnumerable<string> Ids) Parameters Type Name Description IEnumerable<string> Ids The company ID list to look for. Returns Type Description Task<IEnumerable<TCompany>> A Task<TResult> that represents the company list. | Improve this Doc View Source QueryCompanys() Return a querable company dataset. Declaration public IQueryable<TCompany> QueryCompanys() Returns Type Description IQueryable<TCompany> | Improve this Doc View Source Read(string) Get a company which has the specified ID as an asynchronous operation. Declaration public Task<TCompany> Read(string Id) Parameters Type Name Description string Id The company ID to look for. Returns Type Description Task<TCompany> A Task<TResult> that represents the company. | Improve this Doc View Source ReadByDomain(string) Get a company which has the specified web domain as an asynchronous operation. Declaration public Task<TCompany> ReadByDomain(string domain) Parameters Type Name Description string domain The web domain to look for. Returns Type Description Task<TCompany> A Task<TResult> that represents the company. | Improve this Doc View Source Update(TCompany) Updates a company in a store as an asynchronous operation. Declaration public Task Update(TCompany company) Parameters Type Name Description TCompany company The company to update in the store. Returns Type Description Task The Task that represents the asynchronous operation. Implements ICompany<TCompany> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.CompanyRepository.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.CompanyRepository.html",
    "title": "Class CompanyRepository",
    "keywords": "Class CompanyRepository Inheritance object CompanyRepository<Company, Role, User> CompanyRepository Implements ICompany<Company> Inherited Members CompanyRepository<Company, Role, User>.All() CompanyRepository<Company, Role, User>.Create(Company) CompanyRepository<Company, Role, User>.Delete(string) CompanyRepository<Company, Role, User>.List(IEnumerable<string>) CompanyRepository<Company, Role, User>.QueryCompanys() CompanyRepository<Company, Role, User>.Read(string) CompanyRepository<Company, Role, User>.ReadByDomain(string) CompanyRepository<Company, Role, User>.Update(Company) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class CompanyRepository : CompanyRepository<Company, Role, User>, ICompany<Company> Constructors | Improve this Doc View Source CompanyRepository(UserManagementContext<Company, Role, User>) Declaration public CompanyRepository(UserManagementContext<Company, Role, User> context) Parameters Type Name Description UserManagementContext<Company, Role, User> context Implements ICompany<TCompany> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.EFCoreOptions.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.EFCoreOptions.html",
    "title": "Class EFCoreOptions",
    "keywords": "Class EFCoreOptions Provides an option to configure the user management EFCore module. Inheritance object EFCoreOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class EFCoreOptions Properties | Improve this Doc View Source DbContextOptionsBuilder Gets or sets the action to build Database Context Options. For example: DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\"), Declaration public Action<DbContextOptionsBuilder> DbContextOptionsBuilder { get; set; } Property Value Type Description Action<DbContextOptionsBuilder> | Improve this Doc View Source HardDelete Gets or sets the behavior of entity deletion. Set true if soft delete is not a desired behavior. Declaration public bool HardDelete { get; set; } Property Value Type Description bool | Improve this Doc View Source ModelBuilder Gets or sets the action to apply customized module builder logic. For example, specify the container name in Azure Cosmos DB: ModelBuilder = (modelBuilder) => modelBuilder.HasDefaultContainer(\"User\"), Declaration public Action<ModelBuilder> ModelBuilder { get; set; } Property Value Type Description Action<ModelBuilder> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.EFCoreSetup.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.EFCoreSetup.html",
    "title": "Class EFCoreSetup",
    "keywords": "Class EFCoreSetup Provides extension methods to register user management's database access implementaion to IServiceCollection Inheritance object EFCoreSetup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public static class EFCoreSetup Methods | Improve this Doc View Source UseEFCore(IServiceCollection, EFCoreOptions) Configure database connection string and other settings for user management module. Use SQLServer as backend database to store user data. services.AddUserManagement().UseEFCore(new EFCoreOptions { DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\") }) Use Cosmos DB as backend database to store user data. services.AddUserManagement().UseEFCore(new EFCoreOptions { DbContextOptionsBuilder = options => options.UseCosmos(\"https://localhost:8081\", \"*****\", databaseName: \"UserManagement\"), ModelBuilder = (modelBuilder) => modelBuilder.HasDefaultContainer(\"User\"), }) Declaration public static IServiceCollection UseEFCore(this IServiceCollection services, EFCoreOptions options) Parameters Type Name Description IServiceCollection services IServiceCollection EFCoreOptions options A instance of EFCoreOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection | Improve this Doc View Source UseEFCore<TUser>(IServiceCollection, EFCoreOptions) Configure database connection string and other settings for user management module. Declaration public static IServiceCollection UseEFCore<TUser>(this IServiceCollection services, EFCoreOptions options) where TUser : User, new() Parameters Type Name Description IServiceCollection services IServiceCollection EFCoreOptions options A instance of EFCoreOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TUser The type that represents a customized user model.It mush be inherited from User. | Improve this Doc View Source UseEFCore<TCompany, TUser>(IServiceCollection, EFCoreOptions) Configure database connection string and other settings for user management module. Declaration public static IServiceCollection UseEFCore<TCompany, TUser>(this IServiceCollection services, EFCoreOptions options) where TCompany : Company, new() where TUser : User, new() Parameters Type Name Description IServiceCollection services IServiceCollection EFCoreOptions options A instance of EFCoreOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TCompany The type that represents a customized company model.It mush be inherited from Company. TUser The type that represents a customized user model.It mush be inherited from User. | Improve this Doc View Source UseEFCore<TCompany, TRole, TUser>(IServiceCollection, EFCoreOptions) Configure database connection string and other settings for user management module. Declaration public static IServiceCollection UseEFCore<TCompany, TRole, TUser>(this IServiceCollection services, EFCoreOptions options) where TCompany : Company, new() where TRole : Role, new() where TUser : User, new() Parameters Type Name Description IServiceCollection services IServiceCollection EFCoreOptions options A instance of EFCoreOptions to configure the user management module. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TCompany The type that represents a customized company model.It mush be inherited from Company. TRole The type that represents a customized role model.It mush be inherited from Role. TUser The type that represents a customized user model.It mush be inherited from User."
  },
  "api/DNV.Authorization.UserManagement.EFCore.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.html",
    "title": "Namespace DNV.Authorization.UserManagement.EFCore",
    "keywords": "Namespace DNV.Authorization.UserManagement.EFCore Classes CompanyRepository CompanyRepository<TCompany, TRole, TUser> EFCoreOptions Provides an option to configure the user management EFCore module. EFCoreSetup Provides extension methods to register user management's database access implementaion to IServiceCollection RoleRepository RoleRepository<TCompany, TRole, TUser> UserManagementContext UserManagementContext<TUser> UserManagementContext<TCompany, TUser> UserManagementContext<TCompany, TRole, TUser> UserPermissionReader UserPermissionReader<TCompany, TRole, TUser> UserRepository UserRepository<TCompany, TRole, TUser>"
  },
  "api/DNV.Authorization.UserManagement.EFCore.RoleRepository-3.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.RoleRepository-3.html",
    "title": "Class RoleRepository<TCompany, TRole, TUser>",
    "keywords": "Class RoleRepository<TCompany, TRole, TUser> Inheritance object RoleRepository<TCompany, TRole, TUser> RoleRepository Implements IRole<TRole> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class RoleRepository<TCompany, TRole, TUser> : IRole<TRole> where TCompany : Company, new() where TRole : Role, new() where TUser : User, new() Type Parameters Name Description TCompany TRole TUser Constructors | Improve this Doc View Source RoleRepository(UserManagementContext<TCompany, TRole, TUser>) Declaration public RoleRepository(UserManagementContext<TCompany, TRole, TUser> context) Parameters Type Name Description UserManagementContext<TCompany, TRole, TUser> context Methods | Improve this Doc View Source All() Get a list of all role as an asynchronous operation. Declaration public Task<IEnumerable<TRole>> All() Returns Type Description Task<IEnumerable<TRole>> A Task<TResult> that represents the role list. | Improve this Doc View Source Create(TRole) Creates a new role in a store as an asynchronous operation. Declaration public Task<TRole> Create(TRole role) Parameters Type Name Description TRole role The role to create in the store. Returns Type Description Task<TRole> A Task<TResult> that represents the role. | Improve this Doc View Source Delete(string) Deletes a role in a store as an asynchronous operation. Declaration public Task Delete(string Id) Parameters Type Name Description string Id The role ID to delete. Returns Type Description Task The Task that represents the asynchronous operation. | Improve this Doc View Source GetRolesOfCompany(string) Get a list of a company's roles as an asynchronous operation. Declaration public Task<IEnumerable<TRole>> GetRolesOfCompany(string companyId) Parameters Type Name Description string companyId The company ID to look for. Returns Type Description Task<IEnumerable<TRole>> A Task<TResult> that represents the role list. | Improve this Doc View Source QueryRoles() Return a querable role dataset. Declaration public IQueryable<TRole> QueryRoles() Returns Type Description IQueryable<TRole> | Improve this Doc View Source Read(string) Get a role which has the specified ID as an asynchronous operation. Declaration public Task<TRole> Read(string Id) Parameters Type Name Description string Id The role ID to look for. Returns Type Description Task<TRole> A Task<TResult> that represents the role. | Improve this Doc View Source Update(TRole) Updates a role in a store as an asynchronous operation. Declaration public Task Update(TRole role) Parameters Type Name Description TRole role The role to update in the store. Returns Type Description Task The Task that represents the asynchronous operation. Implements IRole<TRole> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.RoleRepository.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.RoleRepository.html",
    "title": "Class RoleRepository",
    "keywords": "Class RoleRepository Inheritance object RoleRepository<Company, Role, User> RoleRepository Implements IRole<Role> Inherited Members RoleRepository<Company, Role, User>.All() RoleRepository<Company, Role, User>.Create(Role) RoleRepository<Company, Role, User>.Delete(string) RoleRepository<Company, Role, User>.GetRolesOfCompany(string) RoleRepository<Company, Role, User>.Read(string) RoleRepository<Company, Role, User>.Update(Role) RoleRepository<Company, Role, User>.QueryRoles() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class RoleRepository : RoleRepository<Company, Role, User>, IRole<Role> Constructors | Improve this Doc View Source RoleRepository(UserManagementContext<Company, Role, User>) Declaration public RoleRepository(UserManagementContext<Company, Role, User> context) Parameters Type Name Description UserManagementContext<Company, Role, User> context Implements IRole<TRole> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.UserManagementContext-1.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.UserManagementContext-1.html",
    "title": "Class UserManagementContext<TUser>",
    "keywords": "Class UserManagementContext<TUser> Inheritance object DbContext UserManagementContext<Company, Role, TUser> UserManagementContext<TUser> Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IDisposable IAsyncDisposable IResettableService Inherited Members UserManagementContext<Company, Role, TUser>.Roles UserManagementContext<Company, Role, TUser>.Companys UserManagementContext<Company, Role, TUser>.Users UserManagementContext<Company, Role, TUser>.PrebuildModel UserManagementContext<Company, Role, TUser>.HardDelete UserManagementContext<Company, Role, TUser>.OnModelCreating(ModelBuilder) UserManagementContext<Company, Role, TUser>.SaveChanges() UserManagementContext<Company, Role, TUser>.SaveChangesAsync(CancellationToken) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class UserManagementContext<TUser> : UserManagementContext<Company, Role, TUser>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService where TUser : User Type Parameters Name Description TUser Constructors | Improve this Doc View Source UserManagementContext(DbContextOptions) Declaration public UserManagementContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IDisposable IAsyncDisposable IResettableService Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.UserManagementContext-2.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.UserManagementContext-2.html",
    "title": "Class UserManagementContext<TCompany, TUser>",
    "keywords": "Class UserManagementContext<TCompany, TUser> Inheritance object DbContext UserManagementContext<TCompany, Role, TUser> UserManagementContext<TCompany, TUser> Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IDisposable IAsyncDisposable IResettableService Inherited Members UserManagementContext<TCompany, Role, TUser>.Roles UserManagementContext<TCompany, Role, TUser>.Companys UserManagementContext<TCompany, Role, TUser>.Users UserManagementContext<TCompany, Role, TUser>.PrebuildModel UserManagementContext<TCompany, Role, TUser>.HardDelete UserManagementContext<TCompany, Role, TUser>.OnModelCreating(ModelBuilder) UserManagementContext<TCompany, Role, TUser>.SaveChanges() UserManagementContext<TCompany, Role, TUser>.SaveChangesAsync(CancellationToken) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class UserManagementContext<TCompany, TUser> : UserManagementContext<TCompany, Role, TUser>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService where TCompany : Company where TUser : User Type Parameters Name Description TCompany TUser Constructors | Improve this Doc View Source UserManagementContext(DbContextOptions) Declaration public UserManagementContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IDisposable IAsyncDisposable IResettableService Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.UserManagementContext-3.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.UserManagementContext-3.html",
    "title": "Class UserManagementContext<TCompany, TRole, TUser>",
    "keywords": "Class UserManagementContext<TCompany, TRole, TUser> Inheritance object DbContext UserManagementContext<TCompany, TRole, TUser> UserManagementContext UserManagementContext<TUser> UserManagementContext<TCompany, TUser> Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IDisposable IAsyncDisposable IResettableService Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class UserManagementContext<TCompany, TRole, TUser> : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService where TCompany : Company where TRole : Role where TUser : User Type Parameters Name Description TCompany TRole TUser Constructors | Improve this Doc View Source UserManagementContext(DbContextOptions) Declaration public UserManagementContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options Properties | Improve this Doc View Source Companys Declaration public DbSet<TCompany> Companys { get; set; } Property Value Type Description DbSet<TCompany> | Improve this Doc View Source HardDelete Declaration public bool HardDelete { get; set; } Property Value Type Description bool | Improve this Doc View Source PrebuildModel Declaration public Action<ModelBuilder> PrebuildModel { get; set; } Property Value Type Description Action<ModelBuilder> | Improve this Doc View Source Roles Declaration public DbSet<TRole> Roles { get; set; } Property Value Type Description DbSet<TRole> | Improve this Doc View Source Users Declaration public DbSet<TUser> Users { get; set; } Property Value Type Description DbSet<TUser> Methods | Improve this Doc View Source OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Overrides DbContext.OnModelCreating(ModelBuilder) Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. | Improve this Doc View Source SaveChanges() Saves all changes made in this context to the database. This method will automatically call DetectChanges() to discover any changes to entity instances before saving to the underlying database. This can be disabled via AutoDetectChangesEnabled. Declaration public override int SaveChanges() Returns Type Description int The number of state entries written to the database. Overrides DbContext.SaveChanges() Exceptions Type Condition DbUpdateException An error is encountered while saving to the database. DbUpdateConcurrencyException A concurrency violation is encountered while saving to the database. A concurrency violation occurs when an unexpected number of rows are affected during save. This is usually because the data in the database has been modified since it was loaded into memory. | Improve this Doc View Source SaveChangesAsync(CancellationToken) Saves all changes made in this context to the database. This method will automatically call DetectChanges() to discover any changes to entity instances before saving to the underlying database. This can be disabled via AutoDetectChangesEnabled. Multiple active operations on the same context instance are not supported. Use 'await' to ensure that any asynchronous operations have completed before calling another method on this context. Declaration public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Type Description Task<int> A task that represents the asynchronous save operation. The task result contains the number of state entries written to the database. Overrides DbContext.SaveChangesAsync(CancellationToken) Exceptions Type Condition DbUpdateException An error is encountered while saving to the database. DbUpdateConcurrencyException A concurrency violation is encountered while saving to the database. A concurrency violation occurs when an unexpected number of rows are affected during save. This is usually because the data in the database has been modified since it was loaded into memory. Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IDisposable IAsyncDisposable IResettableService Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.UserManagementContext.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.UserManagementContext.html",
    "title": "Class UserManagementContext",
    "keywords": "Class UserManagementContext Inheritance object DbContext UserManagementContext<Company, Role, User> UserManagementContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IDisposable IAsyncDisposable IResettableService Inherited Members UserManagementContext<Company, Role, User>.Roles UserManagementContext<Company, Role, User>.Companys UserManagementContext<Company, Role, User>.Users UserManagementContext<Company, Role, User>.PrebuildModel UserManagementContext<Company, Role, User>.HardDelete UserManagementContext<Company, Role, User>.OnModelCreating(ModelBuilder) UserManagementContext<Company, Role, User>.SaveChanges() UserManagementContext<Company, Role, User>.SaveChangesAsync(CancellationToken) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class UserManagementContext : UserManagementContext<Company, Role, User>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService Constructors | Improve this Doc View Source UserManagementContext(DbContextOptions) Declaration public UserManagementContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IDisposable IAsyncDisposable IResettableService Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.UserPermissionReader-3.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.UserPermissionReader-3.html",
    "title": "Class UserPermissionReader<TCompany, TRole, TUser>",
    "keywords": "Class UserPermissionReader<TCompany, TRole, TUser> Inheritance object UserPermissionReader<TCompany, TRole, TUser> UserPermissionReader Implements IUserPermissionReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class UserPermissionReader<TCompany, TRole, TUser> : IUserPermissionReader where TCompany : Company, new() where TRole : Role, new() where TUser : User, new() Type Parameters Name Description TCompany TRole TUser Constructors | Improve this Doc View Source UserPermissionReader(UserManagementContext<TCompany, TRole, TUser>, IPermissionRepository, UserManagementSettings) Declaration public UserPermissionReader(UserManagementContext<TCompany, TRole, TUser> context, IPermissionRepository permissionRepository, UserManagementSettings userManagementSettings) Parameters Type Name Description UserManagementContext<TCompany, TRole, TUser> context IPermissionRepository permissionRepository UserManagementSettings userManagementSettings Methods | Improve this Doc View Source GetPermissions(IEnumerable<string>) Get a permission list from a list of permission keys/Ids. Declaration public Task<IEnumerable<PermissionEntity>> GetPermissions(IEnumerable<string> permissions) Parameters Type Name Description IEnumerable<string> permissions a list of permission keys/Ids Returns Type Description Task<IEnumerable<PermissionEntity>> A that represents the permission list. | Improve this Doc View Source GetPermissions(string) Get a user's all permissions. Declaration public Task<IEnumerable<PermissionEntity>> GetPermissions(string identity) Parameters Type Name Description string identity The identity id to look for. It could be the ID provided by Identity provider or the primary key for this user in local database. Returns Type Description Task<IEnumerable<PermissionEntity>> A that represents the user's permission list. | Improve this Doc View Source GetPermissions(string, string) Get a user's all permissions of a company. Declaration public Task<IEnumerable<PermissionEntity>> GetPermissions(string identity, string companyId) Parameters Type Name Description string identity The identity id to look for. It could be the ID provided by Identity provider or the primary key for this user in local database. string companyId The company ID to look for. Returns Type Description Task<IEnumerable<PermissionEntity>> A that represents the user's permission list. Implements IUserPermissionReader Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.UserPermissionReader.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.UserPermissionReader.html",
    "title": "Class UserPermissionReader",
    "keywords": "Class UserPermissionReader Inheritance object UserPermissionReader<Company, Role, User> UserPermissionReader Implements IUserPermissionReader Inherited Members UserPermissionReader<Company, Role, User>.GetPermissions(string) UserPermissionReader<Company, Role, User>.GetPermissions(string, string) UserPermissionReader<Company, Role, User>.GetPermissions(IEnumerable<string>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class UserPermissionReader : UserPermissionReader<Company, Role, User>, IUserPermissionReader Constructors | Improve this Doc View Source UserPermissionReader(UserManagementContext<Company, Role, User>, IPermissionRepository, UserManagementSettings) Declaration public UserPermissionReader(UserManagementContext<Company, Role, User> context, IPermissionRepository permissionRepository, UserManagementSettings userManagementSettings) Parameters Type Name Description UserManagementContext<Company, Role, User> context IPermissionRepository permissionRepository UserManagementSettings userManagementSettings Implements IUserPermissionReader Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.UserRepository-3.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.UserRepository-3.html",
    "title": "Class UserRepository<TCompany, TRole, TUser>",
    "keywords": "Class UserRepository<TCompany, TRole, TUser> Inheritance object UserRepository<TCompany, TRole, TUser> UserRepository Implements IUser<TUser> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class UserRepository<TCompany, TRole, TUser> : IUser<TUser> where TCompany : Company, new() where TRole : Role, new() where TUser : User, new() Type Parameters Name Description TCompany TRole TUser Constructors | Improve this Doc View Source UserRepository(UserManagementContext<TCompany, TRole, TUser>) Declaration public UserRepository(UserManagementContext<TCompany, TRole, TUser> context) Parameters Type Name Description UserManagementContext<TCompany, TRole, TUser> context Methods | Improve this Doc View Source All(PageParam) Get a list of all user as an asynchronous operation. Declaration public Task<PaginatedResult<TUser>> All(PageParam pageParam = null) Parameters Type Name Description PageParam pageParam The page index and size PageParam, starting from 1 Returns Type Description Task<PaginatedResult<TUser>> A Task<TResult> that represents the user list. | Improve this Doc View Source Create(TUser) Creates a new user in a store as an asynchronous operation. Declaration public Task<TUser> Create(TUser user) Parameters Type Name Description TUser user The user to create in the store. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source Delete(string) Deletes a user in a store as an asynchronous operation. Declaration public Task Delete(string Id) Parameters Type Name Description string Id The user ID to delete. Returns Type Description Task The Task that represents the asynchronous operation. | Improve this Doc View Source GetUserByEmail(string) Get a user list by matching email. Declaration public Task<TUser> GetUserByEmail(string email) Parameters Type Name Description string email The email address to look for. Returns Type Description Task<TUser> A Task<TResult> that represents the user list. | Improve this Doc View Source GetUsersOfCompany(string, PageParam) Get a user list of a company. Declaration public Task<PaginatedResult<TUser>> GetUsersOfCompany(string companyId, PageParam pageParam = null) Parameters Type Name Description string companyId The company ID to look for. PageParam pageParam The page index and size PageParam, starting from 1 Returns Type Description Task<PaginatedResult<TUser>> A Task<TResult> that represents the user list. | Improve this Doc View Source GetUsersOfRole(string) Get a user list of a role Declaration public Task<IEnumerable<TUser>> GetUsersOfRole(string roleId) Parameters Type Name Description string roleId The role ID to look for. Returns Type Description Task<IEnumerable<TUser>> A Task<TResult> that represents the user list. | Improve this Doc View Source QueryUsers() Return a querable user dataset. Declaration public IQueryable<TUser> QueryUsers() Returns Type Description IQueryable<TUser> | Improve this Doc View Source Read(string) Get a user which has the specified ID as an asynchronous operation. Declaration public Task<TUser> Read(string Id) Parameters Type Name Description string Id The user ID to look for. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source ReadByIdentityId(string) Get a user which has the specified Identity ID as an asynchronous operation. Declaration public Task<TUser> ReadByIdentityId(string IdentityId) Parameters Type Name Description string IdentityId The identity id to look for. It is an ID provided by Identity provider. It is varacity id if Varacity provide identity. Returns Type Description Task<TUser> A Task<TResult> that represents the user. | Improve this Doc View Source Update(TUser) Updates a user in a store as an asynchronous operation. Declaration public Task Update(TUser user) Parameters Type Name Description TUser user The user to update in the store. Returns Type Description Task The Task that represents the asynchronous operation. Implements IUser<TUser> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.UserManagement.EFCore.UserRepository.html": {
    "href": "api/DNV.Authorization.UserManagement.EFCore.UserRepository.html",
    "title": "Class UserRepository",
    "keywords": "Class UserRepository Inheritance object UserRepository<Company, Role, User> UserRepository Implements IUser<User> Inherited Members UserRepository<Company, Role, User>.All(PageParam) UserRepository<Company, Role, User>.Create(User) UserRepository<Company, Role, User>.Delete(string) UserRepository<Company, Role, User>.GetUsersOfCompany(string, PageParam) UserRepository<Company, Role, User>.GetUsersOfRole(string) UserRepository<Company, Role, User>.Read(string) UserRepository<Company, Role, User>.ReadByIdentityId(string) UserRepository<Company, Role, User>.Update(User) UserRepository<Company, Role, User>.GetUserByEmail(string) UserRepository<Company, Role, User>.QueryUsers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.UserManagement.EFCore Assembly: DNV.Authorization.UserManagement.EFCore.dll Syntax public class UserRepository : UserRepository<Company, Role, User>, IUser<User> Constructors | Improve this Doc View Source UserRepository(UserManagementContext<Company, Role, User>) Declaration public UserRepository(UserManagementContext<Company, Role, User> context) Parameters Type Name Description UserManagementContext<Company, Role, User> context Implements IUser<TUser> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.Abstraction.BuiltinUnauthorizedAccessHandler.html": {
    "href": "api/DNV.Authorization.Web.Abstraction.BuiltinUnauthorizedAccessHandler.html",
    "title": "Class BuiltinUnauthorizedAccessHandler",
    "keywords": "Class BuiltinUnauthorizedAccessHandler Provides a built in implementation of unauthorized access behaviors. Inheritance object BuiltinUnauthorizedAccessHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web.Abstraction Assembly: DNV.Authorization.Web.dll Syntax public static class BuiltinUnauthorizedAccessHandler Fields | Improve this Doc View Source Return403ForbiddenCode Return 403 code to the client. Declaration public static readonly Action<HttpContext, string> Return403ForbiddenCode Field Value Type Description Action<HttpContext, string> | Improve this Doc View Source ThrowExceptionDirectly Throw unauthorized access exception directly. Declaration public static readonly Action<HttpContext, string> ThrowExceptionDirectly Field Value Type Description Action<HttpContext, string>"
  },
  "api/DNV.Authorization.Web.Abstraction.html": {
    "href": "api/DNV.Authorization.Web.Abstraction.html",
    "title": "Namespace DNV.Authorization.Web.Abstraction",
    "keywords": "Namespace DNV.Authorization.Web.Abstraction Classes BuiltinUnauthorizedAccessHandler Provides a built in implementation of unauthorized access behaviors. PermissionEntity Represents permission information for a permission record. PermissionOptions Provides a class to configure permission check behaviors. Interfaces IPermissionRepository Provide an abstraction for a storage and management of premissions. IUserPermissionReader Provide an abstraction for a storage and management of users premissions."
  },
  "api/DNV.Authorization.Web.Abstraction.IPermissionRepository.html": {
    "href": "api/DNV.Authorization.Web.Abstraction.IPermissionRepository.html",
    "title": "Interface IPermissionRepository",
    "keywords": "Interface IPermissionRepository Provide an abstraction for a storage and management of premissions. Namespace: DNV.Authorization.Web.Abstraction Assembly: DNV.Authorization.Web.dll Syntax public interface IPermissionRepository Remarks Implement this intrefact only if permissions are not defined in source code Implement IPermissionMatrix to define permissions in source code Methods | Improve this Doc View Source GetAll() Return all permissions Declaration Task<IEnumerable<PermissionEntity>> GetAll() Returns Type Description Task<IEnumerable<PermissionEntity>> A List of . Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.Abstraction.IUserPermissionReader.html": {
    "href": "api/DNV.Authorization.Web.Abstraction.IUserPermissionReader.html",
    "title": "Interface IUserPermissionReader",
    "keywords": "Interface IUserPermissionReader Provide an abstraction for a storage and management of users premissions. Namespace: DNV.Authorization.Web.Abstraction Assembly: DNV.Authorization.Web.dll Syntax public interface IUserPermissionReader Remarks It must be implemented in the project Methods | Improve this Doc View Source GetPermissions(IEnumerable<string>) Get a permission list from a list of permission keys/Ids. Declaration Task<IEnumerable<PermissionEntity>> GetPermissions(IEnumerable<string> permissions) Parameters Type Name Description IEnumerable<string> permissions a list of permission keys/Ids Returns Type Description Task<IEnumerable<PermissionEntity>> A that represents the permission list. | Improve this Doc View Source GetPermissions(string) Get a user's all permissions. Declaration Task<IEnumerable<PermissionEntity>> GetPermissions(string identity) Parameters Type Name Description string identity The identity id to look for. It could be the ID provided by Identity provider or the primary key for this user in local database. Returns Type Description Task<IEnumerable<PermissionEntity>> A that represents the user's permission list. | Improve this Doc View Source GetPermissions(string, string) Get a user's all permissions of a company. Declaration Task<IEnumerable<PermissionEntity>> GetPermissions(string identity, string companyId) Parameters Type Name Description string identity The identity id to look for. It could be the ID provided by Identity provider or the primary key for this user in local database. string companyId The company ID to look for. Returns Type Description Task<IEnumerable<PermissionEntity>> A that represents the user's permission list. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.Abstraction.PermissionEntity.html": {
    "href": "api/DNV.Authorization.Web.Abstraction.PermissionEntity.html",
    "title": "Class PermissionEntity",
    "keywords": "Class PermissionEntity Represents permission information for a permission record. Inheritance object PermissionEntity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web.Abstraction Assembly: DNV.Authorization.Web.dll Syntax public class PermissionEntity Properties | Improve this Doc View Source Description Gets or sets the description for this permission. Declaration public string Description { get; set; } Property Value Type Description string Remarks Display on UI | Improve this Doc View Source Group Gets or sets the group for this permission. Declaration public string Group { get; set; } Property Value Type Description string Remarks group permissions on UI | Improve this Doc View Source Id Gets or sets the primary key for this permission. Declaration public string Id { get; set; } Property Value Type Description string Remarks Permission's Id should be unique at the global level. | Improve this Doc View Source Key Gets or sets the unique key for this permission. Declaration public string Key { get; set; } Property Value Type Description string Remarks Permission's Key should be unique at the global level. It's better to have a human readable key. | Improve this Doc View Source Name Gets or sets the name for this permission. Declaration public string Name { get; set; } Property Value Type Description string Remarks Display on UI Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.Abstraction.PermissionOptions.html": {
    "href": "api/DNV.Authorization.Web.Abstraction.PermissionOptions.html",
    "title": "Class PermissionOptions",
    "keywords": "Class PermissionOptions Provides a class to configure permission check behaviors. Inheritance object PermissionOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web.Abstraction Assembly: DNV.Authorization.Web.dll Syntax public class PermissionOptions Properties | Improve this Doc View Source GetCompanyIdentity A Function to get compnay's primary key from HttpContext. Declaration public Func<HttpContext, string> GetCompanyIdentity { get; set; } Property Value Type Description Func<HttpContext, string> | Improve this Doc View Source GetUserIdentity A Function to get user's identity id from ClaimsPrincipal. Declaration public Func<ClaimsPrincipal, string> GetUserIdentity { get; set; } Property Value Type Description Func<ClaimsPrincipal, string> | Improve this Doc View Source HandleUnauthorizedAccess An action to handle unauthorized access. Declaration public Action<HttpContext, string> HandleUnauthorizedAccess { get; set; } Property Value Type Description Action<HttpContext, string> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.AttributeAuthorizationHandler-2.html": {
    "href": "api/DNV.Authorization.Web.AttributeAuthorizationHandler-2.html",
    "title": "Class AttributeAuthorizationHandler<TRequirement, TAttribute>",
    "keywords": "Class AttributeAuthorizationHandler<TRequirement, TAttribute> Inheritance object AuthorizationHandler<TRequirement> AttributeAuthorizationHandler<TRequirement, TAttribute> Implements IAuthorizationHandler Inherited Members AuthorizationHandler<TRequirement>.HandleAsync(AuthorizationHandlerContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax public abstract class AttributeAuthorizationHandler<TRequirement, TAttribute> : AuthorizationHandler<TRequirement>, IAuthorizationHandler where TRequirement : IAuthorizationRequirement where TAttribute : Attribute Type Parameters Name Description TRequirement TAttribute Methods | Improve this Doc View Source HandleRequirementAsync(AuthorizationHandlerContext, TRequirement) Makes a decision if authorization is allowed based on a specific requirement. Declaration protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, TRequirement requirement) Parameters Type Name Description AuthorizationHandlerContext context The authorization context. TRequirement requirement The requirement to evaluate. Returns Type Description Task Overrides AuthorizationHandler<TRequirement>.HandleRequirementAsync(AuthorizationHandlerContext, TRequirement) | Improve this Doc View Source HandleRequirementAsync(AuthorizationHandlerContext, TRequirement, IEnumerable<TAttribute>) Declaration protected abstract Task HandleRequirementAsync(AuthorizationHandlerContext context, TRequirement requirement, IEnumerable<TAttribute> attributes) Parameters Type Name Description AuthorizationHandlerContext context TRequirement requirement IEnumerable<TAttribute> attributes Returns Type Description Task Implements IAuthorizationHandler Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.CompanyIdentityFieldNameFilterAttribute.html": {
    "href": "api/DNV.Authorization.Web.CompanyIdentityFieldNameFilterAttribute.html",
    "title": "Class CompanyIdentityFieldNameFilterAttribute",
    "keywords": "Class CompanyIdentityFieldNameFilterAttribute Provides a api controller filter to get a company id. Inheritance object Attribute TypeFilterAttribute CompanyIdentityFieldNameFilterAttribute Implements IFilterFactory IOrderedFilter IFilterMetadata Inherited Members TypeFilterAttribute.CreateInstance(IServiceProvider) TypeFilterAttribute.Arguments TypeFilterAttribute.ImplementationType TypeFilterAttribute.Order TypeFilterAttribute.IsReusable Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = false)] public class CompanyIdentityFieldNameFilterAttribute : TypeFilterAttribute, IFilterFactory, IOrderedFilter, IFilterMetadata Constructors | Improve this Doc View Source CompanyIdentityFieldNameFilterAttribute(string, string, string) Constructs a new instance of CompanyIdentityFieldNameFilterAttribute. Declaration public CompanyIdentityFieldNameFilterAttribute(string companyIdInRoute = \"\", string companyIdInQuery = \"\", string companyIdInActionArguments = \"\") Parameters Type Name Description string companyIdInRoute compnay id specification in route. string companyIdInQuery compnay id specification in query. string companyIdInActionArguments compnay id specification in action arguments. Methods | Improve this Doc View Source GetCompanyId(HttpContext) Get company from httpcontext. Declaration public void GetCompanyId(HttpContext context) Parameters Type Name Description HttpContext context HttpContext Implements IFilterFactory IOrderedFilter IFilterMetadata Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.CompanyMemberIgnorePermissionFilterAttribute.html": {
    "href": "api/DNV.Authorization.Web.CompanyMemberIgnorePermissionFilterAttribute.html",
    "title": "Class CompanyMemberIgnorePermissionFilterAttribute",
    "keywords": "Class CompanyMemberIgnorePermissionFilterAttribute Provides a api controller filter to ignore permissions check for user when access their own company's resource. Inheritance object Attribute TypeFilterAttribute CompanyMemberIgnorePermissionFilterAttribute Implements IFilterFactory IOrderedFilter IFilterMetadata Inherited Members TypeFilterAttribute.CreateInstance(IServiceProvider) TypeFilterAttribute.Arguments TypeFilterAttribute.ImplementationType TypeFilterAttribute.Order TypeFilterAttribute.IsReusable Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = false)] public class CompanyMemberIgnorePermissionFilterAttribute : TypeFilterAttribute, IFilterFactory, IOrderedFilter, IFilterMetadata Constructors | Improve this Doc View Source CompanyMemberIgnorePermissionFilterAttribute(params object[]) Constructs a new instance of CompanyMemberIgnorePermissionFilterAttribute. Declaration public CompanyMemberIgnorePermissionFilterAttribute(params object[] permissionsToIgore) Parameters Type Name Description object[] permissionsToIgore A collection of permission to be ignored. | Improve this Doc View Source CompanyMemberIgnorePermissionFilterAttribute(params string[]) Constructs a new instance of CompanyMemberIgnorePermissionFilterAttribute. Declaration public CompanyMemberIgnorePermissionFilterAttribute(params string[] permissionsToIgore) Parameters Type Name Description string[] permissionsToIgore A collection of permission to be ignored. Properties | Improve this Doc View Source PermissionsToIgore Get a collection of permission to be ignored Declaration public string[] PermissionsToIgore { get; } Property Value Type Description string[] Implements IFilterFactory IOrderedFilter IFilterMetadata Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.Constants.html": {
    "href": "api/DNV.Authorization.Web.Constants.html",
    "title": "Class Constants",
    "keywords": "Class Constants Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax public static class Constants Fields | Improve this Doc View Source AUTHORIZATIONCOMPANYID Declaration public const string AUTHORIZATIONCOMPANYID = \"AuthorizationCompanyId\" Field Value Type Description string | Improve this Doc View Source AUTHORIZATIONPERMISSIONS Declaration public const string AUTHORIZATIONPERMISSIONS = \"AuthorizationPermissions\" Field Value Type Description string | Improve this Doc View Source AUTHORIZATIONTENANTROUTE Declaration public const string AUTHORIZATIONTENANTROUTE = \"AuthorizationTenantRoute\" Field Value Type Description string | Improve this Doc View Source AUTHORIZATION_COMPANYID Declaration public const string AUTHORIZATION_COMPANYID = \"AUTHORIZATION.COMPANYID\" Field Value Type Description string | Improve this Doc View Source COMPANYID Declaration public const string COMPANYID = \"companyId\" Field Value Type Description string | Improve this Doc View Source COMPANY_ROLE_NOT_RELEVANT Declaration public const string COMPANY_ROLE_NOT_RELEVANT = \"Company_Role_Not_Relevant\" Field Value Type Description string | Improve this Doc View Source IGNORE_PERMISSIONS Declaration public const string IGNORE_PERMISSIONS = \"AUTHORIZATION.COMPANY.IGNORE.PERMISSIONS\" Field Value Type Description string"
  },
  "api/DNV.Authorization.Web.CookieAuthenticationOptionsSetup.html": {
    "href": "api/DNV.Authorization.Web.CookieAuthenticationOptionsSetup.html",
    "title": "Class CookieAuthenticationOptionsSetup",
    "keywords": "Class CookieAuthenticationOptionsSetup Inheritance object CookieAuthenticationOptionsSetup Implements IConfigureNamedOptions<CookieAuthenticationOptions> IConfigureOptions<CookieAuthenticationOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax [Obsolete(\"This function is not ready for use. do not use.\", true)] public class CookieAuthenticationOptionsSetup : IConfigureNamedOptions<CookieAuthenticationOptions>, IConfigureOptions<CookieAuthenticationOptions> Constructors | Improve this Doc View Source CookieAuthenticationOptionsSetup(IUserPermissionReader, PermissionOptions) Declaration public CookieAuthenticationOptionsSetup(IUserPermissionReader userPermissionReader, PermissionOptions permissionOptions) Parameters Type Name Description IUserPermissionReader userPermissionReader PermissionOptions permissionOptions Methods | Improve this Doc View Source Configure(CookieAuthenticationOptions) Invoked to configure a CookieAuthenticationOptions instance. Declaration public void Configure(CookieAuthenticationOptions options) Parameters Type Name Description CookieAuthenticationOptions options The options instance to configure. | Improve this Doc View Source Configure(string, CookieAuthenticationOptions) Invoked to configure a CookieAuthenticationOptions instance. Declaration public void Configure(string name, CookieAuthenticationOptions options) Parameters Type Name Description string name The name of the options instance being configured. CookieAuthenticationOptions options The options instance to configure. Implements IConfigureNamedOptions<TOptions> IConfigureOptions<TOptions> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.EnumExtensions.html": {
    "href": "api/DNV.Authorization.Web.EnumExtensions.html",
    "title": "Class EnumExtensions",
    "keywords": "Class EnumExtensions Provides extension methods to enum. Inheritance object EnumExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax public static class EnumExtensions Methods | Improve this Doc View Source EnumerateNestedTypes(Type) Get all refered type of a Type Declaration public static IEnumerable<Type> EnumerateNestedTypes(this Type type) Parameters Type Name Description Type type The target Type. Returns Type Description IEnumerable<Type> The collection of types. IEnumerable<T> | Improve this Doc View Source FindNestedType(Type, Predicate<Type>) Get a refered type of a Type with a predicate function. Declaration public static Type FindNestedType(this Type type, Predicate<Type> filter) Parameters Type Name Description Type type The target Type. Predicate<Type> filter A predicate to filter type Returns Type Description Type The Type | Improve this Doc View Source GetPermissionKey(Enum) Declaration public static string GetPermissionKey(this Enum enumValue) Parameters Type Name Description Enum enumValue Returns Type Description string"
  },
  "api/DNV.Authorization.Web.html": {
    "href": "api/DNV.Authorization.Web.html",
    "title": "Namespace DNV.Authorization.Web",
    "keywords": "Namespace DNV.Authorization.Web Classes AttributeAuthorizationHandler<TRequirement, TAttribute> CompanyIdentityFieldNameFilterAttribute Provides a api controller filter to get a company id. CompanyMemberIgnorePermissionFilterAttribute Provides a api controller filter to ignore permissions check for user when access their own company's resource. Constants CookieAuthenticationOptionsSetup EnumExtensions Provides extension methods to enum. PermissionAuthorizeAttribute Provides a api controller action's decoartor to specify access permission. PermissionController PermissionDefaultSetup Extension methods to register permission related services to IServiceCollection PermissionMatrix Provides a predefined permission related to user management. PermissionValueAttribute Represents permission information for a permission record. Interfaces IPermissionMatrix Marker interface indicate class which has permission defined. define permission in Enum which field has attribute PermissionValueAttribute in the implemented class. Those permissions will be loaded by PermissionRepository Enums PermissionMatrix.Premissions"
  },
  "api/DNV.Authorization.Web.IPermissionMatrix.html": {
    "href": "api/DNV.Authorization.Web.IPermissionMatrix.html",
    "title": "Interface IPermissionMatrix",
    "keywords": "Interface IPermissionMatrix Marker interface indicate class which has permission defined. define permission in Enum which field has attribute PermissionValueAttribute in the implemented class. Those permissions will be loaded by PermissionRepository Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax public interface IPermissionMatrix Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.PermissionAuthorizeAttribute.html": {
    "href": "api/DNV.Authorization.Web.PermissionAuthorizeAttribute.html",
    "title": "Class PermissionAuthorizeAttribute",
    "keywords": "Class PermissionAuthorizeAttribute Provides a api controller action's decoartor to specify access permission. Inheritance object Attribute AuthorizeAttribute PermissionAuthorizeAttribute Implements IAuthorizeData Inherited Members AuthorizeAttribute.Policy AuthorizeAttribute.Roles AuthorizeAttribute.AuthenticationSchemes Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = true)] public class PermissionAuthorizeAttribute : AuthorizeAttribute, IAuthorizeData Constructors | Improve this Doc View Source PermissionAuthorizeAttribute(params object[]) Constructs a new instance of PermissionAuthorizeAttribute Declaration public PermissionAuthorizeAttribute(params object[] permissionsToCheck) Parameters Type Name Description object[] permissionsToCheck A collection of required permissions. | Improve this Doc View Source PermissionAuthorizeAttribute(params string[]) Constructs a new instance of PermissionAuthorizeAttribute Declaration public PermissionAuthorizeAttribute(params string[] permissionsToCheck) Parameters Type Name Description string[] permissionsToCheck A collection of required permissions. Properties | Improve this Doc View Source PermissionsToCheck Get the collection of required permissions Declaration public string[] PermissionsToCheck { get; } Property Value Type Description string[] Implements IAuthorizeData Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.PermissionController.html": {
    "href": "api/DNV.Authorization.Web.PermissionController.html",
    "title": "Class PermissionController",
    "keywords": "Class PermissionController Inheritance object ControllerBase PermissionController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.User object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax [Authorize] [ApiController] [Route(\"api/[controller]\")] [ApiExplorerSettings(GroupName = \"UserManagement's Permission APIs\")] public class PermissionController : ControllerBase Constructors | Improve this Doc View Source PermissionController(IPermissionRepository) Declaration public PermissionController(IPermissionRepository permissionRepository) Parameters Type Name Description IPermissionRepository permissionRepository Methods | Improve this Doc View Source Get() Declaration [HttpGet] public Task<IEnumerable<PermissionEntity>> Get() Returns Type Description Task<IEnumerable<PermissionEntity>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.PermissionDefaultSetup.html": {
    "href": "api/DNV.Authorization.Web.PermissionDefaultSetup.html",
    "title": "Class PermissionDefaultSetup",
    "keywords": "Class PermissionDefaultSetup Extension methods to register permission related services to IServiceCollection Inheritance object PermissionDefaultSetup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax public static class PermissionDefaultSetup Methods | Improve this Doc View Source AddCookieValidateHandler(CookieAuthenticationEvents) Add customized CookieValidateHandler to the OnValidatePrincipal. services.AddAuthentication().AddCookie(o => o.Events.AddCookieValidateHandler(services)); Declaration public static CookieAuthenticationEvents AddCookieValidateHandler(this CookieAuthenticationEvents cookieEvents) Parameters Type Name Description CookieAuthenticationEvents cookieEvents CookieAuthenticationEvents Returns Type Description CookieAuthenticationEvents CookieAuthenticationEvents Remarks Claim based authorization is enabled only if this customized CookieValidateHandler are added. | Improve this Doc View Source AddPermissionAuthorizationWithoutUserPermissionReader(IServiceCollection, PermissionOptions) Setup permission authorization with default PermissionRepository. Additionaly,IUserPermissionReader's implementation has to be registered at other place. Declaration public static IServiceCollection AddPermissionAuthorizationWithoutUserPermissionReader(this IServiceCollection services, PermissionOptions permissionOptions = null) Parameters Type Name Description IServiceCollection services IServiceCollection PermissionOptions permissionOptions An optional parameter.PermissionOptions controls the permission check behavior. Returns Type Description IServiceCollection IServiceCollection | Improve this Doc View Source AddPermissionAuthorizationWithoutUserPermissionReader<TPermissionRepository>(IServiceCollection, PermissionOptions) Setup permission authorization with customized implementation of IPermissionRepository. Additionaly,IUserPermissionReader's implementation has to be registered at other place. Declaration public static IServiceCollection AddPermissionAuthorizationWithoutUserPermissionReader<TPermissionRepository>(this IServiceCollection services, PermissionOptions permissionOptions = null) where TPermissionRepository : IPermissionRepository Parameters Type Name Description IServiceCollection services IServiceCollection PermissionOptions permissionOptions An optional parameter.PermissionOptions controls the permission check behavior. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TPermissionRepository The implemenation of IPermissionRepository | Improve this Doc View Source AddPermissionAuthorization<TUserPermissionReader>(IServiceCollection, PermissionOptions) Setup permission authorization with default PermissionRepository and customized implementation of IUserPermissionReader. Register IPermissionRepository's default implementation PermissionRepository which fetch all permissions defined in source code. The implementation of IUserPermissionReader must be specified to replace generic type TUserPermissionReader Declaration public static IServiceCollection AddPermissionAuthorization<TUserPermissionReader>(this IServiceCollection services, PermissionOptions permissionOptions = null) where TUserPermissionReader : IUserPermissionReader Parameters Type Name Description IServiceCollection services IServiceCollection PermissionOptions permissionOptions An optional parameter.PermissionOptions controls the permission check behavior. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TUserPermissionReader The implemenation of IUserPermissionReader | Improve this Doc View Source AddPermissionAuthorization<TUserPermissionReader, TPermissionRepository>(IServiceCollection, PermissionOptions) Setup permission authorization with customized implementation of IPermissionRepository and IUserPermissionReader. Declaration public static IServiceCollection AddPermissionAuthorization<TUserPermissionReader, TPermissionRepository>(this IServiceCollection services, PermissionOptions permissionOptions = null) where TUserPermissionReader : IUserPermissionReader where TPermissionRepository : IPermissionRepository Parameters Type Name Description IServiceCollection services IServiceCollection PermissionOptions permissionOptions An optional parameter.PermissionOptions controls the permission check behavior. Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TUserPermissionReader The implemenation of IUserPermissionReader TPermissionRepository The implemenation of IPermissionRepository | Improve this Doc View Source PouplateRoleOfPrincipal(HttpContext, ClaimsPrincipal, string) Populate user's permissions into Role Claims. Declaration public static Task PouplateRoleOfPrincipal(HttpContext httpContext, ClaimsPrincipal claimsPrincipal, string companyId = \"Company_Role_Not_Relevant\") Parameters Type Name Description HttpContext httpContext Get injected services from HttpContext's RequestServices ClaimsPrincipal claimsPrincipal ClaimsPrincipal string companyId Thd id of a company. Returns Type Description Task | Improve this Doc View Source UsePermissionRepository<TPermissionRepository>(IServiceCollection) Use you own IPermissionRepository implementation to replace default built-in implementation. Declaration public static IServiceCollection UsePermissionRepository<TPermissionRepository>(this IServiceCollection services) where TPermissionRepository : IPermissionRepository Parameters Type Name Description IServiceCollection services IServiceCollection Returns Type Description IServiceCollection IServiceCollection Type Parameters Name Description TPermissionRepository The implemenation of IPermissionRepository"
  },
  "api/DNV.Authorization.Web.PermissionMatrix.html": {
    "href": "api/DNV.Authorization.Web.PermissionMatrix.html",
    "title": "Class PermissionMatrix",
    "keywords": "Class PermissionMatrix Provides a predefined permission related to user management. Inheritance object PermissionMatrix Implements IPermissionMatrix Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax public class PermissionMatrix : IPermissionMatrix Implements IPermissionMatrix Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Authorization.Web.PermissionMatrix.Premissions.html": {
    "href": "api/DNV.Authorization.Web.PermissionMatrix.Premissions.html",
    "title": "Enum PermissionMatrix.Premissions",
    "keywords": "Enum PermissionMatrix.Premissions Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax public enum PermissionMatrix.Premissions Fields Name Description ManageCompany Permission of role crud operations ManageRole Permission of role crud operations ManageUser Permission of user crud operations ViewCompany Permission of role readonly operation ViewRole Permission of role readonly operation ViewUser Permission of user readonly operation Extension Methods Throws.IfNull<PermissionMatrix.Premissions>(PermissionMatrix.Premissions, string) EnumExtensions.GetPermissionKey(Enum)"
  },
  "api/DNV.Authorization.Web.PermissionValueAttribute.html": {
    "href": "api/DNV.Authorization.Web.PermissionValueAttribute.html",
    "title": "Class PermissionValueAttribute",
    "keywords": "Class PermissionValueAttribute Represents permission information for a permission record. Inheritance object Attribute PermissionValueAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Authorization.Web Assembly: DNV.Authorization.Web.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class PermissionValueAttribute : Attribute Remarks This attribute is attached to an enum filed to define a permission entity. Constructors | Improve this Doc View Source PermissionValueAttribute(string, string, string, string, string) Construct a permission entity Declaration public PermissionValueAttribute(string id, string key, string name, string description, string group) Parameters Type Name Description string id Permission's Id should be unique at the global level. string key Permission's Key should be unique at the global level. It's better to have a human readable key. string name Permission's name. Display on UI string description Permission's description. Display on UI string group Permission's group. group permissions on UI Properties | Improve this Doc View Source Description Permission's description. Display on UI Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Group Permission's group. group permissions on UI Declaration public string Group { get; set; } Property Value Type Description string | Improve this Doc View Source Id Permission's Id should be unique at global level. Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Key Permission's Key should be unique at the global level. It's better to have a human readable key. Declaration public string Key { get; set; } Property Value Type Description string | Improve this Doc View Source Name Permission's name. Display on UI Declaration public string Name { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.Continuation.ContinuationToken.html": {
    "href": "api/DNV.Common.Core.Continuation.ContinuationToken.html",
    "title": "Struct ContinuationToken",
    "keywords": "Struct ContinuationToken Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: DNV.Common.Core.Continuation Assembly: DNV.Common.Core.dll Syntax public struct ContinuationToken Properties | Improve this Doc View Source EndOfResult Declaration public readonly bool EndOfResult { get; } Property Value Type Description bool | Improve this Doc View Source Key Declaration public readonly string Key { get; } Property Value Type Description string | Improve this Doc View Source None Declaration public static ContinuationToken None { get; } Property Value Type Description ContinuationToken Methods | Improve this Doc View Source Create(string, bool) Declaration public static ContinuationToken Create(string key, bool eor = false) Parameters Type Name Description string key bool eor Returns Type Description ContinuationToken | Improve this Doc View Source Equals(ContinuationToken) Declaration public bool Equals(ContinuationToken other) Parameters Type Name Description ContinuationToken other Returns Type Description bool | Improve this Doc View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source operator ==(ContinuationToken, ContinuationToken) Declaration public static bool operator ==(ContinuationToken left, ContinuationToken right) Parameters Type Name Description ContinuationToken left ContinuationToken right Returns Type Description bool | Improve this Doc View Source operator !=(ContinuationToken, ContinuationToken) Declaration public static bool operator !=(ContinuationToken left, ContinuationToken right) Parameters Type Name Description ContinuationToken left ContinuationToken right Returns Type Description bool Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.Continuation.html": {
    "href": "api/DNV.Common.Core.Continuation.html",
    "title": "Namespace DNV.Common.Core.Continuation",
    "keywords": "Namespace DNV.Common.Core.Continuation Structs ContinuationToken"
  },
  "api/DNV.Common.Core.Diagnostics.html": {
    "href": "api/DNV.Common.Core.Diagnostics.html",
    "title": "Namespace DNV.Common.Core.Diagnostics",
    "keywords": "Namespace DNV.Common.Core.Diagnostics Classes Throws"
  },
  "api/DNV.Common.Core.Diagnostics.Throws.html": {
    "href": "api/DNV.Common.Core.Diagnostics.Throws.html",
    "title": "Class Throws",
    "keywords": "Class Throws Inheritance object Throws Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Diagnostics Assembly: DNV.Common.Core.dll Syntax public static class Throws Methods | Improve this Doc View Source IfMemberNull<TParameter, TMember>(TParameter, TMember?, string, string) Throws an ArgumentException if the specified member is null. Declaration public static TMember IfMemberNull<TParameter, TMember>(TParameter argument, TMember? member, string paramName = \"\", string memberName = \"\") where TParameter : notnull Parameters Type Name Description TParameter argument Argument to which member belongs. TMember member Object member to be checked for null. string paramName The name of the parameter being checked. string memberName The name of the member. Returns Type Description TMember The original value of member. Type Parameters Name Description TParameter Argument type. TMember Member type to be checked for null. Examples Throws.IfMemberNull(myObject, myObject.MyProperty) | Improve this Doc View Source IfNullOrEmpty(string?, string) Throws an ArgumentNullException if the string is null, or ArgumentException if it is empty. Declaration public static string IfNullOrEmpty(string? argument, string paramName = \"\") Parameters Type Name Description string argument String to be checked for null or empty. string paramName The name of the parameter being checked. Returns Type Description string The original value of argument. | Improve this Doc View Source IfNullOrEmpty<T>(ICollection<T>?, string) Throws an ArgumentNullException if the collection is null, or ArgumentException if it is empty. Declaration public static ICollection<T> IfNullOrEmpty<T>(ICollection<T>? argument, string paramName = \"\") Parameters Type Name Description ICollection<T> argument The collection to evaluate. string paramName The name of the parameter being checked. Returns Type Description ICollection<T> The original value of argument. Type Parameters Name Description T The type of objects in the collection. | Improve this Doc View Source IfNullOrEmpty<T>(IEnumerable<T>?, string) Throws an ArgumentNullException if the enumerable is null, or ArgumentException if it is empty. Declaration public static IEnumerable<T> IfNullOrEmpty<T>(IEnumerable<T>? argument, string paramName = \"\") Parameters Type Name Description IEnumerable<T> argument The collection to evaluate. string paramName The name of the parameter being checked. Returns Type Description IEnumerable<T> The original value of argument. Type Parameters Name Description T The type of objects in the collection. | Improve this Doc View Source IfNullOrEmpty<T>(IReadOnlyCollection<T>?, string) Throws an ArgumentNullException if the collection is null, or ArgumentException if it is empty. Declaration public static IReadOnlyCollection<T> IfNullOrEmpty<T>(IReadOnlyCollection<T>? argument, string paramName = \"\") Parameters Type Name Description IReadOnlyCollection<T> argument The collection to evaluate. string paramName The name of the parameter being checked. Returns Type Description IReadOnlyCollection<T> The original value of argument. Type Parameters Name Description T The type of objects in the collection. | Improve this Doc View Source IfNullOrMemberNull<TParameter, TMember>(TParameter?, TMember?, string, string) Throws an ArgumentNullException if the specified argument is null, or ArgumentException if the specified member is null. Declaration public static TMember IfNullOrMemberNull<TParameter, TMember>(TParameter? argument, TMember? member, string paramName = \"\", string memberName = \"\") Parameters Type Name Description TParameter argument Argument to be checked for null. TMember member Object member to be checked for null. string paramName The name of the parameter being checked. string memberName The name of the member. Returns Type Description TMember The original value of member. Type Parameters Name Description TParameter Argument type to be checked for null. TMember Member type to be checked for null. Examples Throws.IfNullOrMemberNull(myObject, myObject?.MyProperty) | Improve this Doc View Source IfNullOrWhitespace(string?, string) Throws either an ArgumentNullException or an ArgumentException if the specified string is null or whitespace respectively. Declaration public static string IfNullOrWhitespace(string? argument, string paramName = \"\") Parameters Type Name Description string argument String to be checked for null or whitespace. string paramName The name of the parameter being checked. Returns Type Description string The original value of argument. | Improve this Doc View Source IfNull<T>(T?, string) Throws an ArgumentNullException if the specified argument is null. Declaration public static T IfNull<T>(T? argument, string paramName = \"\") Parameters Type Name Description T argument Object to be checked for null. string paramName The name of the parameter being checked. Returns Type Description T The original value of argument. Type Parameters Name Description T Argument type to be checked for null. | Improve this Doc View Source IfOutOfRange<T>(T, string) Throws an ArgumentOutOfRangeException if the enum value is not valid. Declaration public static T IfOutOfRange<T>(T argument, string paramName = \"\") where T : struct, Enum Parameters Type Name Description T argument The argument to evaluate. string paramName The name of the parameter being checked. Returns Type Description T The original value of argument. Type Parameters Name Description T The type of the enumeration."
  },
  "api/DNV.Common.Core.Hash.HashExtension.html": {
    "href": "api/DNV.Common.Core.Hash.HashExtension.html",
    "title": "Class HashExtension",
    "keywords": "Class HashExtension Inheritance object HashExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Hash Assembly: DNV.Common.Core.dll Syntax public static class HashExtension Methods | Improve this Doc View Source GetLongHashCode(Guid) Declaration public static long GetLongHashCode(this Guid key) Parameters Type Name Description Guid key Returns Type Description long"
  },
  "api/DNV.Common.Core.Hash.html": {
    "href": "api/DNV.Common.Core.Hash.html",
    "title": "Namespace DNV.Common.Core.Hash",
    "keywords": "Namespace DNV.Common.Core.Hash Classes HashExtension"
  },
  "api/DNV.Common.Core.JsonOptions.DictionaryStringObjectJsonConverter.html": {
    "href": "api/DNV.Common.Core.JsonOptions.DictionaryStringObjectJsonConverter.html",
    "title": "Class DictionaryStringObjectJsonConverter",
    "keywords": "Class DictionaryStringObjectJsonConverter Inheritance object JsonConverter JsonConverter<Dictionary<string, object>> DictionaryStringObjectJsonConverter Inherited Members JsonConverter<Dictionary<string, object>>.CanConvert(Type) JsonConverter<Dictionary<string, object>>.Read(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Dictionary<string, object>>.Write(Utf8JsonWriter, Dictionary<string, object>, JsonSerializerOptions) JsonConverter<Dictionary<string, object>>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Dictionary<string, object>>.WriteAsPropertyName(Utf8JsonWriter, Dictionary<string, object>, JsonSerializerOptions) JsonConverter<Dictionary<string, object>>.HandleNull JsonConverter.CanConvert(Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.JsonOptions Assembly: DNV.Common.Core.dll Syntax public class DictionaryStringObjectJsonConverter : JsonConverter<Dictionary<string, object>> Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type Dictionary<string, object>. Declaration public override Dictionary<string, object> Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader The reader. Type typeToConvert The type to convert. JsonSerializerOptions options An object that specifies serialization options to use. Returns Type Description Dictionary<string, object> The converted value. Overrides JsonConverter<Dictionary<string, object>>.Read(ref Utf8JsonReader, Type, JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, Dictionary<string, object>, JsonSerializerOptions) Writes a specified value as JSON. Declaration public override void Write(Utf8JsonWriter writer, Dictionary<string, object> value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer The writer to write to. Dictionary<string, object> value The value to convert to JSON. JsonSerializerOptions options An object that specifies serialization options to use. Overrides JsonConverter<Dictionary<string, object>>.Write(Utf8JsonWriter, Dictionary<string, object>, JsonSerializerOptions) Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.JsonOptions.html": {
    "href": "api/DNV.Common.Core.JsonOptions.html",
    "title": "Namespace DNV.Common.Core.JsonOptions",
    "keywords": "Namespace DNV.Common.Core.JsonOptions Classes DictionaryStringObjectJsonConverter JsonOptionsExtensions"
  },
  "api/DNV.Common.Core.JsonOptions.JsonOptionsExtensions.html": {
    "href": "api/DNV.Common.Core.JsonOptions.JsonOptionsExtensions.html",
    "title": "Class JsonOptionsExtensions",
    "keywords": "Class JsonOptionsExtensions Inheritance object JsonOptionsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.JsonOptions Assembly: DNV.Common.Core.dll Syntax public static class JsonOptionsExtensions Methods | Improve this Doc View Source AddGeneralDefaultJsonOptions(IServiceCollection) Declaration public static IServiceCollection AddGeneralDefaultJsonOptions(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddWebDefaultJsonOptions(IServiceCollection) Declaration public static IServiceCollection AddWebDefaultJsonOptions(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection"
  },
  "api/DNV.Common.Core.Pagination.html": {
    "href": "api/DNV.Common.Core.Pagination.html",
    "title": "Namespace DNV.Common.Core.Pagination",
    "keywords": "Namespace DNV.Common.Core.Pagination Classes PageParam PaginatedResultExtensions PaginatedResult<T>"
  },
  "api/DNV.Common.Core.Pagination.PageParam.html": {
    "href": "api/DNV.Common.Core.Pagination.PageParam.html",
    "title": "Class PageParam",
    "keywords": "Class PageParam Inheritance object PageParam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Pagination Assembly: DNV.Common.Core.dll Syntax public class PageParam Constructors | Improve this Doc View Source PageParam(int, int) Declaration public PageParam(int pageIndex, int pageSize) Parameters Type Name Description int pageIndex int pageSize Properties | Improve this Doc View Source PageIndex Declaration public int PageIndex { get; } Property Value Type Description int | Improve this Doc View Source PageSize Declaration public int PageSize { get; } Property Value Type Description int Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.Pagination.PaginatedResult-1.html": {
    "href": "api/DNV.Common.Core.Pagination.PaginatedResult-1.html",
    "title": "Class PaginatedResult<T>",
    "keywords": "Class PaginatedResult<T> Inheritance object PaginatedResult<T> Implements IEnumerable<T> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Pagination Assembly: DNV.Common.Core.dll Syntax public class PaginatedResult<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source PaginatedResult(IEnumerable<T>, int, int, int?) Declaration public PaginatedResult(IEnumerable<T> result, int pageIndex, int pageSize, int? totalCount) Parameters Type Name Description IEnumerable<T> result int pageIndex int pageSize int? totalCount Properties | Improve this Doc View Source PageIndex Declaration public int PageIndex { get; } Property Value Type Description int | Improve this Doc View Source PageSize Declaration public int PageSize { get; } Property Value Type Description int | Improve this Doc View Source TotalCount Declaration public int? TotalCount { get; } Property Value Type Description int? | Improve this Doc View Source TotalPages Declaration public int? TotalPages { get; } Property Value Type Description int? Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> Implements IEnumerable<T> IEnumerable Extension Methods Throws.IfNull<T>(T, string?) PaginatedResultExtensions.Paginate<T>(IEnumerable<T>, PageParam, int?) PaginatedResultExtensions.Paginate<T>(IEnumerable<T>, int, int, int?)"
  },
  "api/DNV.Common.Core.Pagination.PaginatedResultExtensions.html": {
    "href": "api/DNV.Common.Core.Pagination.PaginatedResultExtensions.html",
    "title": "Class PaginatedResultExtensions",
    "keywords": "Class PaginatedResultExtensions Inheritance object PaginatedResultExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Pagination Assembly: DNV.Common.Core.dll Syntax public static class PaginatedResultExtensions Methods | Improve this Doc View Source Paginate<T>(IEnumerable<T>, PageParam, int?) Declaration public static PaginatedResult<T> Paginate<T>(this IEnumerable<T> result, PageParam pageParam, int? totalCount) Parameters Type Name Description IEnumerable<T> result PageParam pageParam int? totalCount Returns Type Description PaginatedResult<T> Type Parameters Name Description T | Improve this Doc View Source Paginate<T>(IEnumerable<T>, int, int, int?) Declaration public static PaginatedResult<T> Paginate<T>(this IEnumerable<T> result, int pageIndex, int pageSize, int? totalCount) Parameters Type Name Description IEnumerable<T> result int pageIndex int pageSize int? totalCount Returns Type Description PaginatedResult<T> Type Parameters Name Description T"
  },
  "api/DNV.Common.Core.Patterns.AsyncLazy-1.html": {
    "href": "api/DNV.Common.Core.Patterns.AsyncLazy-1.html",
    "title": "Class AsyncLazy<T>",
    "keywords": "Class AsyncLazy<T> Inheritance object Lazy<Task<T>> AsyncLazy<T> Inherited Members Lazy<Task<T>>.ToString() Lazy<Task<T>>.IsValueCreated Lazy<Task<T>>.Value object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.Common.Core.Patterns Assembly: DNV.Common.Core.dll Syntax public class AsyncLazy<T> : Lazy<Task<T>> Type Parameters Name Description T Constructors | Improve this Doc View Source AsyncLazy(Func<Task<T>>) Declaration public AsyncLazy(Func<Task<T>> taskFactory) Parameters Type Name Description Func<Task<T>> taskFactory Methods | Improve this Doc View Source GetAwaiter() Declaration public TaskAwaiter<T> GetAwaiter() Returns Type Description TaskAwaiter<T> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.Patterns.html": {
    "href": "api/DNV.Common.Core.Patterns.html",
    "title": "Namespace DNV.Common.Core.Patterns",
    "keywords": "Namespace DNV.Common.Core.Patterns Classes AsyncLazy<T> Singleton<T> VisitorBase<TDrive, TElement> VisitorBase<TDrive, TElement, TResult> Interfaces IVisitor<TElement> IVisitor<TElement, TResult>"
  },
  "api/DNV.Common.Core.Patterns.IVisitor-1.html": {
    "href": "api/DNV.Common.Core.Patterns.IVisitor-1.html",
    "title": "Interface IVisitor<TElement>",
    "keywords": "Interface IVisitor<TElement> Namespace: DNV.Common.Core.Patterns Assembly: DNV.Common.Core.dll Syntax public interface IVisitor<in TElement> Type Parameters Name Description TElement Methods | Improve this Doc View Source Visit(TElement) Declaration void Visit(TElement element) Parameters Type Name Description TElement element | Improve this Doc View Source VisitAsync(TElement) Declaration Task VisitAsync(TElement element) Parameters Type Name Description TElement element Returns Type Description Task Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.Patterns.IVisitor-2.html": {
    "href": "api/DNV.Common.Core.Patterns.IVisitor-2.html",
    "title": "Interface IVisitor<TElement, TResult>",
    "keywords": "Interface IVisitor<TElement, TResult> Namespace: DNV.Common.Core.Patterns Assembly: DNV.Common.Core.dll Syntax public interface IVisitor<in TElement, TResult> Type Parameters Name Description TElement TResult Methods | Improve this Doc View Source Visit(TElement) Declaration TResult Visit(TElement element) Parameters Type Name Description TElement element Returns Type Description TResult | Improve this Doc View Source VisitAsync(TElement) Declaration Task<TResult> VisitAsync(TElement element) Parameters Type Name Description TElement element Returns Type Description Task<TResult> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.Patterns.Singleton-1.html": {
    "href": "api/DNV.Common.Core.Patterns.Singleton-1.html",
    "title": "Class Singleton<T>",
    "keywords": "Class Singleton<T> Inheritance object Singleton<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Patterns Assembly: DNV.Common.Core.dll Syntax public static class Singleton<T> where T : class Type Parameters Name Description T Properties | Improve this Doc View Source Instance Declaration public static T Instance { get; } Property Value Type Description T Methods | Improve this Doc View Source SetFactory(Func<T>) Declaration public static Func<T> SetFactory(Func<T> factory) Parameters Type Name Description Func<T> factory Returns Type Description Func<T>"
  },
  "api/DNV.Common.Core.Patterns.VisitorBase-2.html": {
    "href": "api/DNV.Common.Core.Patterns.VisitorBase-2.html",
    "title": "Class VisitorBase<TDrive, TElement>",
    "keywords": "Class VisitorBase<TDrive, TElement> Inheritance object VisitorBase<TDrive, TElement> Implements IVisitor<TElement> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Patterns Assembly: DNV.Common.Core.dll Syntax public abstract class VisitorBase<TDrive, TElement> : IVisitor<TElement> where TDrive : VisitorBase<TDrive, TElement> Type Parameters Name Description TDrive TElement Methods | Improve this Doc View Source DoVisit(TElement) Declaration public virtual void DoVisit(TElement element) Parameters Type Name Description TElement element | Improve this Doc View Source DoVisitAsync(TElement) Declaration public virtual Task DoVisitAsync(TElement element) Parameters Type Name Description TElement element Returns Type Description Task | Improve this Doc View Source Visit(TElement) Declaration public void Visit(TElement element) Parameters Type Name Description TElement element | Improve this Doc View Source VisitAsync(TElement) Declaration public Task VisitAsync(TElement element) Parameters Type Name Description TElement element Returns Type Description Task Implements IVisitor<TElement> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.Patterns.VisitorBase-3.html": {
    "href": "api/DNV.Common.Core.Patterns.VisitorBase-3.html",
    "title": "Class VisitorBase<TDrive, TElement, TResult>",
    "keywords": "Class VisitorBase<TDrive, TElement, TResult> Inheritance object VisitorBase<TDrive, TElement, TResult> Implements IVisitor<TElement, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Patterns Assembly: DNV.Common.Core.dll Syntax public abstract class VisitorBase<TDrive, TElement, TResult> : IVisitor<TElement, TResult> where TDrive : VisitorBase<TDrive, TElement, TResult> Type Parameters Name Description TDrive TElement TResult Methods | Improve this Doc View Source DoVisit(TElement) Declaration public virtual TResult DoVisit(TElement element) Parameters Type Name Description TElement element Returns Type Description TResult | Improve this Doc View Source DoVisitAsync(TElement) Declaration public virtual Task<TResult> DoVisitAsync(TElement element) Parameters Type Name Description TElement element Returns Type Description Task<TResult> | Improve this Doc View Source Visit(TElement) Declaration public TResult Visit(TElement element) Parameters Type Name Description TElement element Returns Type Description TResult | Improve this Doc View Source VisitAsync(TElement) Declaration public Task<TResult> VisitAsync(TElement element) Parameters Type Name Description TElement element Returns Type Description Task<TResult> Implements IVisitor<TElement, TResult> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Common.Core.Sorting.html": {
    "href": "api/DNV.Common.Core.Sorting.html",
    "title": "Namespace DNV.Common.Core.Sorting",
    "keywords": "Namespace DNV.Common.Core.Sorting Classes SortParam Enums SortDirection"
  },
  "api/DNV.Common.Core.Sorting.SortDirection.html": {
    "href": "api/DNV.Common.Core.Sorting.SortDirection.html",
    "title": "Enum SortDirection",
    "keywords": "Enum SortDirection Namespace: DNV.Common.Core.Sorting Assembly: DNV.Common.Core.dll Syntax public enum SortDirection Fields Name Description Ascending Descending Extension Methods Throws.IfNull<SortDirection>(SortDirection, string)"
  },
  "api/DNV.Common.Core.Sorting.SortParam.html": {
    "href": "api/DNV.Common.Core.Sorting.SortParam.html",
    "title": "Class SortParam",
    "keywords": "Class SortParam Inheritance object SortParam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Common.Core.Sorting Assembly: DNV.Common.Core.dll Syntax public class SortParam Constructors | Improve this Doc View Source SortParam(string, SortDirection) Declaration public SortParam(string sortColumn, SortDirection sortDirection) Parameters Type Name Description string sortColumn SortDirection sortDirection Properties | Improve this Doc View Source SortColumn Declaration public string SortColumn { get; } Property Value Type Description string | Improve this Doc View Source SortDirection Declaration public SortDirection SortDirection { get; } Property Value Type Description SortDirection Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.Abstractions.AsyncLocalContext-1.ContextHolder.html": {
    "href": "api/DNV.Context.Abstractions.AsyncLocalContext-1.ContextHolder.html",
    "title": "Class AsyncLocalContext<T>.ContextHolder",
    "keywords": "Class AsyncLocalContext<T>.ContextHolder Inheritance object AsyncLocalContext<T>.ContextHolder Implements IEquatable<AsyncLocalContext<T>.ContextHolder> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.Abstractions Assembly: DNV.Context.Abstractions.dll Syntax public record AsyncLocalContext<T>.ContextHolder : IEquatable<AsyncLocalContext<T>.ContextHolder> Properties | Improve this Doc View Source CorrelationId Declaration public string? CorrelationId { get; set; } Property Value Type Description string | Improve this Doc View Source Items Declaration public Dictionary<string, object>? Items { get; set; } Property Value Type Description Dictionary<string, object> | Improve this Doc View Source Payload Declaration public T? Payload { get; set; } Property Value Type Description T Implements IEquatable<T> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.Abstractions.AsyncLocalContext-1.html": {
    "href": "api/DNV.Context.Abstractions.AsyncLocalContext-1.html",
    "title": "Class AsyncLocalContext<T>",
    "keywords": "Class AsyncLocalContext<T> Inheritance object AsyncLocalContext<T> Implements IAmbientContext<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.Abstractions Assembly: DNV.Context.Abstractions.dll Syntax public class AsyncLocalContext<T> : IAmbientContext<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source AsyncLocalContext() Declaration public AsyncLocalContext() Properties | Improve this Doc View Source CorrelationId Declaration public string? CorrelationId { get; } Property Value Type Description string | Improve this Doc View Source HasValue Declaration public bool HasValue { get; } Property Value Type Description bool | Improve this Doc View Source Items Declaration public IDictionary<string, object>? Items { get; } Property Value Type Description IDictionary<string, object> | Improve this Doc View Source Payload Declaration public T? Payload { get; } Property Value Type Description T Methods | Improve this Doc View Source CreateContext(T?, string?, IDictionary<string, object>?) Declaration public void CreateContext(T? payload, string? correlationId, IDictionary<string, object>? items = null) Parameters Type Name Description T payload string correlationId IDictionary<string, object> items Implements IAmbientContext<T> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.Abstractions.html": {
    "href": "api/DNV.Context.Abstractions.html",
    "title": "Namespace DNV.Context.Abstractions",
    "keywords": "Namespace DNV.Context.Abstractions Classes AsyncLocalContext<T> AsyncLocalContext<T>.ContextHolder Interfaces IAmbientContext<T> IContextAccessor<T> IContextCreator<T>"
  },
  "api/DNV.Context.Abstractions.IAmbientContext-1.html": {
    "href": "api/DNV.Context.Abstractions.IAmbientContext-1.html",
    "title": "Interface IAmbientContext<T>",
    "keywords": "Interface IAmbientContext<T> Namespace: DNV.Context.Abstractions Assembly: DNV.Context.Abstractions.dll Syntax public interface IAmbientContext<out T> where T : class Type Parameters Name Description T Properties | Improve this Doc View Source CorrelationId Declaration string? CorrelationId { get; } Property Value Type Description string | Improve this Doc View Source Items Declaration IDictionary<string, object>? Items { get; } Property Value Type Description IDictionary<string, object> | Improve this Doc View Source Payload Declaration T? Payload { get; } Property Value Type Description T Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.Abstractions.IContextAccessor-1.html": {
    "href": "api/DNV.Context.Abstractions.IContextAccessor-1.html",
    "title": "Interface IContextAccessor<T>",
    "keywords": "Interface IContextAccessor<T> Namespace: DNV.Context.Abstractions Assembly: DNV.Context.Abstractions.dll Syntax public interface IContextAccessor<out T> where T : class Type Parameters Name Description T Properties | Improve this Doc View Source Context Declaration IAmbientContext<out T>? Context { get; } Property Value Type Description IAmbientContext<T> | Improve this Doc View Source Initialized Declaration bool Initialized { get; } Property Value Type Description bool Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.Abstractions.IContextCreator-1.html": {
    "href": "api/DNV.Context.Abstractions.IContextCreator-1.html",
    "title": "Interface IContextCreator<T>",
    "keywords": "Interface IContextCreator<T> Namespace: DNV.Context.Abstractions Assembly: DNV.Context.Abstractions.dll Syntax public interface IContextCreator<T> Type Parameters Name Description T Methods | Improve this Doc View Source InitializeContext(T?, string?, IDictionary<string, object>?) Declaration void InitializeContext(T? payload, string? correlationId, IDictionary<string, object>? items = null) Parameters Type Name Description T payload string correlationId IDictionary<string, object> items Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.AspNet.AspNetContextAccessor-1.html": {
    "href": "api/DNV.Context.AspNet.AspNetContextAccessor-1.html",
    "title": "Class AspNetContextAccessor<T>",
    "keywords": "Class AspNetContextAccessor<T> Inheritance object AspNetContextAccessor<T> Implements IContextAccessor<T> IContextCreator<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.AspNet Assembly: DNV.Context.AspNet.dll Syntax public class AspNetContextAccessor<T> : IContextAccessor<T>, IContextCreator<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source AspNetContextAccessor(Func<HttpContext, (bool, T?)>) Declaration public AspNetContextAccessor(Func<HttpContext, (bool, T?)> payloadCreator) Parameters Type Name Description Func<HttpContext, (bool, T)> payloadCreator Fields | Improve this Doc View Source HeaderKey Declaration public static readonly string HeaderKey Field Value Type Description string Properties | Improve this Doc View Source Context Declaration public IAmbientContext<T>? Context { get; } Property Value Type Description IAmbientContext<T> | Improve this Doc View Source Initialized Declaration public bool Initialized { get; } Property Value Type Description bool Methods | Improve this Doc View Source Initialize(HttpContext, JsonSerializerOptions?) Declaration public void Initialize(HttpContext httpContext, JsonSerializerOptions? jsonSerializerOptions = null) Parameters Type Name Description HttpContext httpContext JsonSerializerOptions jsonSerializerOptions | Improve this Doc View Source InitializeContext(T?, string?, IDictionary<string, object>?) Declaration public void InitializeContext(T? payload, string? correlationId, IDictionary<string, object>? items = null) Parameters Type Name Description T payload string correlationId IDictionary<string, object> items Implements IContextAccessor<T> IContextCreator<T> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.AspNet.AspNetContextExtensions.html": {
    "href": "api/DNV.Context.AspNet.AspNetContextExtensions.html",
    "title": "Class AspNetContextExtensions",
    "keywords": "Class AspNetContextExtensions Inheritance object AspNetContextExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.AspNet Assembly: DNV.Context.AspNet.dll Syntax public static class AspNetContextExtensions Methods | Improve this Doc View Source AddAspNetContext<T>(IServiceCollection, Func<HttpContext, (bool succeeded, T? context)>, Action<JsonSerializerOptions>?) Declaration public static IServiceCollection AddAspNetContext<T>(this IServiceCollection services, Func<HttpContext, (bool succeeded, T? context)> ctxCreator, Action<JsonSerializerOptions>? jsonOptionsSetup = null) where T : class Parameters Type Name Description IServiceCollection services Func<HttpContext, (bool, T)> ctxCreator Action<JsonSerializerOptions> jsonOptionsSetup Returns Type Description IServiceCollection Type Parameters Name Description T | Improve this Doc View Source UseAspNetContext<T>(IApplicationBuilder) Declaration public static IApplicationBuilder UseAspNetContext<T>(this IApplicationBuilder builder) where T : class Parameters Type Name Description IApplicationBuilder builder Returns Type Description IApplicationBuilder Type Parameters Name Description T"
  },
  "api/DNV.Context.AspNet.AspNetContextMiddleware-1.html": {
    "href": "api/DNV.Context.AspNet.AspNetContextMiddleware-1.html",
    "title": "Class AspNetContextMiddleware<T>",
    "keywords": "Class AspNetContextMiddleware<T> Inheritance object AspNetContextMiddleware<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.AspNet Assembly: DNV.Context.AspNet.dll Syntax public class AspNetContextMiddleware<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source AspNetContextMiddleware(RequestDelegate, IOptions<JsonSerializerOptions>?) Declaration public AspNetContextMiddleware(RequestDelegate next, IOptions<JsonSerializerOptions>? jsonSerializerOptions) Parameters Type Name Description RequestDelegate next IOptions<JsonSerializerOptions> jsonSerializerOptions Methods | Improve this Doc View Source Invoke(HttpContext) Declaration public Task Invoke(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.AspNet.html": {
    "href": "api/DNV.Context.AspNet.html",
    "title": "Namespace DNV.Context.AspNet",
    "keywords": "Namespace DNV.Context.AspNet Classes AspNetContextAccessor<T> AspNetContextExtensions AspNetContextMiddleware<T>"
  },
  "api/DNV.Context.HttpClient.html": {
    "href": "api/DNV.Context.HttpClient.html",
    "title": "Namespace DNV.Context.HttpClient",
    "keywords": "Namespace DNV.Context.HttpClient Classes HttpClientExtensions"
  },
  "api/DNV.Context.HttpClient.HttpClientExtensions.html": {
    "href": "api/DNV.Context.HttpClient.HttpClientExtensions.html",
    "title": "Class HttpClientExtensions",
    "keywords": "Class HttpClientExtensions Inheritance object HttpClientExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.HttpClient Assembly: DNV.Context.HttpClient.dll Syntax public static class HttpClientExtensions Methods | Improve this Doc View Source AddHttpClientContextHandler<T>(IHttpClientBuilder) Declaration public static IHttpClientBuilder AddHttpClientContextHandler<T>(this IHttpClientBuilder builder) where T : class Parameters Type Name Description IHttpClientBuilder builder Returns Type Description IHttpClientBuilder Type Parameters Name Description T | Improve this Doc View Source AddHttpClientContext<T>(IServiceCollection, Action<IServiceProvider, HttpClient>?, Action<JsonSerializerOptions>?) Declaration public static IServiceCollection AddHttpClientContext<T>(this IServiceCollection services, Action<IServiceProvider, HttpClient>? configAction = null, Action<JsonSerializerOptions>? jsonOptionSetup = null) where T : class Parameters Type Name Description IServiceCollection services Action<IServiceProvider, HttpClient> configAction Action<JsonSerializerOptions> jsonOptionSetup Returns Type Description IServiceCollection Type Parameters Name Description T | Improve this Doc View Source CreateContextClient<T>(IHttpClientFactory) Declaration public static HttpClient CreateContextClient<T>(this IHttpClientFactory factory) where T : class Parameters Type Name Description IHttpClientFactory factory Returns Type Description HttpClient Type Parameters Name Description T"
  },
  "api/DNV.Context.ServiceBus.html": {
    "href": "api/DNV.Context.ServiceBus.html",
    "title": "Namespace DNV.Context.ServiceBus",
    "keywords": "Namespace DNV.Context.ServiceBus Classes LocalContextAccessor<T> ServiceBusMessageBuilder<T> ServiceBusProcessorExtensions ServiceBusSenderExtensions Interfaces IServiceBusMessageBuilder<T>"
  },
  "api/DNV.Context.ServiceBus.IServiceBusMessageBuilder-1.html": {
    "href": "api/DNV.Context.ServiceBus.IServiceBusMessageBuilder-1.html",
    "title": "Interface IServiceBusMessageBuilder<T>",
    "keywords": "Interface IServiceBusMessageBuilder<T> Namespace: DNV.Context.ServiceBus Assembly: DNV.Context.ServiceBus.dll Syntax public interface IServiceBusMessageBuilder<T> where T : class Type Parameters Name Description T Methods | Improve this Doc View Source CreateServiceBusMessage() Declaration ServiceBusMessage CreateServiceBusMessage() Returns Type Description ServiceBusMessage | Improve this Doc View Source CreateServiceBusMessage(ServiceBusReceivedMessage) Declaration ServiceBusMessage CreateServiceBusMessage(ServiceBusReceivedMessage receivedMessage) Parameters Type Name Description ServiceBusReceivedMessage receivedMessage Returns Type Description ServiceBusMessage | Improve this Doc View Source CreateServiceBusMessage(BinaryData) Declaration ServiceBusMessage CreateServiceBusMessage(BinaryData body) Parameters Type Name Description BinaryData body Returns Type Description ServiceBusMessage | Improve this Doc View Source CreateServiceBusMessage(ReadOnlyMemory<byte>) Declaration ServiceBusMessage CreateServiceBusMessage(ReadOnlyMemory<byte> body) Parameters Type Name Description ReadOnlyMemory<byte> body Returns Type Description ServiceBusMessage | Improve this Doc View Source CreateServiceBusMessage(string) Declaration ServiceBusMessage CreateServiceBusMessage(string body) Parameters Type Name Description string body Returns Type Description ServiceBusMessage Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.ServiceBus.LocalContextAccessor-1.html": {
    "href": "api/DNV.Context.ServiceBus.LocalContextAccessor-1.html",
    "title": "Class LocalContextAccessor<T>",
    "keywords": "Class LocalContextAccessor<T> Inheritance object LocalContextAccessor<T> Implements IContextAccessor<T> IContextCreator<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.ServiceBus Assembly: DNV.Context.ServiceBus.dll Syntax public class LocalContextAccessor<T> : IContextAccessor<T>, IContextCreator<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source LocalContextAccessor(Func<ServiceBusReceivedMessage, (bool, T?)>) Declaration public LocalContextAccessor(Func<ServiceBusReceivedMessage, (bool, T?)> payloadCreator) Parameters Type Name Description Func<ServiceBusReceivedMessage, (bool, T)> payloadCreator Fields | Improve this Doc View Source HeaderKey Declaration public static readonly string HeaderKey Field Value Type Description string Properties | Improve this Doc View Source Context Declaration public IAmbientContext<T>? Context { get; } Property Value Type Description IAmbientContext<T> | Improve this Doc View Source Initialized Declaration public bool Initialized { get; } Property Value Type Description bool Methods | Improve this Doc View Source Initialize(ServiceBusReceivedMessage, JsonSerializerOptions?) Declaration public void Initialize(ServiceBusReceivedMessage serviceBusMessage, JsonSerializerOptions? jsonSerializerOptions = null) Parameters Type Name Description ServiceBusReceivedMessage serviceBusMessage JsonSerializerOptions jsonSerializerOptions | Improve this Doc View Source InitializeContext(T?, string?, IDictionary<string, object>?) Declaration public void InitializeContext(T? payload, string? correlationId, IDictionary<string, object>? items = null) Parameters Type Name Description T payload string correlationId IDictionary<string, object> items Implements IContextAccessor<T> IContextCreator<T> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.ServiceBus.ServiceBusMessageBuilder-1.html": {
    "href": "api/DNV.Context.ServiceBus.ServiceBusMessageBuilder-1.html",
    "title": "Class ServiceBusMessageBuilder<T>",
    "keywords": "Class ServiceBusMessageBuilder<T> Inheritance object ServiceBusMessageBuilder<T> Implements IServiceBusMessageBuilder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.ServiceBus Assembly: DNV.Context.ServiceBus.dll Syntax public class ServiceBusMessageBuilder<T> : IServiceBusMessageBuilder<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source ServiceBusMessageBuilder(IContextAccessor<T>, IOptions<JsonSerializerOptions>?) Declaration public ServiceBusMessageBuilder(IContextAccessor<T> contextAccessor, IOptions<JsonSerializerOptions>? jsonSerializerOptions) Parameters Type Name Description IContextAccessor<T> contextAccessor IOptions<JsonSerializerOptions> jsonSerializerOptions | Improve this Doc View Source ServiceBusMessageBuilder(IContextAccessor<T>, JsonSerializerOptions?) Declaration public ServiceBusMessageBuilder(IContextAccessor<T> contextAccessor, JsonSerializerOptions? jsonSerializerOptions) Parameters Type Name Description IContextAccessor<T> contextAccessor JsonSerializerOptions jsonSerializerOptions Methods | Improve this Doc View Source CreateServiceBusMessage() Declaration public ServiceBusMessage CreateServiceBusMessage() Returns Type Description ServiceBusMessage | Improve this Doc View Source CreateServiceBusMessage(ServiceBusReceivedMessage) Declaration public ServiceBusMessage CreateServiceBusMessage(ServiceBusReceivedMessage receivedMessage) Parameters Type Name Description ServiceBusReceivedMessage receivedMessage Returns Type Description ServiceBusMessage | Improve this Doc View Source CreateServiceBusMessage(BinaryData) Declaration public ServiceBusMessage CreateServiceBusMessage(BinaryData body) Parameters Type Name Description BinaryData body Returns Type Description ServiceBusMessage | Improve this Doc View Source CreateServiceBusMessage(ReadOnlyMemory<byte>) Declaration public ServiceBusMessage CreateServiceBusMessage(ReadOnlyMemory<byte> body) Parameters Type Name Description ReadOnlyMemory<byte> body Returns Type Description ServiceBusMessage | Improve this Doc View Source CreateServiceBusMessage(string) Declaration public ServiceBusMessage CreateServiceBusMessage(string body) Parameters Type Name Description string body Returns Type Description ServiceBusMessage Implements IServiceBusMessageBuilder<T> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Context.ServiceBus.ServiceBusProcessorExtensions.html": {
    "href": "api/DNV.Context.ServiceBus.ServiceBusProcessorExtensions.html",
    "title": "Class ServiceBusProcessorExtensions",
    "keywords": "Class ServiceBusProcessorExtensions Inheritance object ServiceBusProcessorExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.ServiceBus Assembly: DNV.Context.ServiceBus.dll Syntax public static class ServiceBusProcessorExtensions Methods | Improve this Doc View Source InitializeContext<T>(Func<ProcessMessageEventArgs, Task>, IContextCreator<T>, Func<ServiceBusReceivedMessage, (bool succeeded, T? context)>, JsonSerializerOptions?) Declaration public static Func<ProcessMessageEventArgs, Task> InitializeContext<T>(this Func<ProcessMessageEventArgs, Task> messageHandler, IContextCreator<T> contextCreator, Func<ServiceBusReceivedMessage, (bool succeeded, T? context)> ctxCreator, JsonSerializerOptions? jsonSerializerOptions = null) where T : class Parameters Type Name Description Func<ProcessMessageEventArgs, Task> messageHandler IContextCreator<T> contextCreator Func<ServiceBusReceivedMessage, (bool, T)> ctxCreator JsonSerializerOptions jsonSerializerOptions Returns Type Description Func<ProcessMessageEventArgs, Task> Type Parameters Name Description T | Improve this Doc View Source InitializeContext<T>(Func<ProcessSessionMessageEventArgs, Task>, IContextCreator<T>, Func<ServiceBusReceivedMessage, (bool succeeded, T? context)>, JsonSerializerOptions?) Declaration public static Func<ProcessSessionMessageEventArgs, Task> InitializeContext<T>(this Func<ProcessSessionMessageEventArgs, Task> messageHandler, IContextCreator<T> contextCreator, Func<ServiceBusReceivedMessage, (bool succeeded, T? context)> ctxCreator, JsonSerializerOptions? jsonSerializerOptions = null) where T : class Parameters Type Name Description Func<ProcessSessionMessageEventArgs, Task> messageHandler IContextCreator<T> contextCreator Func<ServiceBusReceivedMessage, (bool, T)> ctxCreator JsonSerializerOptions jsonSerializerOptions Returns Type Description Func<ProcessSessionMessageEventArgs, Task> Type Parameters Name Description T"
  },
  "api/DNV.Context.ServiceBus.ServiceBusSenderExtensions.html": {
    "href": "api/DNV.Context.ServiceBus.ServiceBusSenderExtensions.html",
    "title": "Class ServiceBusSenderExtensions",
    "keywords": "Class ServiceBusSenderExtensions Inheritance object ServiceBusSenderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Context.ServiceBus Assembly: DNV.Context.ServiceBus.dll Syntax public static class ServiceBusSenderExtensions Methods | Improve this Doc View Source ScheduleMessageAsync<T>(ServiceBusSender, ServiceBusMessage, DateTimeOffset, IContextAccessor<T>, JsonSerializerOptions?, CancellationToken) Declaration public static Task<long> ScheduleMessageAsync<T>(this ServiceBusSender serviceBusSender, ServiceBusMessage message, DateTimeOffset scheduledEnqueueTime, IContextAccessor<T> contextAccessor, JsonSerializerOptions? jsonSerializerOptions = null, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description ServiceBusSender serviceBusSender ServiceBusMessage message DateTimeOffset scheduledEnqueueTime IContextAccessor<T> contextAccessor JsonSerializerOptions jsonSerializerOptions CancellationToken cancellationToken Returns Type Description Task<long> Type Parameters Name Description T | Improve this Doc View Source ScheduleMessagesAsync<T>(ServiceBusSender, IEnumerable<ServiceBusMessage>, DateTimeOffset, IContextAccessor<T>, JsonSerializerOptions?, CancellationToken) Declaration public static Task<IReadOnlyList<long>> ScheduleMessagesAsync<T>(this ServiceBusSender serviceBusSender, IEnumerable<ServiceBusMessage> messages, DateTimeOffset scheduledEnqueueTime, IContextAccessor<T> contextAccessor, JsonSerializerOptions? jsonSerializerOptions = null, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description ServiceBusSender serviceBusSender IEnumerable<ServiceBusMessage> messages DateTimeOffset scheduledEnqueueTime IContextAccessor<T> contextAccessor JsonSerializerOptions jsonSerializerOptions CancellationToken cancellationToken Returns Type Description Task<IReadOnlyList<long>> Type Parameters Name Description T | Improve this Doc View Source SendMessageAsync<T>(ServiceBusSender, ServiceBusMessage, IContextAccessor<T>, JsonSerializerOptions?, CancellationToken) Declaration public static Task SendMessageAsync<T>(this ServiceBusSender serviceBusSender, ServiceBusMessage message, IContextAccessor<T> contextAccessor, JsonSerializerOptions? jsonSerializerOptions = null, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description ServiceBusSender serviceBusSender ServiceBusMessage message IContextAccessor<T> contextAccessor JsonSerializerOptions jsonSerializerOptions CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source SendMessagesAsync<T>(ServiceBusSender, IEnumerable<ServiceBusMessage>, IContextAccessor<T>, JsonSerializerOptions?, CancellationToken) Declaration public static Task SendMessagesAsync<T>(this ServiceBusSender serviceBusSender, IEnumerable<ServiceBusMessage> messages, IContextAccessor<T> contextAccessor, JsonSerializerOptions? jsonSerializerOptions = null, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description ServiceBusSender serviceBusSender IEnumerable<ServiceBusMessage> messages IContextAccessor<T> contextAccessor JsonSerializerOptions jsonSerializerOptions CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T"
  },
  "api/DNV.DependencyInjection.Abstractions.DisableAutoRegistrationAttribute.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.DisableAutoRegistrationAttribute.html",
    "title": "Class DisableAutoRegistrationAttribute",
    "keywords": "Class DisableAutoRegistrationAttribute Indicates that the class should not be registered automatically in a DI container. Inheritance object Attribute DisableAutoRegistrationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Abstractions Assembly: DNV.DependencyInjection.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class DisableAutoRegistrationAttribute : Attribute Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.DNVServiceProviderOptions.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.DNVServiceProviderOptions.html",
    "title": "Class DNVServiceProviderOptions",
    "keywords": "Class DNVServiceProviderOptions Represents the options used when creating the DataWorkbench service provider. Inheritance object DNVServiceProviderOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Abstractions Assembly: DNV.DependencyInjection.Abstractions.dll Syntax public class DNVServiceProviderOptions Properties | Improve this Doc View Source AdditionalAssemblies Gets the list of additional assemblies to include in the search. Declaration public IList<Assembly> AdditionalAssemblies { get; } Property Value Type Description IList<Assembly> | Improve this Doc View Source DefaultLifetime Gets or sets the default fallback ServiceLifetime for services that will be automatically registered. Declaration public ServiceLifetime DefaultLifetime { get; set; } Property Value Type Description ServiceLifetime | Improve this Doc View Source DisableRegistrationByConvention Gets or sets the value indicating whether to disable automatic registration of services by convention. If set to true only services with WithLifetimeAttribute, RegisterAsSelfAttribute and services added through ICanAddServices<TContainerBuilder> and ICanAddServicesForTypesWith<TAttribute, TContainerBuilder> will be registered in the service provider. Declaration public bool DisableRegistrationByConvention { get; set; } Property Value Type Description bool | Improve this Doc View Source EntryPointAssemblyName Gets or sets the entry point assembly name. The type scanner will search for services in the Assembly starting with the given name. Declaration public string EntryPointAssemblyName { get; set; } Property Value Type Description string | Improve this Doc View Source IgnoredAssemblies Gets the assembly names to ignore. Declaration public IList<Assembly> IgnoredAssemblies { get; } Property Value Type Description IList<Assembly> | Improve this Doc View Source IgnoredAssemblyNames Gets the assembly names to ignore. Declaration public IList<string> IgnoredAssemblyNames { get; } Property Value Type Description IList<string> | Improve this Doc View Source IgnoredBaseTypes Gets the types to ignore. Every class implementing one of these types will be ignored. Declaration public IList<Type> IgnoredBaseTypes { get; } Property Value Type Description IList<Type> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.html",
    "title": "Namespace DNV.DependencyInjection.Abstractions",
    "keywords": "Namespace DNV.DependencyInjection.Abstractions Classes DNVServiceProviderOptions Represents the options used when creating the DataWorkbench service provider. DisableAutoRegistrationAttribute Indicates that the class should not be registered automatically in a DI container. RegisterAsSelfAttribute Indicates that the class should be registered as itself in a DI container. ServiceCollectionExtensions Extension methods for service collection. Interfaces ICanAddServices Defines a system that can add services to a IServiceCollection. ICanAddServicesForTypesWith<TAttribute> Defines a system that can add services to a IServiceCollection for classes with a specific Attribute. ICanAddServicesForTypesWith<TAttribute, TContainerBuilder> Defines a system that can add services to a TContainerBuilder for classes with a specific Attribute. ICanAddServices<TContainerBuilder> Defines a system that can add services to a TContainerBuilder."
  },
  "api/DNV.DependencyInjection.Abstractions.ICanAddServices-1.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.ICanAddServices-1.html",
    "title": "Interface ICanAddServices<TContainerBuilder>",
    "keywords": "Interface ICanAddServices<TContainerBuilder> Defines a system that can add services to a TContainerBuilder. Namespace: DNV.DependencyInjection.Abstractions Assembly: DNV.DependencyInjection.Abstractions.dll Syntax public interface ICanAddServices<in TContainerBuilder> where TContainerBuilder : notnull Type Parameters Name Description TContainerBuilder The type of the container builder. Methods | Improve this Doc View Source AddTo(TContainerBuilder) Adds services to the TContainerBuilder. Declaration void AddTo(TContainerBuilder builder) Parameters Type Name Description TContainerBuilder builder The container builder to add services into. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.ICanAddServices.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.ICanAddServices.html",
    "title": "Interface ICanAddServices",
    "keywords": "Interface ICanAddServices Defines a system that can add services to a IServiceCollection. Inherited Members ICanAddServices<IServiceCollection>.AddTo(IServiceCollection) Namespace: DNV.DependencyInjection.Abstractions Assembly: DNV.DependencyInjection.Abstractions.dll Syntax public interface ICanAddServices : ICanAddServices<IServiceCollection> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.ICanAddServicesForTypesWith-1.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.ICanAddServicesForTypesWith-1.html",
    "title": "Interface ICanAddServicesForTypesWith<TAttribute>",
    "keywords": "Interface ICanAddServicesForTypesWith<TAttribute> Defines a system that can add services to a IServiceCollection for classes with a specific Attribute. Inherited Members ICanAddServicesForTypesWith<TAttribute, IServiceCollection>.AddServiceFor(Type, TAttribute, IServiceCollection) Namespace: DNV.DependencyInjection.Abstractions Assembly: DNV.DependencyInjection.Abstractions.dll Syntax public interface ICanAddServicesForTypesWith<in TAttribute> : ICanAddServicesForTypesWith<TAttribute, IServiceCollection> where TAttribute : Attribute Type Parameters Name Description TAttribute The type of the Attribute. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.ICanAddServicesForTypesWith-2.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.ICanAddServicesForTypesWith-2.html",
    "title": "Interface ICanAddServicesForTypesWith<TAttribute, TContainerBuilder>",
    "keywords": "Interface ICanAddServicesForTypesWith<TAttribute, TContainerBuilder> Defines a system that can add services to a TContainerBuilder for classes with a specific Attribute. Namespace: DNV.DependencyInjection.Abstractions Assembly: DNV.DependencyInjection.Abstractions.dll Syntax public interface ICanAddServicesForTypesWith<in TAttribute, in TContainerBuilder> where TAttribute : Attribute where TContainerBuilder : notnull Type Parameters Name Description TAttribute The type of the Attribute. TContainerBuilder The type of the container builder. Methods | Improve this Doc View Source AddServiceFor(Type, TAttribute, TContainerBuilder) Adds services for the Type with the TAttribute attribute to the IServiceCollection. Declaration void AddServiceFor(Type type, TAttribute attribute, TContainerBuilder services) Parameters Type Name Description Type type The type with the attribute. TAttribute attribute The attribute instance. TContainerBuilder services The builder to add services into. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.Lifetime.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.Lifetime.html",
    "title": "Namespace DNV.DependencyInjection.Abstractions.Lifetime",
    "keywords": "Namespace DNV.DependencyInjection.Abstractions.Lifetime Classes TypeExtensions Extension methods for Type. TypeHasMultipleLifetimesAttributes Exception that gets thrown when a Type has multiple lifetimes. WithLifetimeAttribute Indicates the ServiceLifetime"
  },
  "api/DNV.DependencyInjection.Abstractions.Lifetime.TypeExtensions.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.Lifetime.TypeExtensions.html",
    "title": "Class TypeExtensions",
    "keywords": "Class TypeExtensions Extension methods for Type. Inheritance object TypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Abstractions.Lifetime Assembly: DNV.DependencyInjection.Abstractions.dll Syntax public static class TypeExtensions Methods | Improve this Doc View Source GetLifetime(Type, ServiceLifetime) Gets the ServiceLifetime for the the Type. Declaration public static ServiceLifetime GetLifetime(this Type type, ServiceLifetime fallbackLifetime = ServiceLifetime.Transient) Parameters Type Name Description Type type The type to get the service lifetime for. ServiceLifetime fallbackLifetime The ServiceLifetime to fallback to if type did not have WithLifetimeAttribute. Returns Type Description ServiceLifetime The service lifetime for the type. | Improve this Doc View Source TryGetLifetime(Type, ServiceLifetime, out ServiceLifetime) Tries to get the ServiceLifetime for the the Type from its defined attributes. Declaration public static bool TryGetLifetime(this Type type, ServiceLifetime fallbackLifetime, out ServiceLifetime lifetime) Parameters Type Name Description Type type The type to get the service lifetime for. ServiceLifetime fallbackLifetime The ServiceLifetime to fallback to if type did not have WithLifetimeAttribute. ServiceLifetime lifetime The outputted ServiceLifetime. Returns Type Description bool True if it has WithLifetimeAttribute attribute, false if not. | Improve this Doc View Source TryGetLifetime(Type, out ServiceLifetime) Tries to get the ServiceLifetime for the the Type from its defined attributes. Declaration public static bool TryGetLifetime(this Type type, out ServiceLifetime lifetime) Parameters Type Name Description Type type The type to get the service lifetime for. ServiceLifetime lifetime The outputted ServiceLifetime. Returns Type Description bool True if it has WithLifetimeAttribute attribute, false if not."
  },
  "api/DNV.DependencyInjection.Abstractions.Lifetime.TypeHasMultipleLifetimesAttributes.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.Lifetime.TypeHasMultipleLifetimesAttributes.html",
    "title": "Class TypeHasMultipleLifetimesAttributes",
    "keywords": "Class TypeHasMultipleLifetimesAttributes Exception that gets thrown when a Type has multiple lifetimes. Inheritance object Exception TypeHasMultipleLifetimesAttributes Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.DependencyInjection.Abstractions.Lifetime Assembly: DNV.DependencyInjection.Abstractions.dll Syntax public class TypeHasMultipleLifetimesAttributes : Exception, ISerializable Constructors | Improve this Doc View Source TypeHasMultipleLifetimesAttributes(Type) Initializes a new instance of the TypeHasMultipleLifetimesAttributes class. Declaration public TypeHasMultipleLifetimesAttributes(Type type) Parameters Type Name Description Type type The type that has multiple WithLifetimeAttribute. Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.Lifetime.WithLifetimeAttribute.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.Lifetime.WithLifetimeAttribute.html",
    "title": "Class WithLifetimeAttribute",
    "keywords": "Class WithLifetimeAttribute Indicates the ServiceLifetime Inheritance object Attribute WithLifetimeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Abstractions.Lifetime Assembly: DNV.DependencyInjection.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class WithLifetimeAttribute : Attribute Constructors | Improve this Doc View Source WithLifetimeAttribute(ServiceLifetime) Initializes a new instance of the WithLifetimeAttribute- Declaration public WithLifetimeAttribute(ServiceLifetime lifetime) Parameters Type Name Description ServiceLifetime lifetime THe ServiceLifetime to register the service as. Properties | Improve this Doc View Source Lifetime Gets the ServiceLifetime. Declaration public ServiceLifetime Lifetime { get; } Property Value Type Description ServiceLifetime Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.RegisterAsSelfAttribute.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.RegisterAsSelfAttribute.html",
    "title": "Class RegisterAsSelfAttribute",
    "keywords": "Class RegisterAsSelfAttribute Indicates that the class should be registered as itself in a DI container. Inheritance object Attribute RegisterAsSelfAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Abstractions Assembly: DNV.DependencyInjection.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class RegisterAsSelfAttribute : Attribute Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Abstractions.ServiceCollectionExtensions.html": {
    "href": "api/DNV.DependencyInjection.Abstractions.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions Extension methods for service collection. Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Abstractions Assembly: DNV.DependencyInjection.Abstractions.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddDNVServiceProviderOptions(IServiceCollection, Assembly, Action<DNVServiceProviderOptions>?) Adds the DNVServiceProviderOptions configuration. Declaration public static IServiceCollection AddDNVServiceProviderOptions(this IServiceCollection services, Assembly entryAssembly, Action<DNVServiceProviderOptions>? configureOptions = null) Parameters Type Name Description IServiceCollection services The service collection. Assembly entryAssembly The entry point assembly. Action<DNVServiceProviderOptions> configureOptions The optional callback for configuring the DNVServiceProviderOptions. Returns Type Description IServiceCollection The builder for continuation. | Improve this Doc View Source AddDNVServiceProviderOptions(IServiceCollection, string, Action<DNVServiceProviderOptions>?) Adds the DNVServiceProviderOptions configuration. Declaration public static IServiceCollection AddDNVServiceProviderOptions(this IServiceCollection services, string entryAssembly, Action<DNVServiceProviderOptions>? configureOptions = null) Parameters Type Name Description IServiceCollection services The service collection. string entryAssembly The entry point assembly name. Action<DNVServiceProviderOptions> configureOptions The optional callback for configuring the DNVServiceProviderOptions. Returns Type Description IServiceCollection The builder for continuation."
  },
  "api/DNV.DependencyInjection.Autofac.HostBuilderExtensions.html": {
    "href": "api/DNV.DependencyInjection.Autofac.HostBuilderExtensions.html",
    "title": "Class HostBuilderExtensions",
    "keywords": "Class HostBuilderExtensions Extension methods for IHostBuilder. Inheritance object HostBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Autofac Assembly: DNV.DependencyInjection.Autofac.dll Syntax public static class HostBuilderExtensions Methods | Improve this Doc View Source UseDnvAutofacDependencyInjection(IHostBuilder, Assembly, Action<DNVServiceProviderOptions>?, Action<ContainerBuilder>?) Adds the DNV DI container discovery process and service providers to the host. Declaration public static IHostBuilder UseDnvAutofacDependencyInjection(this IHostBuilder builder, Assembly entryAssembly, Action<DNVServiceProviderOptions>? configureOptions = null, Action<ContainerBuilder>? configureContainer = null) Parameters Type Name Description IHostBuilder builder The IHostBuilder to modify. Assembly entryAssembly The entry point assembly to discover services in. Action<DNVServiceProviderOptions> configureOptions The callback for configuring DNVServiceProviderOptions. Action<ContainerBuilder> configureContainer The callback for configuring Autofac.ContainerBuilder. Returns Type Description IHostBuilder The IHostBuilder for continuation. | Improve this Doc View Source UseDnvAutofacDependencyInjection(IHostBuilder, string, Action<DNVServiceProviderOptions>?, Action<ContainerBuilder>?) Adds the DNV DI container discovery process and service providers to the host. Declaration public static IHostBuilder UseDnvAutofacDependencyInjection(this IHostBuilder builder, string entryAssemblyName, Action<DNVServiceProviderOptions>? configureOptions = null, Action<ContainerBuilder>? configureContainer = null) Parameters Type Name Description IHostBuilder builder The IHostBuilder to modify. string entryAssemblyName The entry point assembly name to discover services in. Action<DNVServiceProviderOptions> configureOptions The callback for configuring DNVServiceProviderOptions. Action<ContainerBuilder> configureContainer The callback for configuring Autofac.ContainerBuilder. Returns Type Description IHostBuilder The IHostBuilder for continuation."
  },
  "api/DNV.DependencyInjection.Autofac.html": {
    "href": "api/DNV.DependencyInjection.Autofac.html",
    "title": "Namespace DNV.DependencyInjection.Autofac",
    "keywords": "Namespace DNV.DependencyInjection.Autofac Classes HostBuilderExtensions Extension methods for IHostBuilder. Interfaces ICanAddServices Defines a system that can add services to a Autofac.ContainerBuilder. ICanAddServicesForTypesWith<TAttribute> Defines a system that can add services to a Autofac.ContainerBuilder for classes with a specific Attribute."
  },
  "api/DNV.DependencyInjection.Autofac.ICanAddServices.html": {
    "href": "api/DNV.DependencyInjection.Autofac.ICanAddServices.html",
    "title": "Interface ICanAddServices",
    "keywords": "Interface ICanAddServices Defines a system that can add services to a Autofac.ContainerBuilder. Inherited Members ICanAddServices<ContainerBuilder>.AddTo(ContainerBuilder) Namespace: DNV.DependencyInjection.Autofac Assembly: DNV.DependencyInjection.Autofac.dll Syntax public interface ICanAddServices : ICanAddServices<ContainerBuilder> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Autofac.ICanAddServicesForTypesWith-1.html": {
    "href": "api/DNV.DependencyInjection.Autofac.ICanAddServicesForTypesWith-1.html",
    "title": "Interface ICanAddServicesForTypesWith<TAttribute>",
    "keywords": "Interface ICanAddServicesForTypesWith<TAttribute> Defines a system that can add services to a Autofac.ContainerBuilder for classes with a specific Attribute. Inherited Members ICanAddServicesForTypesWith<TAttribute, ContainerBuilder>.AddServiceFor(Type, TAttribute, ContainerBuilder) Namespace: DNV.DependencyInjection.Autofac Assembly: DNV.DependencyInjection.Autofac.dll Syntax public interface ICanAddServicesForTypesWith<in TAttribute> : ICanAddServicesForTypesWith<TAttribute, ContainerBuilder> where TAttribute : Attribute Type Parameters Name Description TAttribute The type of the Attribute. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Configuration.ConfigurationAttribute.html": {
    "href": "api/DNV.DependencyInjection.Configuration.ConfigurationAttribute.html",
    "title": "Class ConfigurationAttribute",
    "keywords": "Class ConfigurationAttribute Indicates that the type should be registered as a configuration object in a DI container. Inheritance object Attribute ConfigurationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Configuration Assembly: DNV.DependencyInjection.Configuration.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct)] public class ConfigurationAttribute : Attribute Constructors | Improve this Doc View Source ConfigurationAttribute(params string[]) Initializes a new instance of the ConfigurationAttribute class. Declaration public ConfigurationAttribute(params string[] section) Parameters Type Name Description string[] section The configuration section to parse the object from, excluding the prefix that's configured with the DNVConfigurationOptions configuration. Properties | Improve this Doc View Source Section Gets the configuration section to parse the configuration object from. Declaration public string Section { get; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Configuration.ConfigurationObjectDefinition-1.html": {
    "href": "api/DNV.DependencyInjection.Configuration.ConfigurationObjectDefinition-1.html",
    "title": "Class ConfigurationObjectDefinition<TConfiguration>",
    "keywords": "Class ConfigurationObjectDefinition<TConfiguration> Represents the definition of a DNV configuration. Inheritance object ConfigurationObjectDefinition<TConfiguration> Implements IAmAConfigurationObjectDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Configuration Assembly: DNV.DependencyInjection.Configuration.dll Syntax public class ConfigurationObjectDefinition<TConfiguration> : IAmAConfigurationObjectDefinition where TConfiguration : class Type Parameters Name Description TConfiguration The Type of the DNV configuration object. Constructors | Improve this Doc View Source ConfigurationObjectDefinition(ConfigurationAttribute) Initializes a new instance of the ConfigurationObjectDefinition<TConfiguration> class. Declaration public ConfigurationObjectDefinition(ConfigurationAttribute attribute) Parameters Type Name Description ConfigurationAttribute attribute The ConfigurationAttribute. Properties | Improve this Doc View Source ConfigurationObjectType Gets the Type of the configuration object. Declaration public Type ConfigurationObjectType { get; } Property Value Type Description Type | Improve this Doc View Source Section Gets the section where this configuration resides in the IConfiguration. Declaration public string Section { get; } Property Value Type Description string Implements IAmAConfigurationObjectDefinition Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Configuration.ConfigurationObjects.html": {
    "href": "api/DNV.DependencyInjection.Configuration.ConfigurationObjects.html",
    "title": "Class ConfigurationObjects",
    "keywords": "Class ConfigurationObjects Represents an implementation of ICanAddServicesForTypesWith<TAttribute, TContainerBuilder> for adding ConfigurationObjectDefinition<TConfiguration> to the IoC container for each type with the ConfigurationAttribute attribute. Inheritance object ConfigurationObjects Implements ICanAddServicesForTypesWith<ConfigurationAttribute> ICanAddServicesForTypesWith<ConfigurationAttribute, IServiceCollection> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Configuration Assembly: DNV.DependencyInjection.Configuration.dll Syntax public class ConfigurationObjects : ICanAddServicesForTypesWith<ConfigurationAttribute>, ICanAddServicesForTypesWith<ConfigurationAttribute, IServiceCollection> Methods | Improve this Doc View Source AddServiceFor(Type, ConfigurationAttribute, IServiceCollection) Adds services for the Type with the ConfigurationAttribute attribute to the IServiceCollection. Declaration public void AddServiceFor(Type type, ConfigurationAttribute attribute, IServiceCollection services) Parameters Type Name Description Type type The type with the attribute. ConfigurationAttribute attribute The attribute instance. IServiceCollection services The builder to add services into. Implements ICanAddServicesForTypesWith<TAttribute> ICanAddServicesForTypesWith<TAttribute, TContainerBuilder> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Configuration.DNVConfigurationOptions.html": {
    "href": "api/DNV.DependencyInjection.Configuration.DNVConfigurationOptions.html",
    "title": "Class DNVConfigurationOptions",
    "keywords": "Class DNVConfigurationOptions Represents the configuration of the DNV configuration system. Inheritance object DNVConfigurationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Configuration Assembly: DNV.DependencyInjection.Configuration.dll Syntax public class DNVConfigurationOptions Properties | Improve this Doc View Source Prefix Gets or sets the configuration path prefix used by the DNV configuration system when reading in configuration objects when ConfigurationAttribute decorator. Declaration public string Prefix { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Configuration.HostExtensions.html": {
    "href": "api/DNV.DependencyInjection.Configuration.HostExtensions.html",
    "title": "Class HostExtensions",
    "keywords": "Class HostExtensions Represents extension methods for adding the DNV configuration system to a host. Inheritance object HostExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Configuration Assembly: DNV.DependencyInjection.Configuration.dll Syntax public static class HostExtensions Methods | Improve this Doc View Source AddDNVConfigurations(IServiceCollection, params string[]) Adds the DNV Configuration system. Declaration public static IServiceCollection AddDNVConfigurations(this IServiceCollection services, params string[] configurationPrefixes) Parameters Type Name Description IServiceCollection services The IServiceCollection. string[] configurationPrefixes The configuration prefixes. Returns Type Description IServiceCollection The builder for continuation. | Improve this Doc View Source UseDNVConfigurations(IHostBuilder, params string[]) Use the DNV Configuration system. Declaration public static IHostBuilder UseDNVConfigurations(this IHostBuilder builder, params string[] configurationPrefixes) Parameters Type Name Description IHostBuilder builder The IHostBuilder. string[] configurationPrefixes The configuration prefixes. Returns Type Description IHostBuilder The builder for continuation."
  },
  "api/DNV.DependencyInjection.Configuration.html": {
    "href": "api/DNV.DependencyInjection.Configuration.html",
    "title": "Namespace DNV.DependencyInjection.Configuration",
    "keywords": "Namespace DNV.DependencyInjection.Configuration Classes ConfigurationAttribute Indicates that the type should be registered as a configuration object in a DI container. ConfigurationObjectDefinition<TConfiguration> Represents the definition of a DNV configuration. ConfigurationObjects Represents an implementation of ICanAddServicesForTypesWith<TAttribute, TContainerBuilder> for adding ConfigurationObjectDefinition<TConfiguration> to the IoC container for each type with the ConfigurationAttribute attribute. DNVConfigurationOptions Represents the configuration of the DNV configuration system. HostExtensions Represents extension methods for adding the DNV configuration system to a host. Interfaces IAmAConfigurationObjectDefinition Defines a configuration object definition."
  },
  "api/DNV.DependencyInjection.Configuration.IAmAConfigurationObjectDefinition.html": {
    "href": "api/DNV.DependencyInjection.Configuration.IAmAConfigurationObjectDefinition.html",
    "title": "Interface IAmAConfigurationObjectDefinition",
    "keywords": "Interface IAmAConfigurationObjectDefinition Defines a configuration object definition. Namespace: DNV.DependencyInjection.Configuration Assembly: DNV.DependencyInjection.Configuration.dll Syntax public interface IAmAConfigurationObjectDefinition Properties | Improve this Doc View Source ConfigurationObjectType Gets the Type of the configuration object. Declaration Type ConfigurationObjectType { get; } Property Value Type Description Type | Improve this Doc View Source Section Gets the section where this configuration resides in the IConfiguration. Declaration string Section { get; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Configuration.Parsing.CannotParseConfiguration.html": {
    "href": "api/DNV.DependencyInjection.Configuration.Parsing.CannotParseConfiguration.html",
    "title": "Class CannotParseConfiguration",
    "keywords": "Class CannotParseConfiguration Exception that gets thrown when a configuration type cannot be parsed. Inheritance object Exception CannotParseConfiguration Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.DependencyInjection.Configuration.Parsing Assembly: DNV.DependencyInjection.Configuration.dll Syntax public class CannotParseConfiguration : Exception, ISerializable Constructors | Improve this Doc View Source CannotParseConfiguration(Exception, Type, string) Initializes a new instance of the CannotParseConfiguration class. Declaration public CannotParseConfiguration(Exception error, Type configuration, string section) Parameters Type Name Description Exception error Type configuration string section Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Configuration.Parsing.ConfigurationParser.html": {
    "href": "api/DNV.DependencyInjection.Configuration.Parsing.ConfigurationParser.html",
    "title": "Class ConfigurationParser",
    "keywords": "Class ConfigurationParser Represents an implementation of IParseConfigurationObjects. Inheritance object ConfigurationParser Implements IParseConfigurationObjects Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Configuration.Parsing Assembly: DNV.DependencyInjection.Configuration.dll Syntax public class ConfigurationParser : IParseConfigurationObjects Methods | Improve this Doc View Source TryParseFrom<TOptions>(IConfigurationSection, out TOptions?, out Exception?) Tries to parse the IConfigurationSection to the specified . Declaration public bool TryParseFrom<TOptions>(IConfigurationSection configuration, out TOptions? parsed, out Exception? error) where TOptions : class Parameters Type Name Description IConfigurationSection configuration The IConfigurationSection to parse. TOptions parsed The outputted . Exception error The outputted Exception. Returns Type Description bool True if successfully parsed, false if not. Type Parameters Name Description TOptions The type of the configuration. Implements IParseConfigurationObjects Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Configuration.Parsing.html": {
    "href": "api/DNV.DependencyInjection.Configuration.Parsing.html",
    "title": "Namespace DNV.DependencyInjection.Configuration.Parsing",
    "keywords": "Namespace DNV.DependencyInjection.Configuration.Parsing Classes CannotParseConfiguration Exception that gets thrown when a configuration type cannot be parsed. ConfigurationParser Represents an implementation of IParseConfigurationObjects. Interfaces IParseConfigurationObjects Defines a parser for a DNV IConfigurationSection."
  },
  "api/DNV.DependencyInjection.Configuration.Parsing.IParseConfigurationObjects.html": {
    "href": "api/DNV.DependencyInjection.Configuration.Parsing.IParseConfigurationObjects.html",
    "title": "Interface IParseConfigurationObjects",
    "keywords": "Interface IParseConfigurationObjects Defines a parser for a DNV IConfigurationSection. Namespace: DNV.DependencyInjection.Configuration.Parsing Assembly: DNV.DependencyInjection.Configuration.dll Syntax public interface IParseConfigurationObjects Methods | Improve this Doc View Source TryParseFrom<TOptions>(IConfigurationSection, out TOptions?, out Exception?) Tries to parse the IConfigurationSection to the specified TOptions. Declaration bool TryParseFrom<TOptions>(IConfigurationSection configuration, out TOptions? parsed, out Exception? error) where TOptions : class Parameters Type Name Description IConfigurationSection configuration The IConfigurationSection to parse. TOptions parsed The outputted TOptions. Exception error The outputted Exception. Returns Type Description bool True if successfully parsed, false if not. Type Parameters Name Description TOptions The type of the configuration. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Microsoft.HostBuilderExtensions.html": {
    "href": "api/DNV.DependencyInjection.Microsoft.HostBuilderExtensions.html",
    "title": "Class HostBuilderExtensions",
    "keywords": "Class HostBuilderExtensions Extension methods for IHostBuilder. Inheritance object HostBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Microsoft Assembly: DNV.DependencyInjection.Microsoft.dll Syntax public static class HostBuilderExtensions Methods | Improve this Doc View Source UseDnvMicrosoftDependencyInjection(IHostBuilder, Assembly, Action<DNVServiceProviderOptions>?, Action<IServiceCollection>?) Adds the DNV DI container discovery process and service providers to the host. Declaration public static IHostBuilder UseDnvMicrosoftDependencyInjection(this IHostBuilder builder, Assembly entryAssembly, Action<DNVServiceProviderOptions>? configureOptions = null, Action<IServiceCollection>? configureContainer = null) Parameters Type Name Description IHostBuilder builder The IHostBuilder to modify. Assembly entryAssembly The entry point assembly to discover services in. Action<DNVServiceProviderOptions> configureOptions The callback for configuring DNVServiceProviderOptions. Action<IServiceCollection> configureContainer The callback for configuring IServiceCollection. Returns Type Description IHostBuilder The IHostBuilder for continuation. | Improve this Doc View Source UseDnvMicrosoftDependencyInjection(IHostBuilder, string, Action<DNVServiceProviderOptions>?, Action<IServiceCollection>?) Adds the DNV DI container discovery process and service providers to the host. Declaration public static IHostBuilder UseDnvMicrosoftDependencyInjection(this IHostBuilder builder, string entryAssemblyName, Action<DNVServiceProviderOptions>? configureOptions = null, Action<IServiceCollection>? configureContainer = null) Parameters Type Name Description IHostBuilder builder The IHostBuilder to modify. string entryAssemblyName The entry point assembly name to discover services in. Action<DNVServiceProviderOptions> configureOptions The callback for configuring DNVServiceProviderOptions. Action<IServiceCollection> configureContainer The callback for configuring IServiceCollection. Returns Type Description IHostBuilder The IHostBuilder for continuation."
  },
  "api/DNV.DependencyInjection.Microsoft.html": {
    "href": "api/DNV.DependencyInjection.Microsoft.html",
    "title": "Namespace DNV.DependencyInjection.Microsoft",
    "keywords": "Namespace DNV.DependencyInjection.Microsoft Classes HostBuilderExtensions Extension methods for IHostBuilder."
  },
  "api/DNV.DependencyInjection.Registry.CouldNotCreateInstanceOfType.html": {
    "href": "api/DNV.DependencyInjection.Registry.CouldNotCreateInstanceOfType.html",
    "title": "Class CouldNotCreateInstanceOfType",
    "keywords": "Class CouldNotCreateInstanceOfType Exception that gets thrown when instantiating a Type using the default parameterless constructor fails. Inheritance object Exception CouldNotCreateInstanceOfType Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.DependencyInjection.Registry Assembly: DNV.DependencyInjection.Registry.dll Syntax public class CouldNotCreateInstanceOfType : Exception, ISerializable Constructors | Improve this Doc View Source CouldNotCreateInstanceOfType(Type) Initializes a new instance of the CouldNotCreateInstanceOfType class. Declaration public CouldNotCreateInstanceOfType(Type type) Parameters Type Name Description Type type The type that could not be instantiated. | Improve this Doc View Source CouldNotCreateInstanceOfType(Type, Exception) Initializes a new instance of the CouldNotCreateInstanceOfType class. Declaration public CouldNotCreateInstanceOfType(Type type, Exception exception) Parameters Type Name Description Type type The type that could not be created. Exception exception The inner exception. Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Registry.DiscoveredServices-1.html": {
    "href": "api/DNV.DependencyInjection.Registry.DiscoveredServices-1.html",
    "title": "Class DiscoveredServices<TContainerBuilder>",
    "keywords": "Class DiscoveredServices<TContainerBuilder> Represents the discovered services that should be configured in the IoC container. Inheritance object DiscoveredServices<TContainerBuilder> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Registry Assembly: DNV.DependencyInjection.Registry.dll Syntax public class DiscoveredServices<TContainerBuilder> where TContainerBuilder : notnull Type Parameters Name Description TContainerBuilder Properties | Improve this Doc View Source AdditionalServices Gets the additional IServiceCollection to register. Declaration public IServiceCollection AdditionalServices { get; } Property Value Type Description IServiceCollection | Improve this Doc View Source Assemblies The assemblies that were searched through. Declaration public IReadOnlyCollection<Assembly> Assemblies { get; } Property Value Type Description IReadOnlyCollection<Assembly> | Improve this Doc View Source ClassesToRegister Gets the ClassesByLifeTime to be registered as their implementing types. Declaration public ClassesByLifeTime ClassesToRegister { get; } Property Value Type Description ClassesByLifeTime | Improve this Doc View Source ClassesToRegisterAsSelf Gets the ClassesByLifeTime to be registered as themselves. Declaration public ClassesByLifeTime ClassesToRegisterAsSelf { get; } Property Value Type Description ClassesByLifeTime Methods | Improve this Doc View Source DiscoverServices(DNVServiceProviderOptions, TContainerBuilder) Gets the singleton instance of DiscoveredServices<TContainerBuilder>. Declaration public static DiscoveredServices<TContainerBuilder> DiscoverServices(DNVServiceProviderOptions options, TContainerBuilder builder) Parameters Type Name Description DNVServiceProviderOptions options The options. TContainerBuilder builder The container builder. Returns Type Description DiscoveredServices<TContainerBuilder> The singleton instance of DiscoveredServices<TContainerBuilder>. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Registry.DNVServiceProviderFactory-1.html": {
    "href": "api/DNV.DependencyInjection.Registry.DNVServiceProviderFactory-1.html",
    "title": "Class DNVServiceProviderFactory<TContainerBuilder>",
    "keywords": "Class DNVServiceProviderFactory<TContainerBuilder> Represents a base implementation of IServiceProviderFactory<TContainerBuilder> for DNV service provider implementations. Inheritance object DNVServiceProviderFactory<TContainerBuilder> Implements IServiceProviderFactory<TContainerBuilder> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Registry Assembly: DNV.DependencyInjection.Registry.dll Syntax public abstract class DNVServiceProviderFactory<TContainerBuilder> : IServiceProviderFactory<TContainerBuilder> where TContainerBuilder : notnull Type Parameters Name Description TContainerBuilder The IServiceProviderFactory<TContainerBuilder> of the container builder. Methods | Improve this Doc View Source CreateBuilder(IServiceCollection) Creates a container builder from an IServiceCollection. Declaration public TContainerBuilder CreateBuilder(IServiceCollection services) Parameters Type Name Description IServiceCollection services The collection of services Returns Type Description TContainerBuilder A container builder that can be used to create an IServiceProvider. | Improve this Doc View Source CreateContainerBuilder(IServiceCollection) Create the TContainerBuilder from the IServiceCollection. Declaration protected abstract TContainerBuilder CreateContainerBuilder(IServiceCollection services) Parameters Type Name Description IServiceCollection services The service collection. Returns Type Description TContainerBuilder The TContainerBuilder. | Improve this Doc View Source CreateServiceProvider(TContainerBuilder) Creates an IServiceProvider from the container builder. Declaration public IServiceProvider CreateServiceProvider(TContainerBuilder containerBuilder) Parameters Type Name Description TContainerBuilder containerBuilder The container builder Returns Type Description IServiceProvider An IServiceProvider | Improve this Doc View Source CreateServiceProvider(TContainerBuilder, DiscoveredServices<TContainerBuilder>) Create the IServiceProvider using the TContainerBuilder. Declaration protected abstract IServiceProvider CreateServiceProvider(TContainerBuilder containerBuilder, DiscoveredServices<TContainerBuilder> discoveredServices) Parameters Type Name Description TContainerBuilder containerBuilder The container builder. DiscoveredServices<TContainerBuilder> discoveredServices The discovered services. Returns Type Description IServiceProvider The IServiceProvider. Implements IServiceProviderFactory<TContainerBuilder> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Registry.html": {
    "href": "api/DNV.DependencyInjection.Registry.html",
    "title": "Namespace DNV.DependencyInjection.Registry",
    "keywords": "Namespace DNV.DependencyInjection.Registry Classes CouldNotCreateInstanceOfType Exception that gets thrown when instantiating a Type using the default parameterless constructor fails. DNVServiceProviderFactory<TContainerBuilder> Represents a base implementation of IServiceProviderFactory<TContainerBuilder> for DNV service provider implementations. DiscoveredServices<TContainerBuilder> Represents the discovered services that should be configured in the IoC container."
  },
  "api/DNV.DependencyInjection.Registry.Types.ClassesByLifeTime.html": {
    "href": "api/DNV.DependencyInjection.Registry.Types.ClassesByLifeTime.html",
    "title": "Class ClassesByLifeTime",
    "keywords": "Class ClassesByLifeTime Represents a set of discovered classes grouped by DI lifecycle. Inheritance object ClassesByLifeTime Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Registry.Types Assembly: DNV.DependencyInjection.Registry.dll Syntax public class ClassesByLifeTime Constructors | Improve this Doc View Source ClassesByLifeTime(IEnumerable<Type>, IEnumerable<Type>, IEnumerable<Type>) Initializes a new instance of the ClassesByLifeTime class. Declaration public ClassesByLifeTime(IEnumerable<Type> singletonClasses, IEnumerable<Type> scopedClasses, IEnumerable<Type> transientClasses) Parameters Type Name Description IEnumerable<Type> singletonClasses The implementations to be registered as singleton. IEnumerable<Type> scopedClasses The implementations to be registered as scoped. IEnumerable<Type> transientClasses The implementations to be registered as transient. Properties | Improve this Doc View Source ScopedClasses Gets the discovered classes that should be registered as scoped. Declaration public IReadOnlyCollection<Type> ScopedClasses { get; } Property Value Type Description IReadOnlyCollection<Type> | Improve this Doc View Source SingletonClasses Gets the discovered classes that should be registered as singleton. Declaration public IReadOnlyCollection<Type> SingletonClasses { get; } Property Value Type Description IReadOnlyCollection<Type> | Improve this Doc View Source TransientClasses Gets the discovered classes that should be registered as transient. Declaration public IReadOnlyCollection<Type> TransientClasses { get; } Property Value Type Description IReadOnlyCollection<Type> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Registry.Types.GenericTypeExtensions.html": {
    "href": "api/DNV.DependencyInjection.Registry.Types.GenericTypeExtensions.html",
    "title": "Class GenericTypeExtensions",
    "keywords": "Class GenericTypeExtensions Extensions on Type for getting information about generic types. Inheritance object GenericTypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.DependencyInjection.Registry.Types Assembly: DNV.DependencyInjection.Registry.dll Syntax public static class GenericTypeExtensions Methods | Improve this Doc View Source GetImplementedGenericInterfaceFirstGenericArgumentType(Type, Type) Tries to get the generic type of an implemented generic interface. Declaration public static Type GetImplementedGenericInterfaceFirstGenericArgumentType(this Type type, Type openGenericInterface) Parameters Type Name Description Type type The Type to get the implemented generic interface type from. Type openGenericInterface The open generic interface. Returns Type Description Type The generic type of an implemented generic interface."
  },
  "api/DNV.DependencyInjection.Registry.Types.html": {
    "href": "api/DNV.DependencyInjection.Registry.Types.html",
    "title": "Namespace DNV.DependencyInjection.Registry.Types",
    "keywords": "Namespace DNV.DependencyInjection.Registry.Types Classes ClassesByLifeTime Represents a set of discovered classes grouped by DI lifecycle. GenericTypeExtensions Extensions on Type for getting information about generic types. OpenGenericInterfaceShouldHaveOnlyOneGenericParameter Exception that gets thrown when an open generic interface has more that one generic parameter when it's expected to have only one. TypeDoesNotImplementGenericInterface Exception that gets thrown when a Type does not implement the given generic interfaces. TypeImplementsGenericInterfaceMultipleTimes Exception that gets thrown when a Type implements the given open generic interfaces multiple times."
  },
  "api/DNV.DependencyInjection.Registry.Types.OpenGenericInterfaceShouldHaveOnlyOneGenericParameter.html": {
    "href": "api/DNV.DependencyInjection.Registry.Types.OpenGenericInterfaceShouldHaveOnlyOneGenericParameter.html",
    "title": "Class OpenGenericInterfaceShouldHaveOnlyOneGenericParameter",
    "keywords": "Class OpenGenericInterfaceShouldHaveOnlyOneGenericParameter Exception that gets thrown when an open generic interface has more that one generic parameter when it's expected to have only one. Inheritance object Exception OpenGenericInterfaceShouldHaveOnlyOneGenericParameter Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.DependencyInjection.Registry.Types Assembly: DNV.DependencyInjection.Registry.dll Syntax public class OpenGenericInterfaceShouldHaveOnlyOneGenericParameter : Exception, ISerializable Constructors | Improve this Doc View Source OpenGenericInterfaceShouldHaveOnlyOneGenericParameter(Type, Type) Initializes a new instance of the OpenGenericInterfaceShouldHaveOnlyOneGenericParameter class. Declaration public OpenGenericInterfaceShouldHaveOnlyOneGenericParameter(Type type, Type genericInterface) Parameters Type Name Description Type type The Type. Type genericInterface The generic interface with multiple generic parameters. Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Registry.Types.TypeDoesNotImplementGenericInterface.html": {
    "href": "api/DNV.DependencyInjection.Registry.Types.TypeDoesNotImplementGenericInterface.html",
    "title": "Class TypeDoesNotImplementGenericInterface",
    "keywords": "Class TypeDoesNotImplementGenericInterface Exception that gets thrown when a Type does not implement the given generic interfaces. Inheritance object Exception TypeDoesNotImplementGenericInterface Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.DependencyInjection.Registry.Types Assembly: DNV.DependencyInjection.Registry.dll Syntax public class TypeDoesNotImplementGenericInterface : Exception, ISerializable Constructors | Improve this Doc View Source TypeDoesNotImplementGenericInterface(Type, Type) Initializes a new instance of the TypeDoesNotImplementGenericInterface class. Declaration public TypeDoesNotImplementGenericInterface(Type type, Type genericInterface) Parameters Type Name Description Type type The Type. Type genericInterface The open generic interface. Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.DependencyInjection.Registry.Types.TypeImplementsGenericInterfaceMultipleTimes.html": {
    "href": "api/DNV.DependencyInjection.Registry.Types.TypeImplementsGenericInterfaceMultipleTimes.html",
    "title": "Class TypeImplementsGenericInterfaceMultipleTimes",
    "keywords": "Class TypeImplementsGenericInterfaceMultipleTimes Exception that gets thrown when a Type implements the given open generic interfaces multiple times. Inheritance object Exception TypeImplementsGenericInterfaceMultipleTimes Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.DependencyInjection.Registry.Types Assembly: DNV.DependencyInjection.Registry.dll Syntax public class TypeImplementsGenericInterfaceMultipleTimes : Exception, ISerializable Constructors | Improve this Doc View Source TypeImplementsGenericInterfaceMultipleTimes(Type, Type) Initializes a new instance of the TypeImplementsGenericInterfaceMultipleTimes class. Declaration public TypeImplementsGenericInterfaceMultipleTimes(Type type, Type genericInterface) Parameters Type Name Description Type type The Type. Type genericInterface The open generic interface. Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Domain.EventHub.MediatR.Extensions.DependencyInjectionExtensions.html": {
    "href": "api/DNV.Domain.EventHub.MediatR.Extensions.DependencyInjectionExtensions.html",
    "title": "Class DependencyInjectionExtensions",
    "keywords": "Class DependencyInjectionExtensions Inheritance object DependencyInjectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Domain.EventHub.MediatR.Extensions Assembly: DNV.Domain.EventHub.MediatR.dll Syntax public static class DependencyInjectionExtensions Methods | Improve this Doc View Source AddMrEventHub(IServiceCollection, MediatRServiceConfiguration, params Assembly[]) Declaration public static IServiceCollection AddMrEventHub(this IServiceCollection services, MediatRServiceConfiguration config, params Assembly[] assemblies) Parameters Type Name Description IServiceCollection services MediatRServiceConfiguration config Assembly[] assemblies Returns Type Description IServiceCollection | Improve this Doc View Source AddMrEventHub(IServiceCollection, Action<MediatRServiceConfiguration>, params Assembly[]) Declaration public static IServiceCollection AddMrEventHub(this IServiceCollection services, Action<MediatRServiceConfiguration> configAction, params Assembly[] assemblies) Parameters Type Name Description IServiceCollection services Action<MediatRServiceConfiguration> configAction Assembly[] assemblies Returns Type Description IServiceCollection | Improve this Doc View Source AddMrEventHub(IServiceCollection, Action<MediatRServiceConfiguration>, params Type[]) Declaration public static IServiceCollection AddMrEventHub(this IServiceCollection services, Action<MediatRServiceConfiguration> configAction, params Type[] types) Parameters Type Name Description IServiceCollection services Action<MediatRServiceConfiguration> configAction Type[] types Returns Type Description IServiceCollection | Improve this Doc View Source AddMrEventHub(IServiceCollection, params Assembly[]) Declaration public static IServiceCollection AddMrEventHub(this IServiceCollection services, params Assembly[] assemblies) Parameters Type Name Description IServiceCollection services Assembly[] assemblies Returns Type Description IServiceCollection | Improve this Doc View Source AddMrEventHub(IServiceCollection, params Type[]) Declaration public static IServiceCollection AddMrEventHub(this IServiceCollection services, params Type[] types) Parameters Type Name Description IServiceCollection services Type[] types Returns Type Description IServiceCollection"
  },
  "api/DNV.Domain.EventHub.MediatR.Extensions.html": {
    "href": "api/DNV.Domain.EventHub.MediatR.Extensions.html",
    "title": "Namespace DNV.Domain.EventHub.MediatR.Extensions",
    "keywords": "Namespace DNV.Domain.EventHub.MediatR.Extensions Classes DependencyInjectionExtensions"
  },
  "api/DNV.Domain.Seedwork.Entity.html": {
    "href": "api/DNV.Domain.Seedwork.Entity.html",
    "title": "Class Entity",
    "keywords": "Class Entity Inheritance object Entity Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Domain.Seedwork Assembly: DNV.Domain.Seedwork.dll Syntax public abstract class Entity Properties | Improve this Doc View Source DomainEvents Declaration public IReadOnlyCollection<Event>? DomainEvents { get; } Property Value Type Description IReadOnlyCollection<Event> | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description string Methods | Improve this Doc View Source AddDomainEvent(Event) Declaration public void AddDomainEvent(Event @event) Parameters Type Name Description Event event | Improve this Doc View Source CalculateHashCode() Declaration protected virtual int CalculateHashCode() Returns Type Description int | Improve this Doc View Source ClearDomainEvents() Declaration public void ClearDomainEvents() | Improve this Doc View Source Equals(object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Improve this Doc View Source IsTransient() Declaration public bool IsTransient() Returns Type Description bool | Improve this Doc View Source RemoveDomainEvent(Event) Declaration public void RemoveDomainEvent(Event @event) Parameters Type Name Description Event event Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Domain.Seedwork.Enumeration-1.html": {
    "href": "api/DNV.Domain.Seedwork.Enumeration-1.html",
    "title": "Class Enumeration<T>",
    "keywords": "Class Enumeration<T> Inheritance object Enumeration<T> EventType Implements IComparable Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.Domain.Seedwork Assembly: DNV.Domain.Seedwork.dll Syntax public abstract class Enumeration<T> : IComparable where T : IComparable Type Parameters Name Description T Constructors | Improve this Doc View Source Enumeration(T, string) Declaration protected Enumeration(T id, string name) Parameters Type Name Description T id string name Properties | Improve this Doc View Source Id Declaration public T Id { get; } Property Value Type Description T | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description string Methods | Improve this Doc View Source CompareTo(object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(object obj) Parameters Type Name Description object obj An object to compare with this instance. Returns Type Description int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj. Greater than zero This instance follows obj in the sort order. Exceptions Type Condition ArgumentException obj is not the same type as this instance. | Improve this Doc View Source Equals(object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Improve this Doc View Source FromDisplayName<TEnumeration>(string) Declaration public static TEnumeration FromDisplayName<TEnumeration>(string displayName) where TEnumeration : Enumeration<T> Parameters Type Name Description string displayName Returns Type Description TEnumeration Type Parameters Name Description TEnumeration | Improve this Doc View Source FromValue<TEnumeration>(T) Declaration public static TEnumeration FromValue<TEnumeration>(T value) where TEnumeration : Enumeration<T> Parameters Type Name Description T value Returns Type Description TEnumeration Type Parameters Name Description TEnumeration | Improve this Doc View Source GetAll<TEnumeration>() Declaration public static IEnumerable<TEnumeration> GetAll<TEnumeration>() where TEnumeration : Enumeration<T> Returns Type Description IEnumerable<TEnumeration> Type Parameters Name Description TEnumeration | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements IComparable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Domain.Seedwork.Event.html": {
    "href": "api/DNV.Domain.Seedwork.Event.html",
    "title": "Class Event",
    "keywords": "Class Event Inheritance object Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Domain.Seedwork Assembly: DNV.Domain.Seedwork.dll Syntax public abstract class Event Constructors | Improve this Doc View Source Event(Entity) Declaration protected Event(Entity eventSource) Parameters Type Name Description Entity eventSource Properties | Improve this Doc View Source EventSource Declaration public Entity EventSource { get; } Property Value Type Description Entity | Improve this Doc View Source EventType Declaration public abstract EventType EventType { get; } Property Value Type Description EventType Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Domain.Seedwork.EventType.html": {
    "href": "api/DNV.Domain.Seedwork.EventType.html",
    "title": "Class EventType",
    "keywords": "Class EventType Inheritance object Enumeration<string> EventType Implements IComparable Inherited Members Enumeration<string>.Id Enumeration<string>.Name Enumeration<string>.ToString() Enumeration<string>.GetAll<TEnumeration>() Enumeration<string>.Equals(object) Enumeration<string>.GetHashCode() Enumeration<string>.FromValue<TEnumeration>(string) Enumeration<string>.FromDisplayName<TEnumeration>(string) Enumeration<string>.CompareTo(object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.Domain.Seedwork Assembly: DNV.Domain.Seedwork.dll Syntax public abstract class EventType : Enumeration<string>, IComparable Constructors | Improve this Doc View Source EventType(string, string, string) Declaration protected EventType(string @namespace, string id, string name) Parameters Type Name Description string namespace string id string name Properties | Improve this Doc View Source Namespace Declaration public string Namespace { get; } Property Value Type Description string Implements IComparable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Domain.Seedwork.html": {
    "href": "api/DNV.Domain.Seedwork.html",
    "title": "Namespace DNV.Domain.Seedwork",
    "keywords": "Namespace DNV.Domain.Seedwork Classes Entity Enumeration<T> Event EventType ValueObject Interfaces IAggregateRoot IEventHandler<T>"
  },
  "api/DNV.Domain.Seedwork.IAggregateRoot.html": {
    "href": "api/DNV.Domain.Seedwork.IAggregateRoot.html",
    "title": "Interface IAggregateRoot",
    "keywords": "Interface IAggregateRoot Namespace: DNV.Domain.Seedwork Assembly: DNV.Domain.Seedwork.dll Syntax public interface IAggregateRoot Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Domain.Seedwork.IEventHandler-1.html": {
    "href": "api/DNV.Domain.Seedwork.IEventHandler-1.html",
    "title": "Interface IEventHandler<T>",
    "keywords": "Interface IEventHandler<T> Namespace: DNV.Domain.Seedwork Assembly: DNV.Domain.Seedwork.dll Syntax public interface IEventHandler<in T> where T : Event Type Parameters Name Description T Methods | Improve this Doc View Source HandleAsync(T, CancellationToken) Declaration Task HandleAsync(T @event, CancellationToken cancellationToken = default) Parameters Type Name Description T event CancellationToken cancellationToken Returns Type Description Task Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Domain.Seedwork.ValueObject.html": {
    "href": "api/DNV.Domain.Seedwork.ValueObject.html",
    "title": "Class ValueObject",
    "keywords": "Class ValueObject Inheritance object ValueObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Domain.Seedwork Assembly: DNV.Domain.Seedwork.dll Syntax public abstract class ValueObject Methods | Improve this Doc View Source EqualOperator(ValueObject, ValueObject) Declaration protected static bool EqualOperator(ValueObject left, ValueObject right) Parameters Type Name Description ValueObject left ValueObject right Returns Type Description bool | Improve this Doc View Source Equals(object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Improve this Doc View Source GetAtomicValues() Declaration protected abstract IEnumerable<object> GetAtomicValues() Returns Type Description IEnumerable<object> | Improve this Doc View Source GetCopy() Declaration public ValueObject GetCopy() Returns Type Description ValueObject | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Improve this Doc View Source NotEqualOperator(ValueObject, ValueObject) Declaration protected static bool NotEqualOperator(ValueObject left, ValueObject right) Parameters Type Name Description ValueObject left ValueObject right Returns Type Description bool Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Abstractions.Constants.FlowTypeClaimValues.html": {
    "href": "api/DNV.OAuth.Abstractions.Constants.FlowTypeClaimValues.html",
    "title": "Class FlowTypeClaimValues",
    "keywords": "Class FlowTypeClaimValues Inheritance object FlowTypeClaimValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Abstractions.Constants Assembly: DNV.OAuth.Abstractions.dll Syntax public class FlowTypeClaimValues Fields | Improve this Doc View Source ClientFlow Declaration public const string ClientFlow = \"client\" Field Value Type Description string | Improve this Doc View Source UserFlow Declaration public const string UserFlow = \"user\" Field Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Abstractions.Constants.html": {
    "href": "api/DNV.OAuth.Abstractions.Constants.html",
    "title": "Namespace DNV.OAuth.Abstractions.Constants",
    "keywords": "Namespace DNV.OAuth.Abstractions.Constants Classes FlowTypeClaimValues TokenClaimTypes"
  },
  "api/DNV.OAuth.Abstractions.Constants.TokenClaimTypes.html": {
    "href": "api/DNV.OAuth.Abstractions.Constants.TokenClaimTypes.html",
    "title": "Class TokenClaimTypes",
    "keywords": "Class TokenClaimTypes Inheritance object TokenClaimTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Abstractions.Constants Assembly: DNV.OAuth.Abstractions.dll Syntax public class TokenClaimTypes Fields | Improve this Doc View Source AppId Declaration public const string AppId = \"appid\" Field Value Type Description string | Improve this Doc View Source FlowType Declaration public const string FlowType = \"flowtype\" Field Value Type Description string | Improve this Doc View Source RequestParty Declaration public const string RequestParty = \"reqpty\" Field Value Type Description string | Improve this Doc View Source Version Declaration public const string Version = \"ver\" Field Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Abstractions.html": {
    "href": "api/DNV.OAuth.Abstractions.html",
    "title": "Namespace DNV.OAuth.Abstractions",
    "keywords": "Namespace DNV.OAuth.Abstractions Classes OAuth2Options Interfaces IClientApp IClientAppBuilder ITokenCacheProvider"
  },
  "api/DNV.OAuth.Abstractions.IClientApp.html": {
    "href": "api/DNV.OAuth.Abstractions.IClientApp.html",
    "title": "Interface IClientApp",
    "keywords": "Interface IClientApp Namespace: DNV.OAuth.Abstractions Assembly: DNV.OAuth.Abstractions.dll Syntax public interface IClientApp Methods | Improve this Doc View Source AcquireTokenByAuthorizationCode(string, string?) Attempts to authenticate using account retrieved from the specified context by calling AcquireTokenByAuthorizationCode(IEnumerable<string>, string). Declaration Task<AuthenticationResult> AcquireTokenByAuthorizationCode(string authCode, string? codeVerifier = null) Parameters Type Name Description string authCode string codeVerifier Returns Type Description Task<AuthenticationResult> Authentication result containing a token for the requested scopes. | Improve this Doc View Source AcquireTokenForClient() Attempts to authenticate using client credentials by calling AcquireTokenForClient(IEnumerable<string>). Declaration Task<AuthenticationResult> AcquireTokenForClient() Returns Type Description Task<AuthenticationResult> Authentication result containing a token. | Improve this Doc View Source AcquireTokenSilent(ClaimsPrincipal) Attempts to authenticate using account retrieved from the ClaimsPrincipal by calling AcquireTokenSilent(IEnumerable<string>, string). Declaration Task<AuthenticationResult> AcquireTokenSilent(ClaimsPrincipal user) Parameters Type Name Description ClaimsPrincipal user Returns Type Description Task<AuthenticationResult> Authentication result containing a token. | Improve this Doc View Source ClearUserTokenCache(ClaimsPrincipal) Removes all tokens in the cache for the account retrieved from the specified ClaimsPrincipal. Declaration Task ClearUserTokenCache(ClaimsPrincipal user) Parameters Type Name Description ClaimsPrincipal user Returns Type Description Task | Improve this Doc View Source Execute(Func<Task<AuthenticationResult>>) Internal method only for unit test visibility. Declaration Task<AuthenticationResult> Execute(Func<Task<AuthenticationResult>> func) Parameters Type Name Description Func<Task<AuthenticationResult>> func Returns Type Description Task<AuthenticationResult> | Improve this Doc View Source GetAccount(ClaimsPrincipal) Gets the IAccount by its user principal among the accounts available in the token cache. Declaration Task<IAccount> GetAccount(ClaimsPrincipal user) Parameters Type Name Description ClaimsPrincipal user Returns Type Description Task<IAccount> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Abstractions.IClientAppBuilder.html": {
    "href": "api/DNV.OAuth.Abstractions.IClientAppBuilder.html",
    "title": "Interface IClientAppBuilder",
    "keywords": "Interface IClientAppBuilder Namespace: DNV.OAuth.Abstractions Assembly: DNV.OAuth.Abstractions.dll Syntax public interface IClientAppBuilder Methods | Improve this Doc View Source Build(OAuth2Options) Declaration IClientApp Build(OAuth2Options options) Parameters Type Name Description OAuth2Options options Returns Type Description IClientApp Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Abstractions.ITokenCacheProvider.html": {
    "href": "api/DNV.OAuth.Abstractions.ITokenCacheProvider.html",
    "title": "Interface ITokenCacheProvider",
    "keywords": "Interface ITokenCacheProvider Namespace: DNV.OAuth.Abstractions Assembly: DNV.OAuth.Abstractions.dll Syntax public interface ITokenCacheProvider Methods | Improve this Doc View Source ClearAsync(string) Declaration Task ClearAsync(string identifier) Parameters Type Name Description string identifier Returns Type Description Task | Improve this Doc View Source InitializeAsync(ITokenCache) Declaration Task InitializeAsync(ITokenCache tokenCache) Parameters Type Name Description ITokenCache tokenCache Returns Type Description Task Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Abstractions.OAuth2Options.html": {
    "href": "api/DNV.OAuth.Abstractions.OAuth2Options.html",
    "title": "Class OAuth2Options",
    "keywords": "Class OAuth2Options Inheritance object OAuth2Options OidcOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Abstractions Assembly: DNV.OAuth.Abstractions.dll Syntax public class OAuth2Options Properties | Improve this Doc View Source Authority Gets or sets the Authority to use when making OpenIdConnect calls. Declaration public string Authority { get; set; } Property Value Type Description string Remarks v1 https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d https://login.veracity.com/tfp/a68572e3-63ce-4bc1-acdc-b64943502e9d/b2c_1a_signinwithadfsidp (don't use it) v2 https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0 https://login.veracity.com/tfp/a68572e3-63ce-4bc1-acdc-b64943502e9d/b2c_1a_signinwithadfsidp/v2.0 (by default) path segment 'tfp' is required for MSAL, it is obsoleted and might be removed in the future. | Improve this Doc View Source CallbackPath The request path within the application's base path where the user-agent will be returned. The middleware will process this request when it arrives. Declaration public string CallbackPath { get; set; } Property Value Type Description string | Improve this Doc View Source ClientId Gets or sets the 'client_id'. Declaration public string ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source ClientSecret Gets or sets the 'client_secret'. Declaration public string ClientSecret { get; set; } Property Value Type Description string | Improve this Doc View Source Resource Gets or sets the resource for v1 only. Declaration public string Resource { get; set; } Property Value Type Description string | Improve this Doc View Source Scopes Gets or sets the list of permissions for requests. Declaration public string[] Scopes { get; set; } Property Value Type Description string[] Methods | Improve this Doc View Source Clone() Declaration public OAuth2Options Clone() Returns Type Description OAuth2Options Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Api.HttpClient.Exceptions.ClientConfigurationNotFoundException.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.Exceptions.ClientConfigurationNotFoundException.html",
    "title": "Class ClientConfigurationNotFoundException",
    "keywords": "Class ClientConfigurationNotFoundException Inheritance object Exception ClientConfigurationNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.ReferenceEquals(object, object) Namespace: DNV.OAuth.Api.HttpClient.Exceptions Assembly: DNV.OAuth.Api.HttpClient.dll Syntax [Serializable] public sealed class ClientConfigurationNotFoundException : Exception, ISerializable Constructors | Improve this Doc View Source ClientConfigurationNotFoundException() Declaration public ClientConfigurationNotFoundException() Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Api.HttpClient.Exceptions.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.Exceptions.html",
    "title": "Namespace DNV.OAuth.Api.HttpClient.Exceptions",
    "keywords": "Namespace DNV.OAuth.Api.HttpClient.Exceptions Classes ClientConfigurationNotFoundException InvalidCredentialFlowException MissingTokenException"
  },
  "api/DNV.OAuth.Api.HttpClient.Exceptions.InvalidCredentialFlowException.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.Exceptions.InvalidCredentialFlowException.html",
    "title": "Class InvalidCredentialFlowException",
    "keywords": "Class InvalidCredentialFlowException Inheritance object Exception InvalidCredentialFlowException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.ReferenceEquals(object, object) Namespace: DNV.OAuth.Api.HttpClient.Exceptions Assembly: DNV.OAuth.Api.HttpClient.dll Syntax [Serializable] public sealed class InvalidCredentialFlowException : Exception, ISerializable Constructors | Improve this Doc View Source InvalidCredentialFlowException(OAuthCredentialFlow) Declaration public InvalidCredentialFlowException(OAuthCredentialFlow credentialFlow) Parameters Type Name Description OAuthCredentialFlow credentialFlow Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Api.HttpClient.Exceptions.MissingTokenException.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.Exceptions.MissingTokenException.html",
    "title": "Class MissingTokenException",
    "keywords": "Class MissingTokenException Inheritance object Exception MissingTokenException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.OAuth.Api.HttpClient.Exceptions Assembly: DNV.OAuth.Api.HttpClient.dll Syntax [Serializable] public class MissingTokenException : Exception, ISerializable Constructors | Improve this Doc View Source MissingTokenException() Declaration public MissingTokenException() Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Api.HttpClient.Extensions.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.Extensions.html",
    "title": "Namespace DNV.OAuth.Api.HttpClient.Extensions",
    "keywords": "Namespace DNV.OAuth.Api.HttpClient.Extensions Classes HttpClientFactoryExtensions OAuthHttpClientExtensions OAuthHttpClientFactoryExtensions"
  },
  "api/DNV.OAuth.Api.HttpClient.Extensions.HttpClientFactoryExtensions.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.Extensions.HttpClientFactoryExtensions.html",
    "title": "Class HttpClientFactoryExtensions",
    "keywords": "Class HttpClientFactoryExtensions Inheritance object HttpClientFactoryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Api.HttpClient.Extensions Assembly: DNV.OAuth.Api.HttpClient.dll Syntax public static class HttpClientFactoryExtensions Methods | Improve this Doc View Source CreateWithClientCredentialFlow(IHttpClientFactory, string) Creates and configures a HttpClient using configuration corresponding to the provided name that is authenticated by the Client Credential flow. Declaration public static HttpClient CreateWithClientCredentialFlow(this IHttpClientFactory factory, string name) Parameters Type Name Description IHttpClientFactory factory Http client factory available to create HttpClient instance. string name Value to match Name of configuration options for the created instance. Returns Type Description HttpClient | Improve this Doc View Source CreateWithUserCredentialFlow(IHttpClientFactory, string) Creates and configures a HttpClient using configuration corresponding to the provided name that is authenticated by the User Credential flow. Declaration public static HttpClient CreateWithUserCredentialFlow(this IHttpClientFactory factory, string name) Parameters Type Name Description IHttpClientFactory factory Http client factory available to create HttpClient instance. string name Value to match Name of configuration options for the created instance. Returns Type Description HttpClient"
  },
  "api/DNV.OAuth.Api.HttpClient.Extensions.OAuthHttpClientExtensions.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.Extensions.OAuthHttpClientExtensions.html",
    "title": "Class OAuthHttpClientExtensions",
    "keywords": "Class OAuthHttpClientExtensions Inheritance object OAuthHttpClientExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Api.HttpClient.Extensions Assembly: DNV.OAuth.Api.HttpClient.dll Syntax public static class OAuthHttpClientExtensions Methods | Improve this Doc View Source AddOAuthHttpClient(IServiceCollection, OAuthHttpClientOptions, Action<IHttpClientBuilder>?, Action<IServiceProvider, HttpClient>?, Action<DistributedCacheEntryOptions>?) Declaration public static IServiceCollection AddOAuthHttpClient(this IServiceCollection services, OAuthHttpClientOptions option, Action<IHttpClientBuilder>? configBuilderAction = null, Action<IServiceProvider, HttpClient>? clientConfigAction = null, Action<DistributedCacheEntryOptions>? cacheConfigAction = null) Parameters Type Name Description IServiceCollection services OAuthHttpClientOptions option Action<IHttpClientBuilder> configBuilderAction Action<IServiceProvider, HttpClient> clientConfigAction Action<DistributedCacheEntryOptions> cacheConfigAction Returns Type Description IServiceCollection | Improve this Doc View Source AddOAuthHttpClientHandler(IHttpClientBuilder, OAuthHttpClientOptions, Action<DistributedCacheEntryOptions>?) Declaration public static IHttpClientBuilder AddOAuthHttpClientHandler(this IHttpClientBuilder builder, OAuthHttpClientOptions options, Action<DistributedCacheEntryOptions>? cacheConfigAction = null) Parameters Type Name Description IHttpClientBuilder builder OAuthHttpClientOptions options Action<DistributedCacheEntryOptions> cacheConfigAction Returns Type Description IHttpClientBuilder Exceptions Type Condition ArgumentOutOfRangeException | Improve this Doc View Source AddOAuthHttpClients(IServiceCollection, Action<ICollection<OAuthHttpClientOptions>>, Action<IHttpClientBuilder>?, Action<IServiceProvider, HttpClient>?, Action<DistributedCacheEntryOptions>?) Declaration public static IServiceCollection AddOAuthHttpClients(this IServiceCollection services, Action<ICollection<OAuthHttpClientOptions>> optionsConfigAction, Action<IHttpClientBuilder>? configBuilderAction = null, Action<IServiceProvider, HttpClient>? clientConfigAction = null, Action<DistributedCacheEntryOptions>? cacheConfigAction = null) Parameters Type Name Description IServiceCollection services Action<ICollection<OAuthHttpClientOptions>> optionsConfigAction Action<IHttpClientBuilder> configBuilderAction Action<IServiceProvider, HttpClient> clientConfigAction Action<DistributedCacheEntryOptions> cacheConfigAction Returns Type Description IServiceCollection | Improve this Doc View Source AddOAuthHttpClients(IServiceCollection, IEnumerable<OAuthHttpClientOptions>, Action<IHttpClientBuilder>?, Action<IServiceProvider, HttpClient>?, Action<DistributedCacheEntryOptions>?) Declaration public static IServiceCollection AddOAuthHttpClients(this IServiceCollection services, IEnumerable<OAuthHttpClientOptions> options, Action<IHttpClientBuilder>? configBuilderAction = null, Action<IServiceProvider, HttpClient>? clientConfigAction = null, Action<DistributedCacheEntryOptions>? cacheConfigAction = null) Parameters Type Name Description IServiceCollection services IEnumerable<OAuthHttpClientOptions> options Action<IHttpClientBuilder> configBuilderAction Action<IServiceProvider, HttpClient> clientConfigAction Action<DistributedCacheEntryOptions> cacheConfigAction Returns Type Description IServiceCollection | Improve this Doc View Source GetAllOAuthClientOptions(IServiceProvider, string) Declaration public static IEnumerable<OAuthHttpClientOptions> GetAllOAuthClientOptions(this IServiceProvider serviceProvider, string name) Parameters Type Name Description IServiceProvider serviceProvider string name Returns Type Description IEnumerable<OAuthHttpClientOptions> | Improve this Doc View Source GetOAuthClientOptions(IServiceProvider, string) Declaration public static OAuthHttpClientOptions GetOAuthClientOptions(this IServiceProvider serviceProvider, string name) Parameters Type Name Description IServiceProvider serviceProvider string name Returns Type Description OAuthHttpClientOptions"
  },
  "api/DNV.OAuth.Api.HttpClient.Extensions.OAuthHttpClientFactoryExtensions.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.Extensions.OAuthHttpClientFactoryExtensions.html",
    "title": "Class OAuthHttpClientFactoryExtensions",
    "keywords": "Class OAuthHttpClientFactoryExtensions Inheritance object OAuthHttpClientFactoryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Api.HttpClient.Extensions Assembly: DNV.OAuth.Api.HttpClient.dll Syntax public static class OAuthHttpClientFactoryExtensions Methods | Improve this Doc View Source AddOAuthHttpClientFactory(IServiceCollection, Action<ICollection<OAuthHttpClientOptions>>) Adds an implementation of IHttpClientFactory to the IServiceCollection providing authenticated instances of HttpClient. Declaration public static IServiceCollection AddOAuthHttpClientFactory(this IServiceCollection services, Action<ICollection<OAuthHttpClientOptions>> configureOptions) Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. Action<ICollection<OAuthHttpClientOptions>> configureOptions A method to manipulate the default options. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddOAuthHttpClientFactory(IServiceCollection, IEnumerable<OAuthHttpClientOptions>, Action<DistributedCacheEntryOptions>?) Adds an implementation of IHttpClientFactory to the IServiceCollection providing authenticated instances of HttpClient. Declaration public static IServiceCollection AddOAuthHttpClientFactory(this IServiceCollection services, IEnumerable<OAuthHttpClientOptions> options, Action<DistributedCacheEntryOptions>? cacheSetupAction = null) Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. IEnumerable<OAuthHttpClientOptions> options A collection of configurations for the HttpClients produced by the factory. Action<DistributedCacheEntryOptions> cacheSetupAction Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained."
  },
  "api/DNV.OAuth.Api.HttpClient.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.html",
    "title": "Namespace DNV.OAuth.Api.HttpClient",
    "keywords": "Namespace DNV.OAuth.Api.HttpClient Classes OAuthHttpClientOptions Enums OAuthCredentialFlow"
  },
  "api/DNV.OAuth.Api.HttpClient.OAuthCredentialFlow.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.OAuthCredentialFlow.html",
    "title": "Enum OAuthCredentialFlow",
    "keywords": "Enum OAuthCredentialFlow Namespace: DNV.OAuth.Api.HttpClient Assembly: DNV.OAuth.Api.HttpClient.dll Syntax [JsonConverter(typeof(JsonStringEnumConverter))] public enum OAuthCredentialFlow Fields Name Description ClientCredentials UserCredentials Extension Methods Throws.IfNull<OAuthCredentialFlow>(OAuthCredentialFlow, string)"
  },
  "api/DNV.OAuth.Api.HttpClient.OAuthHttpClientOptions.html": {
    "href": "api/DNV.OAuth.Api.HttpClient.OAuthHttpClientOptions.html",
    "title": "Class OAuthHttpClientOptions",
    "keywords": "Class OAuthHttpClientOptions Inheritance object OAuthHttpClientOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Api.HttpClient Assembly: DNV.OAuth.Api.HttpClient.dll Syntax public class OAuthHttpClientOptions Properties | Improve this Doc View Source BaseUri Gets or sets the route URI (Universal Resource Identifier) for the Web API the HTTP client instance will make requests to. Declaration public string BaseUri { get; set; } Property Value Type Description string | Improve this Doc View Source Flow Gets or sets the default credential flow applied to requests by the HTTP client instance. Declaration public OAuthCredentialFlow Flow { get; set; } Property Value Type Description OAuthCredentialFlow | Improve this Doc View Source Name Gets or sets a unique identifier for HTTP client instance which is used to retrieve it from the IOAuthHttpClientFactory. Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source OAuthClientOptions Gets or sets the Open Id Connect options to apply to authentication by the HTTP client instance. Declaration public OAuth2Options OAuthClientOptions { get; set; } Property Value Type Description OAuth2Options | Improve this Doc View Source SubscriptionKey Gets or sets the subscription key (from API management) for the Web API the HTTP client instance will connect to. Declaration public string SubscriptionKey { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Bind(OAuthHttpClientOptions) Declaration public void Bind(OAuthHttpClientOptions options) Parameters Type Name Description OAuthHttpClientOptions options | Improve this Doc View Source GetHttpClientName() Declaration public string GetHttpClientName() Returns Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Core.Exceptions.html": {
    "href": "api/DNV.OAuth.Core.Exceptions.html",
    "title": "Namespace DNV.OAuth.Core.Exceptions",
    "keywords": "Namespace DNV.OAuth.Core.Exceptions Classes MissingScopeException TokenExpiredException"
  },
  "api/DNV.OAuth.Core.Exceptions.MissingScopeException.html": {
    "href": "api/DNV.OAuth.Core.Exceptions.MissingScopeException.html",
    "title": "Class MissingScopeException",
    "keywords": "Class MissingScopeException Inheritance object Exception MissingScopeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.OAuth.Core.Exceptions Assembly: DNV.OAuth.Core.dll Syntax [Serializable] public class MissingScopeException : Exception, ISerializable Constructors | Improve this Doc View Source MissingScopeException() Declaration public MissingScopeException() Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Core.Exceptions.TokenExpiredException.html": {
    "href": "api/DNV.OAuth.Core.Exceptions.TokenExpiredException.html",
    "title": "Class TokenExpiredException",
    "keywords": "Class TokenExpiredException Inheritance object Exception TokenExpiredException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.ReferenceEquals(object, object) Namespace: DNV.OAuth.Core.Exceptions Assembly: DNV.OAuth.Core.dll Syntax [Serializable] public sealed class TokenExpiredException : Exception, ISerializable Constructors | Improve this Doc View Source TokenExpiredException() Declaration public TokenExpiredException() Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Core.html": {
    "href": "api/DNV.OAuth.Core.html",
    "title": "Namespace DNV.OAuth.Core",
    "keywords": "Namespace DNV.OAuth.Core Classes MsalClientApp MsalClientAppBuilder Provides a simple way to create IClientApp. OAuthExtensions"
  },
  "api/DNV.OAuth.Core.MsalClientApp.html": {
    "href": "api/DNV.OAuth.Core.MsalClientApp.html",
    "title": "Class MsalClientApp",
    "keywords": "Class MsalClientApp Inheritance object MsalClientApp Implements IClientApp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Core Assembly: DNV.OAuth.Core.dll Syntax public class MsalClientApp : IClientApp Constructors | Improve this Doc View Source MsalClientApp(IConfidentialClientApplication, StringValues) Declaration public MsalClientApp(IConfidentialClientApplication confidentialClientApplication, StringValues scopes) Parameters Type Name Description IConfidentialClientApplication confidentialClientApplication StringValues scopes Methods | Improve this Doc View Source AcquireTokenByAuthorizationCode(string, string?) Attempts to authenticate using account retrieved from the specified context by calling AcquireTokenByAuthorizationCode(IEnumerable<string>, string). Declaration public Task<AuthenticationResult> AcquireTokenByAuthorizationCode(string authCode, string? codeVerifier = null) Parameters Type Name Description string authCode string codeVerifier Returns Type Description Task<AuthenticationResult> Authentication result containing a token for the requested scopes. | Improve this Doc View Source AcquireTokenForClient() Attempts to authenticate using client credentials by calling AcquireTokenForClient(IEnumerable<string>). Declaration public Task<AuthenticationResult> AcquireTokenForClient() Returns Type Description Task<AuthenticationResult> Authentication result containing a token. | Improve this Doc View Source AcquireTokenSilent(ClaimsPrincipal) Attempts to authenticate using account retrieved from the ClaimsPrincipal by calling AcquireTokenSilent(IEnumerable<string>, string). Declaration public Task<AuthenticationResult> AcquireTokenSilent(ClaimsPrincipal user) Parameters Type Name Description ClaimsPrincipal user Returns Type Description Task<AuthenticationResult> Authentication result containing a token. | Improve this Doc View Source ClearUserTokenCache(ClaimsPrincipal) Removes all tokens in the cache for the account retrieved from the specified ClaimsPrincipal. Declaration public Task ClearUserTokenCache(ClaimsPrincipal user) Parameters Type Name Description ClaimsPrincipal user Returns Type Description Task | Improve this Doc View Source Execute(Func<Task<AuthenticationResult>>) Internal method only for unit test visibility. Declaration public virtual Task<AuthenticationResult> Execute(Func<Task<AuthenticationResult>> func) Parameters Type Name Description Func<Task<AuthenticationResult>> func Returns Type Description Task<AuthenticationResult> | Improve this Doc View Source GetAccount(ClaimsPrincipal) Gets the IAccount by its user principal among the accounts available in the token cache. Declaration public virtual Task<IAccount> GetAccount(ClaimsPrincipal user) Parameters Type Name Description ClaimsPrincipal user Returns Type Description Task<IAccount> Implements IClientApp Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Core.MsalClientAppBuilder.html": {
    "href": "api/DNV.OAuth.Core.MsalClientAppBuilder.html",
    "title": "Class MsalClientAppBuilder",
    "keywords": "Class MsalClientAppBuilder Provides a simple way to create IClientApp. Inheritance object MsalClientAppBuilder Implements IClientAppBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Core Assembly: DNV.OAuth.Core.dll Syntax public class MsalClientAppBuilder : IClientAppBuilder Constructors | Improve this Doc View Source MsalClientAppBuilder(ITokenCacheProvider) Declaration public MsalClientAppBuilder(ITokenCacheProvider tokenCacheProvider) Parameters Type Name Description ITokenCacheProvider tokenCacheProvider Methods | Improve this Doc View Source Build(OAuth2Options) Builds a IClientApp instance with giving OAuth2Options. Declaration public IClientApp Build(OAuth2Options options) Parameters Type Name Description OAuth2Options options Returns Type Description IClientApp Implements IClientAppBuilder Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Core.OAuthExtensions.html": {
    "href": "api/DNV.OAuth.Core.OAuthExtensions.html",
    "title": "Class OAuthExtensions",
    "keywords": "Class OAuthExtensions Inheritance object OAuthExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Core Assembly: DNV.OAuth.Core.dll Syntax public static class OAuthExtensions Methods | Improve this Doc View Source AddOAuthCore(IServiceCollection, Action<DistributedCacheEntryOptions>?) Register OAuthCore required services to DI container. Declaration public static IServiceCollection AddOAuthCore(this IServiceCollection services, Action<DistributedCacheEntryOptions>? configAction = null) Parameters Type Name Description IServiceCollection services Action<DistributedCacheEntryOptions> configAction Returns Type Description IServiceCollection"
  },
  "api/DNV.OAuth.Core.TokenCache.html": {
    "href": "api/DNV.OAuth.Core.TokenCache.html",
    "title": "Namespace DNV.OAuth.Core.TokenCache",
    "keywords": "Namespace DNV.OAuth.Core.TokenCache Classes TokenCacheProvider TokenCacheProviderBase"
  },
  "api/DNV.OAuth.Core.TokenCache.TokenCacheProvider.html": {
    "href": "api/DNV.OAuth.Core.TokenCache.TokenCacheProvider.html",
    "title": "Class TokenCacheProvider",
    "keywords": "Class TokenCacheProvider Inheritance object TokenCacheProviderBase TokenCacheProvider Implements ITokenCacheProvider Inherited Members TokenCacheProviderBase.InitializeAsync(ITokenCache) TokenCacheProviderBase.ClearAsync(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Core.TokenCache Assembly: DNV.OAuth.Core.dll Syntax public class TokenCacheProvider : TokenCacheProviderBase, ITokenCacheProvider Constructors | Improve this Doc View Source TokenCacheProvider(IDistributedCache, IOptionsMonitor<DistributedCacheEntryOptions>) Declaration public TokenCacheProvider(IDistributedCache cache, IOptionsMonitor<DistributedCacheEntryOptions> cacheOptions) Parameters Type Name Description IDistributedCache cache IOptionsMonitor<DistributedCacheEntryOptions> cacheOptions | Improve this Doc View Source TokenCacheProvider(IDistributedCache, IOptionsMonitor<DistributedCacheEntryOptions>, IDataProtectionProvider?) Declaration public TokenCacheProvider(IDistributedCache cache, IOptionsMonitor<DistributedCacheEntryOptions> cacheOptions, IDataProtectionProvider? dataProtectionProvider) Parameters Type Name Description IDistributedCache cache IOptionsMonitor<DistributedCacheEntryOptions> cacheOptions IDataProtectionProvider dataProtectionProvider Properties | Improve this Doc View Source Cache Declaration protected override IDistributedCache Cache { get; } Property Value Type Description IDistributedCache Overrides TokenCacheProviderBase.Cache | Improve this Doc View Source CacheOptions Declaration protected override DistributedCacheEntryOptions CacheOptions { get; } Property Value Type Description DistributedCacheEntryOptions Overrides TokenCacheProviderBase.CacheOptions | Improve this Doc View Source DataProtector Declaration protected IDataProtector? DataProtector { get; } Property Value Type Description IDataProtector Methods | Improve this Doc View Source Protect(byte[]?) Declaration protected override byte[]? Protect(byte[]? bytes) Parameters Type Name Description byte[] bytes Returns Type Description byte[] Overrides TokenCacheProviderBase.Protect(byte[]?) | Improve this Doc View Source Unprotect(byte[]?) Declaration protected override byte[]? Unprotect(byte[]? bytes) Parameters Type Name Description byte[] bytes Returns Type Description byte[] Overrides TokenCacheProviderBase.Unprotect(byte[]?) Implements ITokenCacheProvider Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Core.TokenCache.TokenCacheProviderBase.html": {
    "href": "api/DNV.OAuth.Core.TokenCache.TokenCacheProviderBase.html",
    "title": "Class TokenCacheProviderBase",
    "keywords": "Class TokenCacheProviderBase Inheritance object TokenCacheProviderBase TokenCacheProvider Implements ITokenCacheProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Core.TokenCache Assembly: DNV.OAuth.Core.dll Syntax public abstract class TokenCacheProviderBase : ITokenCacheProvider Properties | Improve this Doc View Source Cache Declaration protected abstract IDistributedCache Cache { get; } Property Value Type Description IDistributedCache | Improve this Doc View Source CacheOptions Declaration protected abstract DistributedCacheEntryOptions CacheOptions { get; } Property Value Type Description DistributedCacheEntryOptions Methods | Improve this Doc View Source ClearAsync(string) Declaration public virtual Task ClearAsync(string identifier) Parameters Type Name Description string identifier Returns Type Description Task | Improve this Doc View Source InitializeAsync(ITokenCache) Declaration public virtual Task InitializeAsync(ITokenCache tokenCache) Parameters Type Name Description ITokenCache tokenCache Returns Type Description Task | Improve this Doc View Source Protect(byte[]?) Declaration protected abstract byte[]? Protect(byte[]? bytes) Parameters Type Name Description byte[] bytes Returns Type Description byte[] | Improve this Doc View Source Unprotect(byte[]?) Declaration protected abstract byte[]? Unprotect(byte[]? bytes) Parameters Type Name Description byte[] bytes Returns Type Description byte[] Implements ITokenCacheProvider Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Core.TokenValidator.DNVTokenValidator.html": {
    "href": "api/DNV.OAuth.Core.TokenValidator.DNVTokenValidator.html",
    "title": "Class DNVTokenValidator",
    "keywords": "Class DNVTokenValidator Inheritance object TokenHandler SecurityTokenHandler JwtSecurityTokenHandler DNVTokenValidator Implements ISecurityTokenValidator Inherited Members JwtSecurityTokenHandler.DefaultInboundClaimTypeMap JwtSecurityTokenHandler.DefaultMapInboundClaims JwtSecurityTokenHandler.DefaultOutboundClaimTypeMap JwtSecurityTokenHandler.DefaultInboundClaimFilter JwtSecurityTokenHandler.DefaultOutboundAlgorithmMap JwtSecurityTokenHandler.CanReadToken(string) JwtSecurityTokenHandler.CreateEncodedJwt(SecurityTokenDescriptor) JwtSecurityTokenHandler.CreateEncodedJwt(string, string, ClaimsIdentity, DateTime?, DateTime?, DateTime?, SigningCredentials) JwtSecurityTokenHandler.CreateEncodedJwt(string, string, ClaimsIdentity, DateTime?, DateTime?, DateTime?, SigningCredentials, EncryptingCredentials) JwtSecurityTokenHandler.CreateEncodedJwt(string, string, ClaimsIdentity, DateTime?, DateTime?, DateTime?, SigningCredentials, EncryptingCredentials, IDictionary<string, object>) JwtSecurityTokenHandler.CreateJwtSecurityToken(SecurityTokenDescriptor) JwtSecurityTokenHandler.CreateJwtSecurityToken(string, string, ClaimsIdentity, DateTime?, DateTime?, DateTime?, SigningCredentials, EncryptingCredentials) JwtSecurityTokenHandler.CreateJwtSecurityToken(string, string, ClaimsIdentity, DateTime?, DateTime?, DateTime?, SigningCredentials, EncryptingCredentials, IDictionary<string, object>) JwtSecurityTokenHandler.CreateJwtSecurityToken(string, string, ClaimsIdentity, DateTime?, DateTime?, DateTime?, SigningCredentials) JwtSecurityTokenHandler.CreateToken(SecurityTokenDescriptor) JwtSecurityTokenHandler.ReadJwtToken(string) JwtSecurityTokenHandler.ReadToken(string) JwtSecurityTokenHandler.ReadToken(XmlReader, TokenValidationParameters) JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken, TokenValidationParameters) JwtSecurityTokenHandler.WriteToken(SecurityToken) JwtSecurityTokenHandler.ValidateSignature(string, TokenValidationParameters) JwtSecurityTokenHandler.CreateClaimsIdentity(JwtSecurityToken, string, TokenValidationParameters) JwtSecurityTokenHandler.CreateActorValue(ClaimsIdentity) JwtSecurityTokenHandler.ValidateAudience(IEnumerable<string>, JwtSecurityToken, TokenValidationParameters) JwtSecurityTokenHandler.ValidateLifetime(DateTime?, DateTime?, JwtSecurityToken, TokenValidationParameters) JwtSecurityTokenHandler.ValidateIssuer(string, JwtSecurityToken, TokenValidationParameters) JwtSecurityTokenHandler.ValidateTokenReplay(DateTime?, string, TokenValidationParameters) JwtSecurityTokenHandler.ResolveIssuerSigningKey(string, JwtSecurityToken, TokenValidationParameters) JwtSecurityTokenHandler.ResolveTokenDecryptionKey(string, JwtSecurityToken, TokenValidationParameters) JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken, TokenValidationParameters) JwtSecurityTokenHandler.ValidateIssuerSecurityKey(SecurityKey, JwtSecurityToken, TokenValidationParameters) JwtSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken) JwtSecurityTokenHandler.ValidateTokenAsync(string, TokenValidationParameters) JwtSecurityTokenHandler.MapInboundClaims JwtSecurityTokenHandler.InboundClaimTypeMap JwtSecurityTokenHandler.OutboundClaimTypeMap JwtSecurityTokenHandler.OutboundAlgorithmMap JwtSecurityTokenHandler.InboundClaimFilter JwtSecurityTokenHandler.ShortClaimTypeProperty JwtSecurityTokenHandler.JsonClaimTypeProperty JwtSecurityTokenHandler.CanValidateToken JwtSecurityTokenHandler.CanWriteToken JwtSecurityTokenHandler.TokenType SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, bool) SecurityTokenHandler.CanReadToken(XmlReader) SecurityTokenHandler.ReadToken(XmlReader) SecurityTokenHandler.ValidateToken(XmlReader, TokenValidationParameters, out SecurityToken) TokenHandler.DefaultTokenLifetimeInMinutes TokenHandler.ValidateTokenAsync(SecurityToken, TokenValidationParameters) TokenHandler.MaximumTokenSizeInBytes TokenHandler.SetDefaultTimesOnTokenCreation TokenHandler.TokenLifetimeInMinutes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Core.TokenValidator Assembly: DNV.OAuth.Core.dll Syntax public class DNVTokenValidator : JwtSecurityTokenHandler, ISecurityTokenValidator Constructors | Improve this Doc View Source DNVTokenValidator(Func<IEnumerable<Claim>, (bool Succeeded, string FailureReason)>?) Declaration public DNVTokenValidator(Func<IEnumerable<Claim>, (bool Succeeded, string FailureReason)>? customClaimsValidator = null) Parameters Type Name Description Func<IEnumerable<Claim>, (bool Succeeded, string FailureReason)> customClaimsValidator Methods | Improve this Doc View Source ExtendIdentity(ClaimsIdentity) Declaration protected virtual void ExtendIdentity(ClaimsIdentity identity) Parameters Type Name Description ClaimsIdentity identity | Improve this Doc View Source ValidateToken(string, TokenValidationParameters, out SecurityToken) Declaration public override ClaimsPrincipal ValidateToken(string token, TokenValidationParameters validationParameters, out SecurityToken validatedToken) Parameters Type Name Description string token TokenValidationParameters validationParameters SecurityToken validatedToken Returns Type Description ClaimsPrincipal Overrides JwtSecurityTokenHandler.ValidateToken(string, TokenValidationParameters, out SecurityToken) Exceptions Type Condition SecurityTokenValidationException Implements ISecurityTokenValidator Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Core.TokenValidator.html": {
    "href": "api/DNV.OAuth.Core.TokenValidator.html",
    "title": "Namespace DNV.OAuth.Core.TokenValidator",
    "keywords": "Namespace DNV.OAuth.Core.TokenValidator Classes DNVTokenValidator"
  },
  "api/DNV.OAuth.Web.Extensions.Cookie.CookieAuthenticationExtensions.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Cookie.CookieAuthenticationExtensions.html",
    "title": "Class CookieAuthenticationExtensions",
    "keywords": "Class CookieAuthenticationExtensions Inheritance object CookieAuthenticationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web.Extensions.Cookie Assembly: DNV.OAuth.Web.Extensions.dll Syntax public static class CookieAuthenticationExtensions Methods | Improve this Doc View Source SuppressOAuthRedirectForApi(CookieAuthenticationOptions, Func<HttpRequest, bool>?) Declaration public static CookieAuthenticationOptions SuppressOAuthRedirectForApi(this CookieAuthenticationOptions options, Func<HttpRequest, bool>? apiPredicate = null) Parameters Type Name Description CookieAuthenticationOptions options Func<HttpRequest, bool> apiPredicate Returns Type Description CookieAuthenticationOptions Exceptions Type Condition ArgumentNullException | Improve this Doc View Source SuppressOAuthRedirectForApi(IServiceCollection, Func<HttpRequest, bool>?) Declaration public static IServiceCollection SuppressOAuthRedirectForApi(this IServiceCollection services, Func<HttpRequest, bool>? apiPredicate = null) Parameters Type Name Description IServiceCollection services Func<HttpRequest, bool> apiPredicate Returns Type Description IServiceCollection Exceptions Type Condition ArgumentNullException"
  },
  "api/DNV.OAuth.Web.Extensions.Cookie.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Cookie.html",
    "title": "Namespace DNV.OAuth.Web.Extensions.Cookie",
    "keywords": "Namespace DNV.OAuth.Web.Extensions.Cookie Classes CookieAuthenticationExtensions"
  },
  "api/DNV.OAuth.Web.Extensions.Mfa.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Mfa.html",
    "title": "Namespace DNV.OAuth.Web.Extensions.Mfa",
    "keywords": "Namespace DNV.OAuth.Web.Extensions.Mfa Classes MfaExtensions"
  },
  "api/DNV.OAuth.Web.Extensions.Mfa.MfaExtensions.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Mfa.MfaExtensions.html",
    "title": "Class MfaExtensions",
    "keywords": "Class MfaExtensions Inheritance object MfaExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web.Extensions.Mfa Assembly: DNV.OAuth.Web.Extensions.dll Syntax public static class MfaExtensions Methods | Improve this Doc View Source AddMfaSupport(OidcOptions, Func<HttpRequest, bool>?) Declaration public static OidcOptions AddMfaSupport(this OidcOptions options, Func<HttpRequest, bool>? mfaPredict = null) Parameters Type Name Description OidcOptions options Func<HttpRequest, bool> mfaPredict Returns Type Description OidcOptions Exceptions Type Condition ArgumentNullException | Improve this Doc View Source ChallengeForMfaAsync(HttpContext, string) Declaration public static Task ChallengeForMfaAsync(this HttpContext ctx, string redirectUrl) Parameters Type Name Description HttpContext ctx string redirectUrl Returns Type Description Task | Improve this Doc View Source SignedInWithMfa(HttpContext) Declaration public static bool SignedInWithMfa(this HttpContext ctx) Parameters Type Name Description HttpContext ctx Returns Type Description bool"
  },
  "api/DNV.OAuth.Web.Extensions.Multitenancy.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Multitenancy.html",
    "title": "Namespace DNV.OAuth.Web.Extensions.Multitenancy",
    "keywords": "Namespace DNV.OAuth.Web.Extensions.Multitenancy Classes MtCookieBuilder MtExtensions"
  },
  "api/DNV.OAuth.Web.Extensions.Multitenancy.MtCookieBuilder.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Multitenancy.MtCookieBuilder.html",
    "title": "Class MtCookieBuilder",
    "keywords": "Class MtCookieBuilder Inheritance object CookieBuilder MtCookieBuilder Inherited Members CookieBuilder.Build(HttpContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web.Extensions.Multitenancy Assembly: DNV.OAuth.Web.Extensions.dll Syntax public class MtCookieBuilder : CookieBuilder Constructors | Improve this Doc View Source MtCookieBuilder(CookieBuilder, IHttpContextAccessor, OpenIdConnectOptions) Declaration public MtCookieBuilder(CookieBuilder decoratedOrigin, IHttpContextAccessor httpContextAccessor, OpenIdConnectOptions oidcOptions) Parameters Type Name Description CookieBuilder decoratedOrigin IHttpContextAccessor httpContextAccessor OpenIdConnectOptions oidcOptions Properties | Improve this Doc View Source Domain The domain to associate the cookie with. Declaration public override string? Domain { get; set; } Property Value Type Description string Overrides CookieBuilder.Domain Remarks Determines the value that will set on Domain. | Improve this Doc View Source Expiration Gets or sets the lifespan of a cookie. Declaration public override TimeSpan? Expiration { get; set; } Property Value Type Description TimeSpan? Overrides CookieBuilder.Expiration | Improve this Doc View Source HttpOnly Indicates whether a cookie is accessible by client-side script. Declaration public override bool HttpOnly { get; set; } Property Value Type Description bool Overrides CookieBuilder.HttpOnly Remarks Determines the value that will set on HttpOnly. | Improve this Doc View Source IsEssential Indicates if this cookie is essential for the application to function correctly. If true then consent policy checks may be bypassed. The default value is false. Declaration public override bool IsEssential { get; set; } Property Value Type Description bool Overrides CookieBuilder.IsEssential | Improve this Doc View Source MaxAge Gets or sets the max-age for the cookie. Declaration public override TimeSpan? MaxAge { get; set; } Property Value Type Description TimeSpan? Overrides CookieBuilder.MaxAge | Improve this Doc View Source Name The name of the cookie. Declaration public override string? Name { get; set; } Property Value Type Description string Overrides CookieBuilder.Name | Improve this Doc View Source Path The cookie path. Declaration public override string? Path { get; set; } Property Value Type Description string Overrides CookieBuilder.Path Remarks Determines the value that will set on Path. | Improve this Doc View Source SameSite The SameSite attribute of the cookie. The default value is Unspecified Declaration public override SameSiteMode SameSite { get; set; } Property Value Type Description SameSiteMode Overrides CookieBuilder.SameSite Remarks Determines the value that will set on SameSite. | Improve this Doc View Source SecurePolicy The policy that will be used to determine Secure. This is determined from the HttpContext passed to Build(HttpContext, DateTimeOffset). Declaration public override CookieSecurePolicy SecurePolicy { get; set; } Property Value Type Description CookieSecurePolicy Overrides CookieBuilder.SecurePolicy Methods | Improve this Doc View Source Build(HttpContext, DateTimeOffset) Creates the cookie options from the given context with an expiration based on expiresFrom and Expiration. Declaration public override CookieOptions Build(HttpContext context, DateTimeOffset expiresFrom) Parameters Type Name Description HttpContext context The HttpContext. DateTimeOffset expiresFrom The time to use as the base for computing Expires. Returns Type Description CookieOptions The cookie options. Overrides CookieBuilder.Build(HttpContext, DateTimeOffset) Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Web.Extensions.Multitenancy.MtExtensions.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Multitenancy.MtExtensions.html",
    "title": "Class MtExtensions",
    "keywords": "Class MtExtensions Inheritance object MtExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web.Extensions.Multitenancy Assembly: DNV.OAuth.Web.Extensions.dll Syntax public static class MtExtensions Methods | Improve this Doc View Source AddMultitenantAuthentication(AuthenticationBuilder, Action<CookieAuthenticationOptions, HttpContext>?) Declaration public static AuthenticationBuilder AddMultitenantAuthentication(this AuthenticationBuilder builder, Action<CookieAuthenticationOptions, HttpContext>? configAction = null) Parameters Type Name Description AuthenticationBuilder builder Action<CookieAuthenticationOptions, HttpContext> configAction Returns Type Description AuthenticationBuilder | Improve this Doc View Source UseMultitenancy(IApplicationBuilder, Func<PathString, bool>?) Declaration public static IApplicationBuilder UseMultitenancy(this IApplicationBuilder appBuilder, Func<PathString, bool>? shouldSkip = null) Parameters Type Name Description IApplicationBuilder appBuilder Func<PathString, bool> shouldSkip Returns Type Description IApplicationBuilder"
  },
  "api/DNV.OAuth.Web.Extensions.Policy.Constants.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Policy.Constants.html",
    "title": "Namespace DNV.OAuth.Web.Extensions.Policy.Constants",
    "keywords": "Namespace DNV.OAuth.Web.Extensions.Policy.Constants Classes TokenClaimTypes"
  },
  "api/DNV.OAuth.Web.Extensions.Policy.Constants.TokenClaimTypes.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Policy.Constants.TokenClaimTypes.html",
    "title": "Class TokenClaimTypes",
    "keywords": "Class TokenClaimTypes Inheritance object TokenClaimTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web.Extensions.Policy.Constants Assembly: DNV.OAuth.Web.Extensions.dll Syntax public class TokenClaimTypes Fields | Improve this Doc View Source VeracityPolicyValidated Declaration public const string VeracityPolicyValidated = \"vplcvdt\" Field Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Web.Extensions.Policy.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Policy.html",
    "title": "Namespace DNV.OAuth.Web.Extensions.Policy",
    "keywords": "Namespace DNV.OAuth.Web.Extensions.Policy Classes PolicyExtensions PolicyValidationOptions Interfaces IPolicyValidator IPolicyViolationHandler Enums PolicyValidationMode"
  },
  "api/DNV.OAuth.Web.Extensions.Policy.IPolicyValidator.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Policy.IPolicyValidator.html",
    "title": "Interface IPolicyValidator",
    "keywords": "Interface IPolicyValidator Namespace: DNV.OAuth.Web.Extensions.Policy Assembly: DNV.OAuth.Web.Extensions.dll Syntax public interface IPolicyValidator Methods | Improve this Doc View Source Validate<TOptions>(RemoteAuthenticationContext<TOptions>, PolicyValidationOptions) Declaration Task<bool> Validate<TOptions>(RemoteAuthenticationContext<TOptions> ctx, PolicyValidationOptions options) where TOptions : AuthenticationSchemeOptions Parameters Type Name Description RemoteAuthenticationContext<TOptions> ctx PolicyValidationOptions options Returns Type Description Task<bool> Type Parameters Name Description TOptions Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Web.Extensions.Policy.IPolicyViolationHandler.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Policy.IPolicyViolationHandler.html",
    "title": "Interface IPolicyViolationHandler",
    "keywords": "Interface IPolicyViolationHandler Namespace: DNV.OAuth.Web.Extensions.Policy Assembly: DNV.OAuth.Web.Extensions.dll Syntax public interface IPolicyViolationHandler Methods | Improve this Doc View Source HandleCompanyAffiliationViolated<TOptions>(RemoteAuthenticationContext<TOptions>, PolicyValidationResult) Declaration Task HandleCompanyAffiliationViolated<TOptions>(RemoteAuthenticationContext<TOptions> ctx, PolicyValidationResult validationResult) where TOptions : AuthenticationSchemeOptions Parameters Type Name Description RemoteAuthenticationContext<TOptions> ctx PolicyValidationResult validationResult Returns Type Description Task Type Parameters Name Description TOptions | Improve this Doc View Source HandleServiceSubscriptionViolated<TOptions>(RemoteAuthenticationContext<TOptions>, PolicyValidationResult) Declaration Task HandleServiceSubscriptionViolated<TOptions>(RemoteAuthenticationContext<TOptions> ctx, PolicyValidationResult validationResult) where TOptions : AuthenticationSchemeOptions Parameters Type Name Description RemoteAuthenticationContext<TOptions> ctx PolicyValidationResult validationResult Returns Type Description Task Type Parameters Name Description TOptions | Improve this Doc View Source HandleTermsAndConditionsViolated<TOptions>(RemoteAuthenticationContext<TOptions>, PolicyValidationResult) Declaration Task HandleTermsAndConditionsViolated<TOptions>(RemoteAuthenticationContext<TOptions> ctx, PolicyValidationResult validationResult) where TOptions : AuthenticationSchemeOptions Parameters Type Name Description RemoteAuthenticationContext<TOptions> ctx PolicyValidationResult validationResult Returns Type Description Task Type Parameters Name Description TOptions Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Web.Extensions.Policy.PolicyExtensions.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Policy.PolicyExtensions.html",
    "title": "Class PolicyExtensions",
    "keywords": "Class PolicyExtensions Inheritance object PolicyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web.Extensions.Policy Assembly: DNV.OAuth.Web.Extensions.dll Syntax public static class PolicyExtensions Methods | Improve this Doc View Source AddPolicyValidation(AuthenticationBuilder, PolicyValidationOptions) Declaration public static AuthenticationBuilder AddPolicyValidation(this AuthenticationBuilder builder, PolicyValidationOptions policyValidationOptions) Parameters Type Name Description AuthenticationBuilder builder PolicyValidationOptions policyValidationOptions Returns Type Description AuthenticationBuilder Exceptions Type Condition ArgumentNullException | Improve this Doc View Source AddPolicyValidation(AuthenticationBuilder, Action<PolicyValidationOptions>) Declaration public static AuthenticationBuilder AddPolicyValidation(this AuthenticationBuilder builder, Action<PolicyValidationOptions> configAction) Parameters Type Name Description AuthenticationBuilder builder Action<PolicyValidationOptions> configAction Returns Type Description AuthenticationBuilder Exceptions Type Condition ArgumentNullException"
  },
  "api/DNV.OAuth.Web.Extensions.Policy.PolicyValidationMode.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Policy.PolicyValidationMode.html",
    "title": "Enum PolicyValidationMode",
    "keywords": "Enum PolicyValidationMode Namespace: DNV.OAuth.Web.Extensions.Policy Assembly: DNV.OAuth.Web.Extensions.dll Syntax [Flags] public enum PolicyValidationMode Fields Name Description All PlatformAndService PlatformTermsAndCondition ServiceSubscription must be used together with PlatformTermsAndCondition or PlatformAndService Extension Methods Throws.IfNull<PolicyValidationMode>(PolicyValidationMode, string)"
  },
  "api/DNV.OAuth.Web.Extensions.Policy.PolicyValidationOptions.html": {
    "href": "api/DNV.OAuth.Web.Extensions.Policy.PolicyValidationOptions.html",
    "title": "Class PolicyValidationOptions",
    "keywords": "Class PolicyValidationOptions Inheritance object PolicyValidationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web.Extensions.Policy Assembly: DNV.OAuth.Web.Extensions.dll Syntax public class PolicyValidationOptions Fields | Improve this Doc View Source VeracityDefaultPolicy Declaration public const string VeracityDefaultPolicy = \"VeracityDefaultPolicy\" Field Value Type Description string Properties | Improve this Doc View Source AddAsDefaultPolicy Declaration public bool AddAsDefaultPolicy { get; set; } Property Value Type Description bool | Improve this Doc View Source AuthorizationPolicyName Declaration public string AuthorizationPolicyName { get; set; } Property Value Type Description string | Improve this Doc View Source GetReturnUrl Declaration public Func<HttpContext, string, string>? GetReturnUrl { get; set; } Property Value Type Description Func<HttpContext, string, string> | Improve this Doc View Source PolicyValidationMode Declaration public PolicyValidationMode PolicyValidationMode { get; set; } Property Value Type Description PolicyValidationMode | Improve this Doc View Source ServiceId Declaration public string? ServiceId { get; set; } Property Value Type Description string | Improve this Doc View Source VeracityPolicyApiConfigName Declaration public string? VeracityPolicyApiConfigName { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Web.html": {
    "href": "api/DNV.OAuth.Web.html",
    "title": "Namespace DNV.OAuth.Web",
    "keywords": "Namespace DNV.OAuth.Web Classes JwtExtensions JwtOptions JwtOptions.AuthorityItem OAuthExtensions OidcOptions"
  },
  "api/DNV.OAuth.Web.JwtExtensions.html": {
    "href": "api/DNV.OAuth.Web.JwtExtensions.html",
    "title": "Class JwtExtensions",
    "keywords": "Class JwtExtensions Inheritance object JwtExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web Assembly: DNV.OAuth.Web.dll Syntax public static class JwtExtensions Methods | Improve this Doc View Source AddJwt(AuthenticationBuilder, Action<IDictionary<string, JwtOptions>>) Declaration public static AuthenticationBuilder AddJwt(this AuthenticationBuilder builder, Action<IDictionary<string, JwtOptions>> setupAction) Parameters Type Name Description AuthenticationBuilder builder Action<IDictionary<string, JwtOptions>> setupAction Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddJwt(AuthenticationBuilder, IDictionary<string, JwtOptions>) Declaration public static AuthenticationBuilder AddJwt(this AuthenticationBuilder builder, IDictionary<string, JwtOptions> schemaOptions) Parameters Type Name Description AuthenticationBuilder builder IDictionary<string, JwtOptions> schemaOptions Returns Type Description AuthenticationBuilder Exceptions Type Condition ArgumentNullException | Improve this Doc View Source AddJwt(AuthenticationBuilder, IEnumerable<IConfigurationSection>) Declaration public static AuthenticationBuilder AddJwt(this AuthenticationBuilder builder, IEnumerable<IConfigurationSection> sections) Parameters Type Name Description AuthenticationBuilder builder IEnumerable<IConfigurationSection> sections Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddJwt(AuthenticationBuilder, string, JwtOptions) Declaration public static AuthenticationBuilder AddJwt(this AuthenticationBuilder builder, string authenticationSchema, JwtOptions jwtOptions) Parameters Type Name Description AuthenticationBuilder builder string authenticationSchema JwtOptions jwtOptions Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddJwt(AuthenticationBuilder, string, Action<JwtOptions>) Declaration public static AuthenticationBuilder AddJwt(this AuthenticationBuilder builder, string authenticationSchema, Action<JwtOptions> setupAction) Parameters Type Name Description AuthenticationBuilder builder string authenticationSchema Action<JwtOptions> setupAction Returns Type Description AuthenticationBuilder"
  },
  "api/DNV.OAuth.Web.JwtOptions.AuthorityItem.html": {
    "href": "api/DNV.OAuth.Web.JwtOptions.AuthorityItem.html",
    "title": "Class JwtOptions.AuthorityItem",
    "keywords": "Class JwtOptions.AuthorityItem Inheritance object JwtOptions.AuthorityItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web Assembly: DNV.OAuth.Web.dll Syntax public class JwtOptions.AuthorityItem Properties | Improve this Doc View Source Authority Declaration public string? Authority { get; set; } Property Value Type Description string | Improve this Doc View Source SchemePostfix Declaration public string? SchemePostfix { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Web.JwtOptions.html": {
    "href": "api/DNV.OAuth.Web.JwtOptions.html",
    "title": "Class JwtOptions",
    "keywords": "Class JwtOptions Inheritance object JwtOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web Assembly: DNV.OAuth.Web.dll Syntax public class JwtOptions Fields | Improve this Doc View Source JwtDefaultPolicy Declaration public const string JwtDefaultPolicy = \"JwtDefaultPolicy\" Field Value Type Description string Properties | Improve this Doc View Source AddAsDefault Declaration public bool AddAsDefault { get; set; } Property Value Type Description bool | Improve this Doc View Source Audience Declaration public string? Audience { get; set; } Property Value Type Description string | Improve this Doc View Source Authorities Multiple Authorities Declaration public List<JwtOptions.AuthorityItem> Authorities { get; set; } Property Value Type Description List<JwtOptions.AuthorityItem> | Improve this Doc View Source Authority Gets or sets the Authority to use when making OpenIdConnect calls. Declaration public string? Authority { get; set; } Property Value Type Description string Remarks v1 https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d (not recommended) https://login.veracity.com/tfp/a68572e3-63ce-4bc1-acdc-b64943502e9d/b2c_1a_signinwithadfsidp (don't use it) v2 https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0 https://login.veracity.com/tfp/a68572e3-63ce-4bc1-acdc-b64943502e9d/b2c_1a_signinwithadfsidp/v2.0 (by default) path segment 'tfp' is required for MSAL, it is obsoleted and might be removed in the future. | Improve this Doc View Source AuthorizationPolicyName Declaration public string AuthorizationPolicyName { get; set; } Property Value Type Description string | Improve this Doc View Source ClientId Declaration [Obsolete(\"Use Audience instead\")] public string? ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source CustomClaimsValidator Declaration public Func<IEnumerable<Claim>, (bool Succeeded, string FailedReason)>? CustomClaimsValidator { get; set; } Property Value Type Description Func<IEnumerable<Claim>, (bool Succeeded, string FailureReason)> | Improve this Doc View Source Events Declaration public JwtBearerEvents? Events { get; set; } Property Value Type Description JwtBearerEvents | Improve this Doc View Source SecurityTokenValidator Declaration public ISecurityTokenValidator? SecurityTokenValidator { get; set; } Property Value Type Description ISecurityTokenValidator | Improve this Doc View Source TokenValidationParameters Declaration public TokenValidationParameters? TokenValidationParameters { get; set; } Property Value Type Description TokenValidationParameters Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.OAuth.Web.OAuthExtensions.html": {
    "href": "api/DNV.OAuth.Web.OAuthExtensions.html",
    "title": "Class OAuthExtensions",
    "keywords": "Class OAuthExtensions Inheritance object OAuthExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web Assembly: DNV.OAuth.Web.dll Syntax public static class OAuthExtensions Methods | Improve this Doc View Source AddOidc(AuthenticationBuilder, OidcOptions, Action<CookieAuthenticationOptions>?, Action<DistributedCacheEntryOptions>?) Add OpenId Connect authentication Declaration public static AuthenticationBuilder AddOidc(this AuthenticationBuilder builder, OidcOptions oidcOptions, Action<CookieAuthenticationOptions>? cookieSetupAction = null, Action<DistributedCacheEntryOptions>? cacheSetupAction = null) Parameters Type Name Description AuthenticationBuilder builder OidcOptions oidcOptions Action<CookieAuthenticationOptions> cookieSetupAction Action<DistributedCacheEntryOptions> cacheSetupAction Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddOidc(AuthenticationBuilder, Action<OidcOptions>, Action<CookieAuthenticationOptions>?, Action<DistributedCacheEntryOptions>?) Declaration public static AuthenticationBuilder AddOidc(this AuthenticationBuilder builder, Action<OidcOptions> oidcSetupAction, Action<CookieAuthenticationOptions>? cookieSetupAction = null, Action<DistributedCacheEntryOptions>? cacheSetupAction = null) Parameters Type Name Description AuthenticationBuilder builder Action<OidcOptions> oidcSetupAction Action<CookieAuthenticationOptions> cookieSetupAction Action<DistributedCacheEntryOptions> cacheSetupAction Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddOidc(IServiceCollection, OidcOptions, Action<CookieAuthenticationOptions>?, Action<DistributedCacheEntryOptions>?) Declaration public static AuthenticationBuilder AddOidc(this IServiceCollection services, OidcOptions oidcOptions, Action<CookieAuthenticationOptions>? cookieSetupAction = null, Action<DistributedCacheEntryOptions>? cacheSetupAction = null) Parameters Type Name Description IServiceCollection services OidcOptions oidcOptions Action<CookieAuthenticationOptions> cookieSetupAction Action<DistributedCacheEntryOptions> cacheSetupAction Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddOidc(IServiceCollection, Action<OidcOptions>, Action<CookieAuthenticationOptions>?, Action<DistributedCacheEntryOptions>?) Declaration public static AuthenticationBuilder AddOidc(this IServiceCollection services, Action<OidcOptions> oidcSetupAction, Action<CookieAuthenticationOptions>? cookieSetupAction = null, Action<DistributedCacheEntryOptions>? cacheSetupAction = null) Parameters Type Name Description IServiceCollection services Action<OidcOptions> oidcSetupAction Action<CookieAuthenticationOptions> cookieSetupAction Action<DistributedCacheEntryOptions> cacheSetupAction Returns Type Description AuthenticationBuilder"
  },
  "api/DNV.OAuth.Web.Oidc.html": {
    "href": "api/DNV.OAuth.Web.Oidc.html",
    "title": "Namespace DNV.OAuth.Web.Oidc",
    "keywords": "Namespace DNV.OAuth.Web.Oidc Classes OidcMessageExtensions"
  },
  "api/DNV.OAuth.Web.Oidc.OidcMessageExtensions.html": {
    "href": "api/DNV.OAuth.Web.Oidc.OidcMessageExtensions.html",
    "title": "Class OidcMessageExtensions",
    "keywords": "Class OidcMessageExtensions Inheritance object OidcMessageExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web.Oidc Assembly: DNV.OAuth.Web.dll Syntax public static class OidcMessageExtensions Fields | Improve this Doc View Source FormPostScriptHashCode Declaration public const string FormPostScriptHashCode = \"sha256-N4ps+XP2YXr4JI2/sWVoER7gSQH2UxrXbN3v6MvHM4I=\" Field Value Type Description string"
  },
  "api/DNV.OAuth.Web.OidcOptions.html": {
    "href": "api/DNV.OAuth.Web.OidcOptions.html",
    "title": "Class OidcOptions",
    "keywords": "Class OidcOptions Inheritance object OAuth2Options OidcOptions Inherited Members OAuth2Options.Authority OAuth2Options.ClientId OAuth2Options.ClientSecret OAuth2Options.Resource OAuth2Options.Scopes OAuth2Options.CallbackPath OAuth2Options.Clone() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.OAuth.Web Assembly: DNV.OAuth.Web.dll Syntax public class OidcOptions : OAuth2Options Properties | Improve this Doc View Source AuthenticationMethod Declaration public OpenIdConnectRedirectBehavior AuthenticationMethod { get; set; } Property Value Type Description OpenIdConnectRedirectBehavior | Improve this Doc View Source Events Declaration public OpenIdConnectEvents? Events { get; set; } Property Value Type Description OpenIdConnectEvents | Improve this Doc View Source ResponseType Gets or sets the 'response_type'. Declaration public string ResponseType { get; set; } Property Value Type Description string | Improve this Doc View Source SecurityTokenValidator Declaration public ISecurityTokenValidator? SecurityTokenValidator { get; set; } Property Value Type Description ISecurityTokenValidator Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.ConsoleApp.Commands.CommandType.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.Commands.CommandType.html",
    "title": "Enum CommandType",
    "keywords": "Enum CommandType Namespace: DNV.SecretsManager.ConsoleApp.Commands Assembly: secretsmanager.dll Syntax public enum CommandType Fields Name Description Clear Download None Restart Upload Extension Methods Throws.IfNull<CommandType>(CommandType, string)"
  },
  "api/DNV.SecretsManager.ConsoleApp.Commands.ConsoleCommand.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.Commands.ConsoleCommand.html",
    "title": "Class ConsoleCommand",
    "keywords": "Class ConsoleCommand Inheritance object ConsoleCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.SecretsManager.ConsoleApp.Commands Assembly: secretsmanager.dll Syntax public static class ConsoleCommand Methods | Improve this Doc View Source BuildCommandUseage(IConsoleCommand, string) Declaration public static string BuildCommandUseage(IConsoleCommand command, string applicationName) Parameters Type Name Description IConsoleCommand command string applicationName Returns Type Description string | Improve this Doc View Source CollectOptions(IEnumerable<ConsoleOption>, string[]) Declaration public static Dictionary<string, object> CollectOptions(IEnumerable<ConsoleOption> optionDefinitions, string[] args) Parameters Type Name Description IEnumerable<ConsoleOption> optionDefinitions string[] args Returns Type Description Dictionary<string, object> | Improve this Doc View Source GetDownloadFilenameOrInvalid(string) Declaration public static string GetDownloadFilenameOrInvalid(string value) Parameters Type Name Description string value Returns Type Description string | Improve this Doc View Source GetStringOrInvalid(string, string, Func<string, bool>, Func<string, string>) Declaration public static string GetStringOrInvalid(string value, string prompt, Func<string, bool> isValid, Func<string, string> invalidMessage) Parameters Type Name Description string value string prompt Func<string, bool> isValid Func<string, string> invalidMessage Returns Type Description string | Improve this Doc View Source GetStringOrInvalid(string, string, Func<string, Task<bool>>, Func<string, string>) Declaration public static Task<string> GetStringOrInvalid(string value, string prompt, Func<string, Task<bool>> isValid, Func<string, string> invalidMessage) Parameters Type Name Description string value string prompt Func<string, Task<bool>> isValid Func<string, string> invalidMessage Returns Type Description Task<string> | Improve this Doc View Source GetUploadFilenameOrInvalid(string) Declaration public static string GetUploadFilenameOrInvalid(string value) Parameters Type Name Description string value Returns Type Description string"
  },
  "api/DNV.SecretsManager.ConsoleApp.Commands.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.Commands.html",
    "title": "Namespace DNV.SecretsManager.ConsoleApp.Commands",
    "keywords": "Namespace DNV.SecretsManager.ConsoleApp.Commands Classes ConsoleCommand Interfaces IConsoleCommand Enums CommandType"
  },
  "api/DNV.SecretsManager.ConsoleApp.Commands.IConsoleCommand.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.Commands.IConsoleCommand.html",
    "title": "Interface IConsoleCommand",
    "keywords": "Interface IConsoleCommand Namespace: DNV.SecretsManager.ConsoleApp.Commands Assembly: secretsmanager.dll Syntax public interface IConsoleCommand Properties | Improve this Doc View Source Description Declaration string Description { get; } Property Value Type Description string | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description string | Improve this Doc View Source Options Declaration IEnumerable<ConsoleOption> Options { get; } Property Value Type Description IEnumerable<ConsoleOption> Methods | Improve this Doc View Source Build(Dictionary<string, object>) Declaration Task<IConsoleCommand> Build(Dictionary<string, object> options) Parameters Type Name Description Dictionary<string, object> options Returns Type Description Task<IConsoleCommand> | Improve this Doc View Source Execute() Declaration Task Execute() Returns Type Description Task Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.ConsoleApp.Commands.KeyVault.CommandType.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.Commands.KeyVault.CommandType.html",
    "title": "Enum CommandType",
    "keywords": "Enum CommandType Namespace: DNV.SecretsManager.ConsoleApp.Commands.KeyVault Assembly: secretsmanager.dll Syntax public enum CommandType Fields Name Description Clear Download None Restart Upload Extension Methods Throws.IfNull<CommandType>(CommandType, string)"
  },
  "api/DNV.SecretsManager.ConsoleApp.Commands.KeyVault.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.Commands.KeyVault.html",
    "title": "Namespace DNV.SecretsManager.ConsoleApp.Commands.KeyVault",
    "keywords": "Namespace DNV.SecretsManager.ConsoleApp.Commands.KeyVault Enums CommandType"
  },
  "api/DNV.SecretsManager.ConsoleApp.Commands.VariableGroup.CommandType.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.Commands.VariableGroup.CommandType.html",
    "title": "Enum CommandType",
    "keywords": "Enum CommandType Namespace: DNV.SecretsManager.ConsoleApp.Commands.VariableGroup Assembly: secretsmanager.dll Syntax public enum CommandType Fields Name Description Clear Download None Upload Extension Methods Throws.IfNull<CommandType>(CommandType, string)"
  },
  "api/DNV.SecretsManager.ConsoleApp.Commands.VariableGroup.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.Commands.VariableGroup.html",
    "title": "Namespace DNV.SecretsManager.ConsoleApp.Commands.VariableGroup",
    "keywords": "Namespace DNV.SecretsManager.ConsoleApp.Commands.VariableGroup Enums CommandType"
  },
  "api/DNV.SecretsManager.ConsoleApp.ConsoleOption.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.ConsoleOption.html",
    "title": "Class ConsoleOption",
    "keywords": "Class ConsoleOption Inheritance object ConsoleOption Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.SecretsManager.ConsoleApp Assembly: secretsmanager.dll Syntax public class ConsoleOption Properties | Improve this Doc View Source Abbreviation Declaration public char Abbreviation { get; set; } Property Value Type Description char | Improve this Doc View Source IsFlag Declaration public bool IsFlag { get; set; } Property Value Type Description bool | Improve this Doc View Source IsOptional Declaration public bool IsOptional { get; set; } Property Value Type Description bool | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.ConsoleApp.html": {
    "href": "api/DNV.SecretsManager.ConsoleApp.html",
    "title": "Namespace DNV.SecretsManager.ConsoleApp",
    "keywords": "Namespace DNV.SecretsManager.ConsoleApp Classes ConsoleOption"
  },
  "api/DNV.SecretsManager.Exceptions.html": {
    "href": "api/DNV.SecretsManager.Exceptions.html",
    "title": "Namespace DNV.SecretsManager.Exceptions",
    "keywords": "Namespace DNV.SecretsManager.Exceptions Classes JsonParseException"
  },
  "api/DNV.SecretsManager.Exceptions.JsonParseException.html": {
    "href": "api/DNV.SecretsManager.Exceptions.JsonParseException.html",
    "title": "Class JsonParseException",
    "keywords": "Class JsonParseException Inheritance object Exception JsonParseException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.ReferenceEquals(object, object) Namespace: DNV.SecretsManager.Exceptions Assembly: DNV.SecretsManager.dll Syntax [Serializable] public sealed class JsonParseException : Exception, ISerializable Constructors | Improve this Doc View Source JsonParseException(string) Declaration public JsonParseException(string pathSegment) Parameters Type Name Description string pathSegment Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.html": {
    "href": "api/DNV.SecretsManager.html",
    "title": "Namespace DNV.SecretsManager",
    "keywords": "Namespace DNV.SecretsManager Classes VariableGroupClientConfiguration"
  },
  "api/DNV.SecretsManager.Services.Abstractions.html": {
    "href": "api/DNV.SecretsManager.Services.Abstractions.html",
    "title": "Namespace DNV.SecretsManager.Services.Abstractions",
    "keywords": "Namespace DNV.SecretsManager.Services.Abstractions Interfaces IKeyVaultSecretService IVariableGroupSecretsService"
  },
  "api/DNV.SecretsManager.Services.Abstractions.IKeyVaultSecretService.html": {
    "href": "api/DNV.SecretsManager.Services.Abstractions.IKeyVaultSecretService.html",
    "title": "Interface IKeyVaultSecretService",
    "keywords": "Interface IKeyVaultSecretService Namespace: DNV.SecretsManager.Services.Abstractions Assembly: DNV.SecretsManager.dll Syntax public interface IKeyVaultSecretService Methods | Improve this Doc View Source ClearSecrets(string) Declaration Task<int> ClearSecrets(string source) Parameters Type Name Description string source Returns Type Description Task<int> | Improve this Doc View Source FromJson(string) Declaration Dictionary<string, SecureString> FromJson(string json) Parameters Type Name Description string json Returns Type Description Dictionary<string, SecureString> | Improve this Doc View Source GetAppServiceOptionsByName(string) Declaration Task<IEnumerable<AppServiceOption>> GetAppServiceOptionsByName(string name) Parameters Type Name Description string name Returns Type Description Task<IEnumerable<AppServiceOption>> | Improve this Doc View Source GetSecretsAsDictionary(string) Declaration Task<Dictionary<string, SecureString>> GetSecretsAsDictionary(string source) Parameters Type Name Description string source Returns Type Description Task<Dictionary<string, SecureString>> | Improve this Doc View Source RestartAppService(string) Declaration Task RestartAppService(string resourceId) Parameters Type Name Description string resourceId Returns Type Description Task | Improve this Doc View Source SetSecretsFromDictionary(string, Dictionary<string, SecureString>) Declaration Task SetSecretsFromDictionary(string source, Dictionary<string, SecureString> secrets) Parameters Type Name Description string source Dictionary<string, SecureString> secrets Returns Type Description Task | Improve this Doc View Source SetSecretsFromJson(string, string) Declaration Task SetSecretsFromJson(string source, string json) Parameters Type Name Description string source string json Returns Type Description Task | Improve this Doc View Source ToJson(Dictionary<string, SecureString>) Declaration string ToJson(Dictionary<string, SecureString> secrets) Parameters Type Name Description Dictionary<string, SecureString> secrets Returns Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.Services.Abstractions.IVariableGroupSecretsService.html": {
    "href": "api/DNV.SecretsManager.Services.Abstractions.IVariableGroupSecretsService.html",
    "title": "Interface IVariableGroupSecretsService",
    "keywords": "Interface IVariableGroupSecretsService Namespace: DNV.SecretsManager.Services.Abstractions Assembly: DNV.SecretsManager.dll Syntax public interface IVariableGroupSecretsService Methods | Improve this Doc View Source ClearSecrets(string) Declaration Task<int> ClearSecrets(string source) Parameters Type Name Description string source Returns Type Description Task<int> | Improve this Doc View Source FromJson(string) Declaration Dictionary<string, SecureString> FromJson(string json) Parameters Type Name Description string json Returns Type Description Dictionary<string, SecureString> | Improve this Doc View Source GetSecretsAsDictionary(string) Declaration Task<Dictionary<string, SecureString>> GetSecretsAsDictionary(string source) Parameters Type Name Description string source Returns Type Description Task<Dictionary<string, SecureString>> | Improve this Doc View Source SetClientConfiguration(VariableGroupClientConfiguration) Declaration void SetClientConfiguration(VariableGroupClientConfiguration configuration) Parameters Type Name Description VariableGroupClientConfiguration configuration | Improve this Doc View Source SetSecretsFromDictionary(string, Dictionary<string, SecureString>) Declaration Task SetSecretsFromDictionary(string source, Dictionary<string, SecureString> secrets) Parameters Type Name Description string source Dictionary<string, SecureString> secrets Returns Type Description Task | Improve this Doc View Source SetSecretsFromJson(string, string) Declaration Task SetSecretsFromJson(string source, string json) Parameters Type Name Description string source string json Returns Type Description Task | Improve this Doc View Source ToJson(Dictionary<string, SecureString>) Declaration string ToJson(Dictionary<string, SecureString> secrets) Parameters Type Name Description Dictionary<string, SecureString> secrets Returns Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.Services.html": {
    "href": "api/DNV.SecretsManager.Services.html",
    "title": "Namespace DNV.SecretsManager.Services",
    "keywords": "Namespace DNV.SecretsManager.Services Classes KeyVaultSecretsService SecretsService VariableGroupSecretsService"
  },
  "api/DNV.SecretsManager.Services.KeyVaultSecretsService.html": {
    "href": "api/DNV.SecretsManager.Services.KeyVaultSecretsService.html",
    "title": "Class KeyVaultSecretsService",
    "keywords": "Class KeyVaultSecretsService Inheritance object SecretsService KeyVaultSecretsService Implements IKeyVaultSecretService Inherited Members SecretsService.ToJson(Dictionary<string, SecureString>) SecretsService.FromJson(string) SecretsService.ToSecureDictionary(Dictionary<string, string>) SecretsService.FromSecureDictionary(Dictionary<string, SecureString>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.SecretsManager.Services Assembly: DNV.SecretsManager.dll Syntax public class KeyVaultSecretsService : SecretsService, IKeyVaultSecretService Constructors | Improve this Doc View Source KeyVaultSecretsService() Declaration public KeyVaultSecretsService() Methods | Improve this Doc View Source ClearSecrets(string) Declaration public override Task<int> ClearSecrets(string source) Parameters Type Name Description string source Returns Type Description Task<int> Overrides SecretsService.ClearSecrets(string) | Improve this Doc View Source GetAppServiceOptionsByName(string) Declaration public Task<IEnumerable<AppServiceOption>> GetAppServiceOptionsByName(string name) Parameters Type Name Description string name Returns Type Description Task<IEnumerable<AppServiceOption>> | Improve this Doc View Source GetSecretsAsDictionary(string) Declaration public override Task<Dictionary<string, SecureString>> GetSecretsAsDictionary(string source) Parameters Type Name Description string source Returns Type Description Task<Dictionary<string, SecureString>> Overrides SecretsService.GetSecretsAsDictionary(string) | Improve this Doc View Source RestartAppService(string) Declaration public Task RestartAppService(string resourceId) Parameters Type Name Description string resourceId Returns Type Description Task | Improve this Doc View Source SetSecretsFromDictionary(string, Dictionary<string, SecureString>) Declaration public override Task SetSecretsFromDictionary(string source, Dictionary<string, SecureString> secrets) Parameters Type Name Description string source Dictionary<string, SecureString> secrets Returns Type Description Task Overrides SecretsService.SetSecretsFromDictionary(string, Dictionary<string, SecureString>) | Improve this Doc View Source SetSecretsFromJson(string, string) Declaration public override Task SetSecretsFromJson(string source, string json) Parameters Type Name Description string source string json Returns Type Description Task Overrides SecretsService.SetSecretsFromJson(string, string) Implements IKeyVaultSecretService Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.Services.SecretsService.html": {
    "href": "api/DNV.SecretsManager.Services.SecretsService.html",
    "title": "Class SecretsService",
    "keywords": "Class SecretsService Inheritance object SecretsService KeyVaultSecretsService VariableGroupSecretsService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.SecretsManager.Services Assembly: DNV.SecretsManager.dll Syntax public abstract class SecretsService Methods | Improve this Doc View Source ClearSecrets(string) Declaration public abstract Task<int> ClearSecrets(string source) Parameters Type Name Description string source Returns Type Description Task<int> | Improve this Doc View Source FromJson(string) Declaration public Dictionary<string, SecureString> FromJson(string json) Parameters Type Name Description string json Returns Type Description Dictionary<string, SecureString> | Improve this Doc View Source FromSecureDictionary(Dictionary<string, SecureString>) Declaration protected Dictionary<string, string> FromSecureDictionary(Dictionary<string, SecureString> dict) Parameters Type Name Description Dictionary<string, SecureString> dict Returns Type Description Dictionary<string, string> | Improve this Doc View Source GetSecretsAsDictionary(string) Declaration public abstract Task<Dictionary<string, SecureString>> GetSecretsAsDictionary(string source) Parameters Type Name Description string source Returns Type Description Task<Dictionary<string, SecureString>> | Improve this Doc View Source SetSecretsFromDictionary(string, Dictionary<string, SecureString>) Declaration public abstract Task SetSecretsFromDictionary(string vaultBaseUrl, Dictionary<string, SecureString> secrets) Parameters Type Name Description string vaultBaseUrl Dictionary<string, SecureString> secrets Returns Type Description Task | Improve this Doc View Source SetSecretsFromJson(string, string) Declaration public abstract Task SetSecretsFromJson(string source, string json) Parameters Type Name Description string source string json Returns Type Description Task | Improve this Doc View Source ToJson(Dictionary<string, SecureString>) Declaration public string ToJson(Dictionary<string, SecureString> secrets) Parameters Type Name Description Dictionary<string, SecureString> secrets Returns Type Description string | Improve this Doc View Source ToSecureDictionary(Dictionary<string, string>) Declaration protected Dictionary<string, SecureString> ToSecureDictionary(Dictionary<string, string> dict) Parameters Type Name Description Dictionary<string, string> dict Returns Type Description Dictionary<string, SecureString> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.Services.VariableGroupSecretsService.html": {
    "href": "api/DNV.SecretsManager.Services.VariableGroupSecretsService.html",
    "title": "Class VariableGroupSecretsService",
    "keywords": "Class VariableGroupSecretsService Inheritance object SecretsService VariableGroupSecretsService Implements IVariableGroupSecretsService Inherited Members SecretsService.ToJson(Dictionary<string, SecureString>) SecretsService.FromJson(string) SecretsService.ToSecureDictionary(Dictionary<string, string>) SecretsService.FromSecureDictionary(Dictionary<string, SecureString>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.SecretsManager.Services Assembly: DNV.SecretsManager.dll Syntax public class VariableGroupSecretsService : SecretsService, IVariableGroupSecretsService Methods | Improve this Doc View Source ClearSecrets(string) Declaration public override Task<int> ClearSecrets(string source) Parameters Type Name Description string source Returns Type Description Task<int> Overrides SecretsService.ClearSecrets(string) | Improve this Doc View Source GetSecretsAsDictionary(string) Declaration public override Task<Dictionary<string, SecureString>> GetSecretsAsDictionary(string source) Parameters Type Name Description string source Returns Type Description Task<Dictionary<string, SecureString>> Overrides SecretsService.GetSecretsAsDictionary(string) | Improve this Doc View Source SetClientConfiguration(VariableGroupClientConfiguration) Declaration public void SetClientConfiguration(VariableGroupClientConfiguration configuration) Parameters Type Name Description VariableGroupClientConfiguration configuration | Improve this Doc View Source SetSecretsFromDictionary(string, Dictionary<string, SecureString>) Declaration public override Task SetSecretsFromDictionary(string source, Dictionary<string, SecureString> secrets) Parameters Type Name Description string source Dictionary<string, SecureString> secrets Returns Type Description Task Overrides SecretsService.SetSecretsFromDictionary(string, Dictionary<string, SecureString>) | Improve this Doc View Source SetSecretsFromJson(string, string) Declaration public override Task SetSecretsFromJson(string source, string json) Parameters Type Name Description string source string json Returns Type Description Task Overrides SecretsService.SetSecretsFromJson(string, string) Implements IVariableGroupSecretsService Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.SecretsManager.VariableGroupClientConfiguration.html": {
    "href": "api/DNV.SecretsManager.VariableGroupClientConfiguration.html",
    "title": "Class VariableGroupClientConfiguration",
    "keywords": "Class VariableGroupClientConfiguration Inheritance object VariableGroupClientConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.SecretsManager Assembly: DNV.SecretsManager.dll Syntax public class VariableGroupClientConfiguration Properties | Improve this Doc View Source ApiVersion Declaration public string ApiVersion { get; set; } Property Value Type Description string | Improve this Doc View Source BaseUrl Declaration public string BaseUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Organization Declaration public string Organization { get; set; } Property Value Type Description string | Improve this Doc View Source PersonalAccessToken Declaration public string PersonalAccessToken { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Security.DataProtection.KeyVault.AzureKeyVaultXmlRepository.html": {
    "href": "api/DNV.Security.DataProtection.KeyVault.AzureKeyVaultXmlRepository.html",
    "title": "Class AzureKeyVaultXmlRepository",
    "keywords": "Class AzureKeyVaultXmlRepository Inheritance object AzureKeyVaultXmlRepository Implements IXmlRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Security.DataProtection.KeyVault Assembly: DNV.Security.DataProtection.KeyVault.dll Syntax public class AzureKeyVaultXmlRepository : IXmlRepository Constructors | Improve this Doc View Source AzureKeyVaultXmlRepository(ILoggerFactory, IAzureClientFactory<SecretClient>, Uri, string) Declaration public AzureKeyVaultXmlRepository(ILoggerFactory loggerFactory, IAzureClientFactory<SecretClient> secretClientFactory, Uri vaultUri, string secretName) Parameters Type Name Description ILoggerFactory loggerFactory IAzureClientFactory<SecretClient> secretClientFactory Uri vaultUri string secretName Methods | Improve this Doc View Source GetAllElements() Gets all top-level XML elements in the repository. Declaration public IReadOnlyCollection<XElement> GetAllElements() Returns Type Description IReadOnlyCollection<XElement> Remarks All top-level elements in the repository. | Improve this Doc View Source StoreElement(XElement, string) Adds a top-level XML element to the repository. Declaration public void StoreElement(XElement element, string friendlyName) Parameters Type Name Description XElement element The element to add. string friendlyName An optional name to be associated with the XML element. For instance, if this repository stores XML files on disk, the friendly name may be used as part of the file name. Repository implementations are not required to observe this parameter even if it has been provided by the caller. Remarks The 'friendlyName' parameter must be unique if specified. For instance, it could be the id of the key being stored. Implements IXmlRepository Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Security.DataProtection.KeyVault.DataProtectionBuilderExtensions.html": {
    "href": "api/DNV.Security.DataProtection.KeyVault.DataProtectionBuilderExtensions.html",
    "title": "Class DataProtectionBuilderExtensions",
    "keywords": "Class DataProtectionBuilderExtensions Inheritance object DataProtectionBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Security.DataProtection.KeyVault Assembly: DNV.Security.DataProtection.KeyVault.dll Syntax public static class DataProtectionBuilderExtensions Methods | Improve this Doc View Source PersistAndProtectKeysToAzureKeyVault(IDataProtectionBuilder, Uri, string, string, TokenCredential) Declaration public static IDataProtectionBuilder PersistAndProtectKeysToAzureKeyVault(this IDataProtectionBuilder builder, Uri vaultUri, string keyName, string secretName, TokenCredential tokenCredential) Parameters Type Name Description IDataProtectionBuilder builder Uri vaultUri string keyName string secretName TokenCredential tokenCredential Returns Type Description IDataProtectionBuilder | Improve this Doc View Source PersistKeysToAzureKeyVault(IDataProtectionBuilder, Uri, string, TokenCredential) Declaration public static IDataProtectionBuilder PersistKeysToAzureKeyVault(this IDataProtectionBuilder builder, Uri vaultUri, string secretName, TokenCredential tokenCredential) Parameters Type Name Description IDataProtectionBuilder builder Uri vaultUri string secretName TokenCredential tokenCredential Returns Type Description IDataProtectionBuilder"
  },
  "api/DNV.Security.DataProtection.KeyVault.html": {
    "href": "api/DNV.Security.DataProtection.KeyVault.html",
    "title": "Namespace DNV.Security.DataProtection.KeyVault",
    "keywords": "Namespace DNV.Security.DataProtection.KeyVault Classes AzureKeyVaultXmlRepository DataProtectionBuilderExtensions"
  },
  "api/DNV.Specifications.html": {
    "href": "api/DNV.Specifications.html",
    "title": "Namespace DNV.Specifications",
    "keywords": "Namespace DNV.Specifications Classes SpecificationBase<TSpecification> Represents the base class for specifications. SpecificationMethods<TTest, TSpecification> Represents the lifecycle methods for a SpecificationBase<TSpecification>."
  },
  "api/DNV.Specifications.NUnit.html": {
    "href": "api/DNV.Specifications.NUnit.html",
    "title": "Namespace DNV.Specifications.NUnit",
    "keywords": "Namespace DNV.Specifications.NUnit Classes Specification Represents the base class for specifications."
  },
  "api/DNV.Specifications.NUnit.Specification.html": {
    "href": "api/DNV.Specifications.NUnit.Specification.html",
    "title": "Class Specification",
    "keywords": "Class Specification Represents the base class for specifications. Inheritance object SpecificationBase<Specification> Specification Inherited Members SpecificationBase<Specification>.Arrange() SpecificationBase<Specification>.Act() SpecificationBase<Specification>.Cleanup() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Specifications.NUnit Assembly: DNV.Specifications.NUnit.dll Syntax public abstract class Specification : SpecificationBase<Specification> Constructors | Improve this Doc View Source Specification() Initializes a new instance of the Specification class. Declaration public Specification() | Improve this Doc View Source Specification(string, string, string) Initializes a new instance of the Specification class. Declaration public Specification(string arrangeMethodName, string actMethodName, string cleanupMethodName) Parameters Type Name Description string arrangeMethodName The name of the methods used for arranging the test. string actMethodName The name of the methods used for acting the test. string cleanupMethodName The name of the methods used for cleaning up after a test. Methods | Improve this Doc View Source DisposeAsync() Tears down the test by doing the cleanup parts. Declaration [TearDown] public Task DisposeAsync() Returns Type Description Task The Task representing the asynchronous operation. | Improve this Doc View Source InitializeAsync() Initializes the test by doing the arrange and act parts. Declaration [SetUp] public Task InitializeAsync() Returns Type Description Task The Task representing the asynchronous operation. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Specifications.SpecificationBase-1.html": {
    "href": "api/DNV.Specifications.SpecificationBase-1.html",
    "title": "Class SpecificationBase<TSpecification>",
    "keywords": "Class SpecificationBase<TSpecification> Represents the base class for specifications. Inheritance object SpecificationBase<TSpecification> Specification Specification Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Specifications Assembly: DNV.Specifications.dll Syntax public abstract class SpecificationBase<TSpecification> Type Parameters Name Description TSpecification The type of the specification class. Constructors | Improve this Doc View Source SpecificationBase(string, string, string) Initializes a new instance of the SpecificationBase<TSpecification> class. Declaration protected SpecificationBase(string arrangeMethodName = \"Establish\", string actMethodName = \"Because\", string cleanupMethodName = \"Destroy\") Parameters Type Name Description string arrangeMethodName The name of the methods used for arranging the test. string actMethodName The name of the methods used for acting the test. string cleanupMethodName The name of the methods used for cleaning up after a test. Methods | Improve this Doc View Source Act() Calls all methods in the class hierarchy for the Act-part. Declaration protected Task Act() Returns Type Description Task A Task representing the asynchronous operation. | Improve this Doc View Source Arrange() Calls all methods in the class hierarchy for the Arrange-part. Declaration protected Task Arrange() Returns Type Description Task A Task representing the asynchronous operation. | Improve this Doc View Source Cleanup() Calls all methods in the class hierarchy for the Cleanup-part. Declaration protected Task Cleanup() Returns Type Description Task A Task representing the asynchronous operation. Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Specifications.SpecificationMethods-2.html": {
    "href": "api/DNV.Specifications.SpecificationMethods-2.html",
    "title": "Class SpecificationMethods<TTest, TSpecification>",
    "keywords": "Class SpecificationMethods<TTest, TSpecification> Represents the lifecycle methods for a SpecificationBase<TSpecification>. Inheritance object SpecificationMethods<TTest, TSpecification> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Specifications Assembly: DNV.Specifications.dll Syntax public static class SpecificationMethods<TTest, TSpecification> Type Parameters Name Description TTest Target type it represents. TSpecification The specification base class. Methods | Improve this Doc View Source Because(object, string) Invoke all Because methods. Declaration public static Task Because(object unit, string methodName) Parameters Type Name Description object unit Unit to invoke them on. string methodName The name of the method. Returns Type Description Task A Task representing the asynchronous operation. | Improve this Doc View Source Destroy(object, string) Invoke all Destroy methods. Declaration public static Task Destroy(object unit, string methodName) Parameters Type Name Description object unit Unit to invoke them on. string methodName The name of the method. Returns Type Description Task A Task representing the asynchronous operation. | Improve this Doc View Source Establish(object, string) Invoke all Establish methods. Declaration public static Task Establish(object unit, string methodName) Parameters Type Name Description object unit Unit to invoke them on. string methodName The name of the method. Returns Type Description Task A Task representing the asynchronous operation."
  },
  "api/DNV.Specifications.XUnit.html": {
    "href": "api/DNV.Specifications.XUnit.html",
    "title": "Namespace DNV.Specifications.XUnit",
    "keywords": "Namespace DNV.Specifications.XUnit Classes Specification Represents the base class for specifications."
  },
  "api/DNV.Specifications.XUnit.Specification.html": {
    "href": "api/DNV.Specifications.XUnit.Specification.html",
    "title": "Class Specification",
    "keywords": "Class Specification Represents the base class for specifications. Inheritance object SpecificationBase<Specification> Specification Implements IAsyncLifetime Inherited Members SpecificationBase<Specification>.Arrange() SpecificationBase<Specification>.Act() SpecificationBase<Specification>.Cleanup() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Specifications.XUnit Assembly: DNV.Specifications.XUnit.dll Syntax public abstract class Specification : SpecificationBase<Specification>, IAsyncLifetime Constructors | Improve this Doc View Source Specification() Initializes a new instance of the Specification class. Declaration protected Specification() | Improve this Doc View Source Specification(string, string, string) Initializes a new instance of the Specification class. Declaration protected Specification(string arrangeMethodName, string actMethodName, string cleanupMethodName) Parameters Type Name Description string arrangeMethodName The name of the methods used for arranging the test. string actMethodName The name of the methods used for acting the test. string cleanupMethodName The name of the methods used for cleaning up after a test. Methods | Improve this Doc View Source DisposeAsync() Called when an object is no longer needed. Called just before Dispose() if the class also implements that. Declaration public Task DisposeAsync() Returns Type Description Task | Improve this Doc View Source InitializeAsync() Called immediately after the class has been created, before it is used. Declaration public Task InitializeAsync() Returns Type Description Task Implements Xunit.IAsyncLifetime Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.ApiClientFactory.html": {
    "href": "api/DNV.Veracity.Services.Api.ApiClientFactory.html",
    "title": "Class ApiClientFactory",
    "keywords": "Class ApiClientFactory Inheritance object ApiClientFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api Assembly: DNV.Veracity.Services.Api.dll Syntax public class ApiClientFactory Constructors | Improve this Doc View Source ApiClientFactory(IEnumerable<OAuthHttpClientOptions>, IHttpClientFactory, ISerializer) Declaration public ApiClientFactory(IEnumerable<OAuthHttpClientOptions> optionsList, IHttpClientFactory httpClientFactory, ISerializer serializer) Parameters Type Name Description IEnumerable<OAuthHttpClientOptions> optionsList IHttpClientFactory httpClientFactory ISerializer serializer Fields | Improve this Doc View Source _httpClientFactory Declaration protected readonly IHttpClientFactory _httpClientFactory Field Value Type Description IHttpClientFactory | Improve this Doc View Source _optionsList Declaration protected readonly IEnumerable<OAuthHttpClientOptions> _optionsList Field Value Type Description IEnumerable<OAuthHttpClientOptions> | Improve this Doc View Source _serializer Declaration protected readonly ISerializer _serializer Field Value Type Description ISerializer Methods | Improve this Doc View Source GetClient(OAuthCredentialFlow?) Declaration public IApiClient GetClient(OAuthCredentialFlow? flow = null) Parameters Type Name Description OAuthCredentialFlow? flow Returns Type Description IApiClient Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.ApiResourceClientBuilder.html": {
    "href": "api/DNV.Veracity.Services.Api.ApiResourceClientBuilder.html",
    "title": "Class ApiResourceClientBuilder",
    "keywords": "Class ApiResourceClientBuilder Inheritance object ApiResourceClientBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api Assembly: DNV.Veracity.Services.Api.dll Syntax public class ApiResourceClientBuilder Methods | Improve this Doc View Source Build() Declaration public IApiClient Build() Returns Type Description IApiClient | Improve this Doc View Source CreateWithOAuthClientOptions(OAuthHttpClientOptions) Declaration public static ApiResourceClientBuilder CreateWithOAuthClientOptions(OAuthHttpClientOptions options) Parameters Type Name Description OAuthHttpClientOptions options Returns Type Description ApiResourceClientBuilder | Improve this Doc View Source ToAcceptMediaType(DataFormat) Declaration protected string ToAcceptMediaType(DataFormat dataFormat) Parameters Type Name Description DataFormat dataFormat Returns Type Description string | Improve this Doc View Source WithDataFormat(DataFormat) Declaration public ApiResourceClientBuilder WithDataFormat(DataFormat dataFormat) Parameters Type Name Description DataFormat dataFormat Returns Type Description ApiResourceClientBuilder | Improve this Doc View Source WithHttpFactory(IHttpClientFactory) Declaration public ApiResourceClientBuilder WithHttpFactory(IHttpClientFactory httpClientFactory) Parameters Type Name Description IHttpClientFactory httpClientFactory Returns Type Description ApiResourceClientBuilder | Improve this Doc View Source WithSerializer(ISerializer) Declaration public ApiResourceClientBuilder WithSerializer(ISerializer serializer) Parameters Type Name Description ISerializer serializer Returns Type Description ApiResourceClientBuilder | Improve this Doc View Source WithTimeout(TimeSpan) Declaration public ApiResourceClientBuilder WithTimeout(TimeSpan timeout) Parameters Type Name Description TimeSpan timeout Returns Type Description ApiResourceClientBuilder Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.DataFormat.html": {
    "href": "api/DNV.Veracity.Services.Api.DataFormat.html",
    "title": "Enum DataFormat",
    "keywords": "Enum DataFormat Namespace: DNV.Veracity.Services.Api Assembly: DNV.Veracity.Services.Api.dll Syntax public enum DataFormat Fields Name Description Json Xml Extension Methods Throws.IfNull<DataFormat>(DataFormat, string)"
  },
  "api/DNV.Veracity.Services.Api.Directory.Abstractions.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.Abstractions.html",
    "title": "Namespace DNV.Veracity.Services.Api.Directory.Abstractions",
    "keywords": "Namespace DNV.Veracity.Services.Api.Directory.Abstractions Interfaces ICompanyDirectory Exposes methods available for 'Company' resource within 'Directory' view point. IServiceDirectory Exposes methods available for 'Service' resource within 'Directory' view point. IUserDirectory Exposes methods available for 'User' resource within 'Directory' view point."
  },
  "api/DNV.Veracity.Services.Api.Directory.Abstractions.ICompanyDirectory.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.Abstractions.ICompanyDirectory.html",
    "title": "Interface ICompanyDirectory",
    "keywords": "Interface ICompanyDirectory Exposes methods available for 'Company' resource within 'Directory' view point. Namespace: DNV.Veracity.Services.Api.Directory.Abstractions Assembly: DNV.Veracity.Services.Api.Directory.Abstractions.dll Syntax public interface ICompanyDirectory Methods | Improve this Doc View Source Get(string) Retrieves an individual company. Declaration Task<Company> Get(string companyId) Parameters Type Name Description string companyId Returns Type Description Task<Company> | Improve this Doc View Source ListUsers(string, int, int) Retrieves a paginated collection of user references of users affiliated with a company. Declaration Task<IEnumerable<UserReference>> ListUsers(string companyId, int page = 1, int pageSize = 20) Parameters Type Name Description string companyId int page int pageSize Returns Type Description Task<IEnumerable<UserReference>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Directory.Abstractions.IServiceDirectory.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.Abstractions.IServiceDirectory.html",
    "title": "Interface IServiceDirectory",
    "keywords": "Interface IServiceDirectory Exposes methods available for 'Service' resource within 'Directory' view point. Namespace: DNV.Veracity.Services.Api.Directory.Abstractions Assembly: DNV.Veracity.Services.Api.Directory.Abstractions.dll Syntax public interface IServiceDirectory Methods | Improve this Doc View Source Get(string) Retrieves an individual service. Declaration Task<Service> Get(string serviceId) Parameters Type Name Description string serviceId Returns Type Description Task<Service> | Improve this Doc View Source GetServiceSubscriptions(string, string, string) Retrieves a paginated collection of subscriptions to a service. Declaration Task<IEnumerable<Subscription>> GetServiceSubscriptions(string serviceId, string filter, string pageNo) Parameters Type Name Description string serviceId string filter string pageNo Returns Type Description Task<IEnumerable<Subscription>> | Improve this Doc View Source IsAdmin(string, string) Retrieve a boolean value indicating whether or not a user has administrator role for a service. Declaration Task<bool> IsAdmin(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task<bool> | Improve this Doc View Source ListUsers(string, int, int) Retrieves a paginated collection of user references of users subscribed to a service. Declaration Task<IEnumerable<UserReference>> ListUsers(string serviceId, int page = 1, int pageSize = 20) Parameters Type Name Description string serviceId int page int pageSize Returns Type Description Task<IEnumerable<UserReference>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Directory.Abstractions.IUserDirectory.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.Abstractions.IUserDirectory.html",
    "title": "Interface IUserDirectory",
    "keywords": "Interface IUserDirectory Exposes methods available for 'User' resource within 'Directory' view point. Namespace: DNV.Veracity.Services.Api.Directory.Abstractions Assembly: DNV.Veracity.Services.Api.Directory.Abstractions.dll Syntax public interface IUserDirectory Methods | Improve this Doc View Source Get(string) Retrieves an individual user. Declaration Task<User> Get(string userId) Parameters Type Name Description string userId Returns Type Description Task<User> | Improve this Doc View Source GetSubscription(string, string) Retrieve an individual subscription for a specified user and service. Declaration Task<Subscription> GetSubscription(string userId, string serviceId) Parameters Type Name Description string userId string serviceId Returns Type Description Task<Subscription> | Improve this Doc View Source ListByEmail(string) Retrieves a collection of user references by a specified email value. Declaration Task<IEnumerable<UserReference>> ListByEmail(string email) Parameters Type Name Description string email Returns Type Description Task<IEnumerable<UserReference>> | Improve this Doc View Source ListByUserId(params string[]) Retrieves a collection of users where the id is included in the parameters. Declaration Task<IEnumerable<User>> ListByUserId(params string[] userIds) Parameters Type Name Description string[] userIds Returns Type Description Task<IEnumerable<User>> | Improve this Doc View Source ListCompanies(string) Retrieves a collection of company references of companies with which a user is affiliated. Declaration Task<IEnumerable<CompanyReference>> ListCompanies(string userId) Parameters Type Name Description string userId Returns Type Description Task<IEnumerable<CompanyReference>> | Improve this Doc View Source ListServices(string, int, int) Retrieves a paginated collection of service references of services to which a user is subscribed. Declaration Task<IEnumerable<ServiceReference>> ListServices(string userId, int page = 1, int pageSize = 20) Parameters Type Name Description string userId int page int pageSize Returns Type Description Task<IEnumerable<ServiceReference>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Directory.CompanyDirectory.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.CompanyDirectory.html",
    "title": "Class CompanyDirectory",
    "keywords": "Class CompanyDirectory Inheritance object CompanyDirectory Implements ICompanyDirectory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Directory Assembly: DNV.Veracity.Services.Api.Directory.dll Syntax public class CompanyDirectory : ICompanyDirectory Constructors | Improve this Doc View Source CompanyDirectory(ApiClientFactory) Declaration public CompanyDirectory(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source Get(string) Retrieves an individual company. Declaration public Task<Company> Get(string companyId) Parameters Type Name Description string companyId Returns Type Description Task<Company> | Improve this Doc View Source ListUsers(string, int, int) Retrieves a paginated collection of user references of users affiliated with a company. Declaration public Task<IEnumerable<UserReference>> ListUsers(string companyId, int page = 1, int pageSize = 20) Parameters Type Name Description string companyId int page int pageSize Returns Type Description Task<IEnumerable<UserReference>> Implements ICompanyDirectory Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Directory.Extensions.ConfigurationExtensions.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.Extensions.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions",
    "keywords": "Class ConfigurationExtensions Inheritance object ConfigurationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Directory.Extensions Assembly: DNV.Veracity.Services.Api.Directory.dll Syntax public static class ConfigurationExtensions Methods | Improve this Doc View Source AddCompanyDirectory(IServiceCollection, string) Adds an implementation of ICompanyDirectory to the IServiceCollection. Declaration public static IServiceCollection AddCompanyDirectory(this IServiceCollection services, string clientConfigurationName = \"company-directory-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddServiceDirectory(IServiceCollection, string) Adds an implementation of IServiceDirectory to the IServiceCollection. Declaration public static IServiceCollection AddServiceDirectory(this IServiceCollection services, string clientConfigurationName = \"service-directory-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddUserDirectory(IServiceCollection, string) Adds an implementation of IUserDirectory to the IServiceCollection. Declaration public static IServiceCollection AddUserDirectory(this IServiceCollection services, string clientConfigurationName = \"user-directory-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained."
  },
  "api/DNV.Veracity.Services.Api.Directory.Extensions.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.Extensions.html",
    "title": "Namespace DNV.Veracity.Services.Api.Directory.Extensions",
    "keywords": "Namespace DNV.Veracity.Services.Api.Directory.Extensions Classes ConfigurationExtensions"
  },
  "api/DNV.Veracity.Services.Api.Directory.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.html",
    "title": "Namespace DNV.Veracity.Services.Api.Directory",
    "keywords": "Namespace DNV.Veracity.Services.Api.Directory Classes CompanyDirectory ServiceDirectory UserDirectory"
  },
  "api/DNV.Veracity.Services.Api.Directory.ServiceDirectory.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.ServiceDirectory.html",
    "title": "Class ServiceDirectory",
    "keywords": "Class ServiceDirectory Inheritance object ServiceDirectory Implements IServiceDirectory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Directory Assembly: DNV.Veracity.Services.Api.Directory.dll Syntax public class ServiceDirectory : IServiceDirectory Constructors | Improve this Doc View Source ServiceDirectory(ApiClientFactory) Declaration public ServiceDirectory(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source Get(string) Retrieves an individual service. Declaration public Task<Service> Get(string serviceId) Parameters Type Name Description string serviceId Returns Type Description Task<Service> | Improve this Doc View Source GetServiceSubscriptions(string, string, string) Retrieves a paginated collection of subscriptions to a service. Declaration public Task<IEnumerable<Subscription>> GetServiceSubscriptions(string serviceId, string filter, string pageNo) Parameters Type Name Description string serviceId string filter string pageNo Returns Type Description Task<IEnumerable<Subscription>> | Improve this Doc View Source IsAdmin(string, string) Retrieve a boolean value indicating whether or not a user has administrator role for a service. Declaration public Task<bool> IsAdmin(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task<bool> | Improve this Doc View Source ListUsers(string, int, int) Retrieves a paginated collection of user references of users subscribed to a service. Declaration public Task<IEnumerable<UserReference>> ListUsers(string serviceId, int page = 1, int pageSize = 20) Parameters Type Name Description string serviceId int page int pageSize Returns Type Description Task<IEnumerable<UserReference>> Implements IServiceDirectory Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Directory.UserDirectory.html": {
    "href": "api/DNV.Veracity.Services.Api.Directory.UserDirectory.html",
    "title": "Class UserDirectory",
    "keywords": "Class UserDirectory Inheritance object UserDirectory Implements IUserDirectory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Directory Assembly: DNV.Veracity.Services.Api.Directory.dll Syntax public class UserDirectory : IUserDirectory Constructors | Improve this Doc View Source UserDirectory(ApiClientFactory) Declaration public UserDirectory(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source Get(string) Retrieves an individual user. Declaration public Task<User> Get(string userId) Parameters Type Name Description string userId Returns Type Description Task<User> | Improve this Doc View Source GetSubscription(string, string) Retrieve an individual subscription for a specified user and service. Declaration public Task<Subscription> GetSubscription(string userId, string serviceId) Parameters Type Name Description string userId string serviceId Returns Type Description Task<Subscription> | Improve this Doc View Source ListByEmail(string) Retrieves a collection of user references by a specified email value. Declaration public Task<IEnumerable<UserReference>> ListByEmail(string email) Parameters Type Name Description string email Returns Type Description Task<IEnumerable<UserReference>> | Improve this Doc View Source ListByUserId(params string[]) Retrieves a collection of users where the id is included in the parameters. Declaration public Task<IEnumerable<User>> ListByUserId(params string[] userIds) Parameters Type Name Description string[] userIds Returns Type Description Task<IEnumerable<User>> | Improve this Doc View Source ListCompanies(string) Retrieves a collection of company references of companies with which a user is affiliated. Declaration public Task<IEnumerable<CompanyReference>> ListCompanies(string userId) Parameters Type Name Description string userId Returns Type Description Task<IEnumerable<CompanyReference>> | Improve this Doc View Source ListServices(string, int, int) Retrieves a paginated collection of service references of services to which a user is subscribed. Declaration public Task<IEnumerable<ServiceReference>> ListServices(string userId, int page = 1, int pageSize = 20) Parameters Type Name Description string userId int page int pageSize Returns Type Description Task<IEnumerable<ServiceReference>> Implements IUserDirectory Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Exceptions.html": {
    "href": "api/DNV.Veracity.Services.Api.Exceptions.html",
    "title": "Namespace DNV.Veracity.Services.Api.Exceptions",
    "keywords": "Namespace DNV.Veracity.Services.Api.Exceptions Classes ServerErrorException"
  },
  "api/DNV.Veracity.Services.Api.Exceptions.ServerErrorException.html": {
    "href": "api/DNV.Veracity.Services.Api.Exceptions.ServerErrorException.html",
    "title": "Class ServerErrorException",
    "keywords": "Class ServerErrorException Inheritance object Exception ServerErrorException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.Veracity.Services.Api.Exceptions Assembly: DNV.Veracity.Services.Api.dll Syntax [Serializable] public class ServerErrorException : Exception, ISerializable Constructors | Improve this Doc View Source ServerErrorException(HttpStatusCode, string, string, Exception) Declaration public ServerErrorException(HttpStatusCode httpStatusCode, string responseContent, string message, Exception innerException) Parameters Type Name Description HttpStatusCode httpStatusCode string responseContent string message Exception innerException | Improve this Doc View Source ServerErrorException(SerializationInfo, StreamingContext) Declaration protected ServerErrorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Properties | Improve this Doc View Source ResponseContent Declaration public string ResponseContent { get; set; } Property Value Type Description string | Improve this Doc View Source StatusCode Declaration public HttpStatusCode StatusCode { get; set; } Property Value Type Description HttpStatusCode Methods | Improve this Doc View Source FromResponse(HttpResponseMessage, Exception) Declaration public static Task<ServerErrorException> FromResponse(HttpResponseMessage response, Exception innerException = null) Parameters Type Name Description HttpResponseMessage response Exception innerException Returns Type Description Task<ServerErrorException> Implements ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Extensions.ConfigurationExtensions.html": {
    "href": "api/DNV.Veracity.Services.Api.Extensions.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions",
    "keywords": "Class ConfigurationExtensions Inheritance object ConfigurationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Extensions Assembly: DNV.Veracity.Services.Api.dll Syntax public static class ConfigurationExtensions Methods | Improve this Doc View Source AddSerializer(IServiceCollection, Action<JsonSerializerOptions>?) Declaration public static IServiceCollection AddSerializer(this IServiceCollection services, Action<JsonSerializerOptions>? optionsSetup = null) Parameters Type Name Description IServiceCollection services Action<JsonSerializerOptions> optionsSetup Returns Type Description IServiceCollection"
  },
  "api/DNV.Veracity.Services.Api.Extensions.html": {
    "href": "api/DNV.Veracity.Services.Api.Extensions.html",
    "title": "Namespace DNV.Veracity.Services.Api.Extensions",
    "keywords": "Namespace DNV.Veracity.Services.Api.Extensions Classes ConfigurationExtensions IApiClientExtensions"
  },
  "api/DNV.Veracity.Services.Api.Extensions.IApiClientExtensions.html": {
    "href": "api/DNV.Veracity.Services.Api.Extensions.IApiClientExtensions.html",
    "title": "Class IApiClientExtensions",
    "keywords": "Class IApiClientExtensions Inheritance object IApiClientExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Extensions Assembly: DNV.Veracity.Services.Api.dll Syntax public static class IApiClientExtensions Methods | Improve this Doc View Source DeleteResource(IApiClient, string) Declaration public static Task DeleteResource(this IApiClient client, string requestUri) Parameters Type Name Description IApiClient client string requestUri Returns Type Description Task | Improve this Doc View Source DeserializeFromStream<T>(IApiClient, Stream) Declaration public static Task<T?> DeserializeFromStream<T>(this IApiClient client, Stream stream) Parameters Type Name Description IApiClient client Stream stream Returns Type Description Task<T> Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(IApiClient, string) Declaration public static T? Deserialize<T>(this IApiClient client, string strValue) Parameters Type Name Description IApiClient client string strValue Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DoCallApi(IApiClient, Func<Task<HttpResponseMessage>>, bool, Func<HttpResponseMessage, bool, Task>?) Declaration public static Task<HttpResponseMessage> DoCallApi(this IApiClient client, Func<Task<HttpResponseMessage>> doSend, bool ignoreNotFound = false, Func<HttpResponseMessage, bool, Task>? checkResponse = null) Parameters Type Name Description IApiClient client Func<Task<HttpResponseMessage>> doSend bool ignoreNotFound Func<HttpResponseMessage, bool, Task> checkResponse Returns Type Description Task<HttpResponseMessage> | Improve this Doc View Source DoCallApi<T>(IApiClient, Func<Task<HttpResponseMessage>>, bool, Func<HttpResponseMessage, Task<T>>?, Func<HttpResponseMessage, bool, Task>?) Declaration public static Task<T> DoCallApi<T>(this IApiClient client, Func<Task<HttpResponseMessage>> doSend, bool ignoreNotFound = false, Func<HttpResponseMessage, Task<T>>? buildResult = null, Func<HttpResponseMessage, bool, Task>? checkResponse = null) Parameters Type Name Description IApiClient client Func<Task<HttpResponseMessage>> doSend bool ignoreNotFound Func<HttpResponseMessage, Task<T>> buildResult Func<HttpResponseMessage, bool, Task> checkResponse Returns Type Description Task<T> Type Parameters Name Description T | Improve this Doc View Source GetResource<T>(IApiClient, string, bool) Declaration public static Task<T> GetResource<T>(this IApiClient client, string requestUri, bool isNotFoundNull = true) Parameters Type Name Description IApiClient client string requestUri bool isNotFoundNull Returns Type Description Task<T> Type Parameters Name Description T | Improve this Doc View Source PatchResource(IApiClient, string) Declaration public static Task PatchResource(this IApiClient client, string requestUri) Parameters Type Name Description IApiClient client string requestUri Returns Type Description Task | Improve this Doc View Source PostResource<T>(IApiClient, string, HttpContent, bool) Declaration public static Task<T> PostResource<T>(this IApiClient client, string requestUri, HttpContent content, bool isNotFoundNull = true) Parameters Type Name Description IApiClient client string requestUri HttpContent content bool isNotFoundNull Returns Type Description Task<T> Type Parameters Name Description T | Improve this Doc View Source PutResource(IApiClient, string, HttpContent) Declaration public static Task PutResource(this IApiClient client, string requestUri, HttpContent content) Parameters Type Name Description IApiClient client string requestUri HttpContent content Returns Type Description Task | Improve this Doc View Source PutResource<T>(IApiClient, string, HttpContent, bool) Declaration public static Task<T> PutResource<T>(this IApiClient client, string requestUri, HttpContent content, bool isNotFoundNull = true) Parameters Type Name Description IApiClient client string requestUri HttpContent content bool isNotFoundNull Returns Type Description Task<T> Type Parameters Name Description T | Improve this Doc View Source SerializeToStream<T>(IApiClient, T, Stream) Declaration public static Task SerializeToStream<T>(this IApiClient client, T value, Stream stream) Parameters Type Name Description IApiClient client T value Stream stream Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source Serialize<T>(IApiClient, T) Declaration public static string Serialize<T>(this IApiClient client, T value) Parameters Type Name Description IApiClient client T value Returns Type Description string Type Parameters Name Description T | Improve this Doc View Source ToJsonContent(IApiClient, object) Declaration public static HttpContent ToJsonContent(this IApiClient client, object content) Parameters Type Name Description IApiClient client object content Returns Type Description HttpContent | Improve this Doc View Source ToJsonContent(IApiClient, string) Declaration public static HttpContent ToJsonContent(this IApiClient client, string serializedContent) Parameters Type Name Description IApiClient client string serializedContent Returns Type Description HttpContent | Improve this Doc View Source ToResourceResult(IApiClient, HttpRequestMessage) Declaration public static Task ToResourceResult(this IApiClient client, HttpRequestMessage request) Parameters Type Name Description IApiClient client HttpRequestMessage request Returns Type Description Task | Improve this Doc View Source ToResourceResult<T>(IApiClient, HttpRequestMessage, bool, Func<HttpResponseMessage, Task<T>>?, Func<HttpResponseMessage, bool, Task>?) Declaration public static Task<T> ToResourceResult<T>(this IApiClient client, HttpRequestMessage request, bool isNotFoundNull = false, Func<HttpResponseMessage, Task<T>>? buildResult = null, Func<HttpResponseMessage, bool, Task>? checkResponse = null) Parameters Type Name Description IApiClient client HttpRequestMessage request bool isNotFoundNull Func<HttpResponseMessage, Task<T>> buildResult Func<HttpResponseMessage, bool, Task> checkResponse Returns Type Description Task<T> Type Parameters Name Description T"
  },
  "api/DNV.Veracity.Services.Api.html": {
    "href": "api/DNV.Veracity.Services.Api.html",
    "title": "Namespace DNV.Veracity.Services.Api",
    "keywords": "Namespace DNV.Veracity.Services.Api Classes ApiClientFactory ApiResourceClientBuilder JsonSerializer Interfaces IApiClient ISerializer Enums DataFormat"
  },
  "api/DNV.Veracity.Services.Api.IApiClient.html": {
    "href": "api/DNV.Veracity.Services.Api.IApiClient.html",
    "title": "Interface IApiClient",
    "keywords": "Interface IApiClient Namespace: DNV.Veracity.Services.Api Assembly: DNV.Veracity.Services.Api.dll Syntax public interface IApiClient Properties | Improve this Doc View Source Serializer Declaration ISerializer Serializer { get; } Property Value Type Description ISerializer Methods | Improve this Doc View Source SendAsync(HttpRequestMessage) Declaration Task<HttpResponseMessage> SendAsync(HttpRequestMessage request) Parameters Type Name Description HttpRequestMessage request Returns Type Description Task<HttpResponseMessage> Extension Methods IApiClientExtensions.DeleteResource(IApiClient, string) IApiClientExtensions.Deserialize<T>(IApiClient, string) IApiClientExtensions.DeserializeFromStream<T>(IApiClient, Stream) IApiClientExtensions.DoCallApi(IApiClient, Func<Task<HttpResponseMessage>>, bool, Func<HttpResponseMessage, bool, Task>?) IApiClientExtensions.DoCallApi<T>(IApiClient, Func<Task<HttpResponseMessage>>, bool, Func<HttpResponseMessage, Task<T>>?, Func<HttpResponseMessage, bool, Task>?) IApiClientExtensions.GetResource<T>(IApiClient, string, bool) IApiClientExtensions.PatchResource(IApiClient, string) IApiClientExtensions.PostResource<T>(IApiClient, string, HttpContent, bool) IApiClientExtensions.PutResource(IApiClient, string, HttpContent) IApiClientExtensions.PutResource<T>(IApiClient, string, HttpContent, bool) IApiClientExtensions.Serialize<T>(IApiClient, T) IApiClientExtensions.SerializeToStream<T>(IApiClient, T, Stream) IApiClientExtensions.ToJsonContent(IApiClient, object) IApiClientExtensions.ToJsonContent(IApiClient, string) IApiClientExtensions.ToResourceResult(IApiClient, HttpRequestMessage) IApiClientExtensions.ToResourceResult<T>(IApiClient, HttpRequestMessage, bool, Func<HttpResponseMessage, Task<T>>?, Func<HttpResponseMessage, bool, Task>?) Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.ISerializer.html": {
    "href": "api/DNV.Veracity.Services.Api.ISerializer.html",
    "title": "Interface ISerializer",
    "keywords": "Interface ISerializer Namespace: DNV.Veracity.Services.Api Assembly: DNV.Veracity.Services.Api.dll Syntax public interface ISerializer Properties | Improve this Doc View Source DataFormat Declaration DataFormat DataFormat { get; } Property Value Type Description DataFormat Methods | Improve this Doc View Source DeserializeAsync<T>(Stream, CancellationToken) Declaration Task<T?> DeserializeAsync<T>(Stream stream, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream CancellationToken cancellationToken Returns Type Description Task<T> Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(string) Declaration T? Deserialize<T>(string strValue) Parameters Type Name Description string strValue Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source SerializeAsync<T>(T, Stream, CancellationToken) Declaration Task SerializeAsync<T>(T value, Stream stream, CancellationToken cancellationToken = default) Parameters Type Name Description T value Stream stream CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source Serialize<T>(T) Declaration string Serialize<T>(T value) Parameters Type Name Description T value Returns Type Description string Type Parameters Name Description T Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.JsonSerializer.html": {
    "href": "api/DNV.Veracity.Services.Api.JsonSerializer.html",
    "title": "Class JsonSerializer",
    "keywords": "Class JsonSerializer Inheritance object JsonSerializer Implements ISerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api Assembly: DNV.Veracity.Services.Api.dll Syntax public class JsonSerializer : ISerializer Constructors | Improve this Doc View Source JsonSerializer(IOptions<JsonSerializerOptions>) Declaration public JsonSerializer(IOptions<JsonSerializerOptions> jsonSerializerOptions) Parameters Type Name Description IOptions<JsonSerializerOptions> jsonSerializerOptions Properties | Improve this Doc View Source DataFormat Declaration public DataFormat DataFormat { get; } Property Value Type Description DataFormat Methods | Improve this Doc View Source DeserializeAsync<T>(Stream, CancellationToken) Declaration public Task<T?> DeserializeAsync<T>(Stream stream, CancellationToken cancellationToken) Parameters Type Name Description Stream stream CancellationToken cancellationToken Returns Type Description Task<T> Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(string) Declaration public T? Deserialize<T>(string strValue) Parameters Type Name Description string strValue Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source SerializeAsync<T>(T, Stream, CancellationToken) Declaration public Task SerializeAsync<T>(T value, Stream stream, CancellationToken cancellationToken) Parameters Type Name Description T value Stream stream CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source Serialize<T>(T) Declaration public string Serialize<T>(T value) Parameters Type Name Description T value Returns Type Description string Type Parameters Name Description T Implements ISerializer Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.Administrator.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.Administrator.html",
    "title": "Class Administrator",
    "keywords": "Class Administrator Inheritance object User Administrator Inherited Members User.Name User.Email User.Id User.NumberOfCompanies User.IsEmailVerified User.Language User.Identity User.Phone User.IsPhoneVerified User.ServicesUrl User.CompaniesUrl User.FirstName User.LastName User.CountryCode User.IsManagedAccount User.IsActivated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class Administrator : User Properties | Improve this Doc View Source Roles Declaration public RoleReference[] Roles { get; set; } Property Value Type Description RoleReference[] Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.AdministratorReference.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.AdministratorReference.html",
    "title": "Class AdministratorReference",
    "keywords": "Class AdministratorReference Inheritance object Reference UserReference AdministratorReference Inherited Members UserReference.IsActivated Reference.Identity Reference.Name Reference.Id Reference.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class AdministratorReference : UserReference Properties | Improve this Doc View Source AccessLevelUrl Declaration public string AccessLevelUrl { get; set; } Property Value Type Description string | Improve this Doc View Source ServiceId Declaration public string ServiceId { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.Company.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.Company.html",
    "title": "Class Company",
    "keywords": "Class Company Inheritance object Company Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class Company Properties | Improve this Doc View Source AddressLines Declaration public IEnumerable<string> AddressLines { get; set; } Property Value Type Description IEnumerable<string> | Improve this Doc View Source City Declaration public string City { get; set; } Property Value Type Description string | Improve this Doc View Source Country Declaration public string Country { get; set; } Property Value Type Description string | Improve this Doc View Source CountryCode Declaration public string CountryCode { get; set; } Property Value Type Description string | Improve this Doc View Source Email Declaration public string Email { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source InternalId Declaration public string InternalId { get; set; } Property Value Type Description string | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source NumberOfEmployees Declaration [JsonPropertyName(\"#employees\")] public uint NumberOfEmployees { get; set; } Property Value Type Description uint | Improve this Doc View Source NumberOfRequests Declaration [JsonPropertyName(\"#requests\")] public uint NumberOfRequests { get; set; } Property Value Type Description uint | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description string | Improve this Doc View Source UsersUrl Declaration public string UsersUrl { get; set; } Property Value Type Description string | Improve this Doc View Source ZipCode Declaration public string ZipCode { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.CompanyReference.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.CompanyReference.html",
    "title": "Class CompanyReference",
    "keywords": "Class CompanyReference Inheritance object Reference CompanyReference Inherited Members Reference.Identity Reference.Name Reference.Id Reference.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class CompanyReference : Reference Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.CreateUserReference.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.CreateUserReference.html",
    "title": "Class CreateUserReference",
    "keywords": "Class CreateUserReference Inheritance object Reference UserReference CreateUserReference Inherited Members UserReference.IsActivated Reference.Identity Reference.Name Reference.Id Reference.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class CreateUserReference : UserReference Properties | Improve this Doc View Source ConfirmationUrl Declaration public string ConfirmationUrl { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.html",
    "title": "Namespace DNV.Veracity.Services.Api.Models",
    "keywords": "Namespace DNV.Veracity.Services.Api.Models Classes Administrator AdministratorReference Company CompanyReference CreateUserReference Message MyServiceReference PolicyValidationResult Profile ProfilePicture Reference RoleReference Service ServiceReference Subscription SubscriptionState User UserReference Widget Enums SubscriptionStates"
  },
  "api/DNV.Veracity.Services.Api.Models.Message.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.Message.html",
    "title": "Class Message",
    "keywords": "Class Message Inheritance object Message Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class Message Properties | Improve this Doc View Source ChannelId Declaration public string ChannelId { get; set; } Property Value Type Description string | Improve this Doc View Source Content Declaration public string Content { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source TimeStamp Declaration public string TimeStamp { get; set; } Property Value Type Description string | Improve this Doc View Source Type Declaration public int Type { get; set; } Property Value Type Description int Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.MyServiceReference.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.MyServiceReference.html",
    "title": "Class MyServiceReference",
    "keywords": "Class MyServiceReference Inheritance object Reference ServiceReference MyServiceReference Inherited Members Reference.Identity Reference.Name Reference.Id Reference.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class MyServiceReference : ServiceReference Properties | Improve this Doc View Source ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.PolicyValidationResult.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.PolicyValidationResult.html",
    "title": "Class PolicyValidationResult",
    "keywords": "Class PolicyValidationResult Inheritance object PolicyValidationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class PolicyValidationResult Properties | Improve this Doc View Source Information Declaration public string Information { get; set; } Property Value Type Description string | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description string | Improve this Doc View Source StatusCode Declaration public int StatusCode { get; set; } Property Value Type Description int | Improve this Doc View Source SubCode Declaration public int SubCode { get; set; } Property Value Type Description int | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description string | Improve this Doc View Source ViolatedPolicies Declaration public List<string> ViolatedPolicies { get; set; } Property Value Type Description List<string> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.Profile.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.Profile.html",
    "title": "Class Profile",
    "keywords": "Class Profile Inheritance object Profile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class Profile Properties | Improve this Doc View Source CompaniesUrl Declaration public string CompaniesUrl { get; set; } Property Value Type Description string | Improve this Doc View Source CountryCode Declaration public string CountryCode { get; set; } Property Value Type Description string | Improve this Doc View Source Email Declaration public string Email { get; set; } Property Value Type Description string | Improve this Doc View Source FirstName Declaration public string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Identity Declaration public string Identity { get; set; } Property Value Type Description string | Improve this Doc View Source IsAccountManaged Declaration [JsonPropertyName(\"managedAccount\")] public bool IsAccountManaged { get; set; } Property Value Type Description bool | Improve this Doc View Source IsActivated Declaration [JsonPropertyName(\"activated\")] public bool IsActivated { get; set; } Property Value Type Description bool | Improve this Doc View Source IsEmailVerified Declaration [JsonPropertyName(\"verifiedEmail\")] public bool IsEmailVerified { get; set; } Property Value Type Description bool | Improve this Doc View Source IsPhoneVerified Declaration [JsonPropertyName(\"verifiedPhone\")] public bool IsPhoneVerified { get; set; } Property Value Type Description bool | Improve this Doc View Source Language Declaration public string Language { get; set; } Property Value Type Description string | Improve this Doc View Source LastName Declaration public string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source MessageUrl Declaration public string MessageUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source NumberOfCompanies Declaration [JsonPropertyName(\"#companies\")] public uint NumberOfCompanies { get; set; } Property Value Type Description uint | Improve this Doc View Source Phone Declaration public string Phone { get; set; } Property Value Type Description string | Improve this Doc View Source ProfilePageUrl Declaration public string ProfilePageUrl { get; set; } Property Value Type Description string | Improve this Doc View Source ServicesUrl Declaration public string ServicesUrl { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.ProfilePicture.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.ProfilePicture.html",
    "title": "Class ProfilePicture",
    "keywords": "Class ProfilePicture Inheritance object ProfilePicture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class ProfilePicture Properties | Improve this Doc View Source Image Declaration public byte[] Image { get; set; } Property Value Type Description byte[] | Improve this Doc View Source MimeType Declaration public string MimeType { get; set; } Property Value Type Description string Methods | Improve this Doc View Source AsBase64Image() Declaration public string AsBase64Image() Returns Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.Reference.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.Reference.html",
    "title": "Class Reference",
    "keywords": "Class Reference Inheritance object Reference CompanyReference RoleReference ServiceReference UserReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public abstract class Reference Properties | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Identity Declaration public string Identity { get; set; } Property Value Type Description string | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.RoleReference.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.RoleReference.html",
    "title": "Class RoleReference",
    "keywords": "Class RoleReference Inheritance object Reference RoleReference Inherited Members Reference.Identity Reference.Name Reference.Id Reference.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class RoleReference : Reference Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.Service.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.Service.html",
    "title": "Class Service",
    "keywords": "Class Service Inheritance object Service Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class Service Properties | Improve this Doc View Source ApiAudience Declaration public string ApiAudience { get; set; } Property Value Type Description string | Improve this Doc View Source Category Declaration public string Category { get; set; } Property Value Type Description string | Improve this Doc View Source ChildrenUrl Declaration public string ChildrenUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source IsInherited Declaration [JsonPropertyName(\"inherited\")] public bool IsInherited { get; set; } Property Value Type Description bool | Improve this Doc View Source IsPublic Declaration [JsonPropertyName(\"public\")] public bool IsPublic { get; set; } Property Value Type Description bool | Improve this Doc View Source IsSelfSubscribable Declaration [JsonPropertyName(\"selfSubscribe\")] public bool IsSelfSubscribable { get; set; } Property Value Type Description bool | Improve this Doc View Source LastUpdated Declaration public DateTime? LastUpdated { get; set; } Property Value Type Description DateTime? | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source ParentId Declaration public string ParentId { get; set; } Property Value Type Description string | Improve this Doc View Source ParentUrl Declaration public string ParentUrl { get; set; } Property Value Type Description string | Improve this Doc View Source ServiceOwner Declaration public string ServiceOwner { get; set; } Property Value Type Description string | Improve this Doc View Source ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description string | Improve this Doc View Source ShortDescription Declaration public string ShortDescription { get; set; } Property Value Type Description string | Improve this Doc View Source TermsOfUser Declaration public string TermsOfUser { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.ServiceReference.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.ServiceReference.html",
    "title": "Class ServiceReference",
    "keywords": "Class ServiceReference Inheritance object Reference ServiceReference MyServiceReference Inherited Members Reference.Identity Reference.Name Reference.Id Reference.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class ServiceReference : Reference Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.Subscription.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.Subscription.html",
    "title": "Class Subscription",
    "keywords": "Class Subscription Inheritance object Subscription Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class Subscription Properties | Improve this Doc View Source Role Declaration public RoleReference Role { get; set; } Property Value Type Description RoleReference | Improve this Doc View Source Service Declaration public ServiceReference Service { get; set; } Property Value Type Description ServiceReference | Improve this Doc View Source SubscriptionState Declaration public SubscriptionState SubscriptionState { get; set; } Property Value Type Description SubscriptionState | Improve this Doc View Source User Declaration public UserReference User { get; set; } Property Value Type Description UserReference Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.SubscriptionState.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.SubscriptionState.html",
    "title": "Class SubscriptionState",
    "keywords": "Class SubscriptionState Inheritance object SubscriptionState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class SubscriptionState Properties | Improve this Doc View Source State Declaration public SubscriptionStates State { get; set; } Property Value Type Description SubscriptionStates Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.SubscriptionStates.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.SubscriptionStates.html",
    "title": "Enum SubscriptionStates",
    "keywords": "Enum SubscriptionStates Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public enum SubscriptionStates Fields Name Description Subscribing Extension Methods Throws.IfNull<SubscriptionStates>(SubscriptionStates, string)"
  },
  "api/DNV.Veracity.Services.Api.Models.User.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.User.html",
    "title": "Class User",
    "keywords": "Class User Inheritance object User Administrator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class User Properties | Improve this Doc View Source CompaniesUrl Declaration public string CompaniesUrl { get; set; } Property Value Type Description string | Improve this Doc View Source CountryCode Declaration public string CountryCode { get; set; } Property Value Type Description string | Improve this Doc View Source Email Declaration public string Email { get; set; } Property Value Type Description string | Improve this Doc View Source FirstName Declaration public string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description string | Improve this Doc View Source Identity Declaration public string Identity { get; set; } Property Value Type Description string | Improve this Doc View Source IsActivated Declaration [JsonPropertyName(\"activated\")] public bool IsActivated { get; set; } Property Value Type Description bool | Improve this Doc View Source IsEmailVerified Declaration [JsonPropertyName(\"verifiedEmail\")] public bool IsEmailVerified { get; set; } Property Value Type Description bool | Improve this Doc View Source IsManagedAccount Declaration [JsonPropertyName(\"managedAccount\")] public bool IsManagedAccount { get; set; } Property Value Type Description bool | Improve this Doc View Source IsPhoneVerified Declaration [JsonPropertyName(\"verifiedPhone\")] public bool IsPhoneVerified { get; set; } Property Value Type Description bool | Improve this Doc View Source Language Declaration public string Language { get; set; } Property Value Type Description string | Improve this Doc View Source LastName Declaration public string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source NumberOfCompanies Declaration [JsonPropertyName(\"#companies\")] public uint NumberOfCompanies { get; set; } Property Value Type Description uint | Improve this Doc View Source Phone Declaration public string Phone { get; set; } Property Value Type Description string | Improve this Doc View Source ServicesUrl Declaration public string ServicesUrl { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.UserReference.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.UserReference.html",
    "title": "Class UserReference",
    "keywords": "Class UserReference Inheritance object Reference UserReference AdministratorReference CreateUserReference Inherited Members Reference.Identity Reference.Name Reference.Id Reference.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class UserReference : Reference Properties | Improve this Doc View Source IsActivated Declaration [JsonPropertyName(\"activated\")] public bool IsActivated { get; set; } Property Value Type Description bool Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.Models.Widget.html": {
    "href": "api/DNV.Veracity.Services.Api.Models.Widget.html",
    "title": "Class Widget",
    "keywords": "Class Widget Inheritance object Widget Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.Models Assembly: DNV.Veracity.Services.Api.dll Syntax public class Widget Properties | Improve this Doc View Source Color Declaration public string Color { get; set; } Property Value Type Description string | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Id Declaration public Guid Id { get; set; } Property Value Type Description Guid | Improve this Doc View Source LogoUrl Declaration public string LogoUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description string | Improve this Doc View Source PictogramUrl Declaration public string PictogramUrl { get; set; } Property Value Type Description string | Improve this Doc View Source SequenceNo Declaration public int SequenceNo { get; set; } Property Value Type Description int | Improve this Doc View Source ServiceId Declaration public Guid ServiceId { get; set; } Property Value Type Description Guid | Improve this Doc View Source ShowTitle Declaration public bool ShowTitle { get; set; } Property Value Type Description bool | Improve this Doc View Source SupportsMobile Declaration public bool SupportsMobile { get; set; } Property Value Type Description bool | Improve this Doc View Source Type Declaration public string Type { get; set; } Property Value Type Description string | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.Abstractions.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Abstractions.html",
    "title": "Namespace DNV.Veracity.Services.Api.My.Abstractions",
    "keywords": "Namespace DNV.Veracity.Services.Api.My.Abstractions Interfaces IMyCompanies Exposes methods available for 'Companies' resource within 'My' view point. IMyMessages Exposes methods available for 'Messages' resource within 'My' view point. IMyPolicies Exposes methods available for 'Policies' resource within 'My' view point. IMyProfile Exposes methods available for 'Profile' resource within 'My' view point. IMyServices Exposes methods available for 'Services' resource within 'My' view point. IMyWidgets Exposes methods available for 'Widgets' resource within 'My' view point."
  },
  "api/DNV.Veracity.Services.Api.My.Abstractions.IMyCompanies.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Abstractions.IMyCompanies.html",
    "title": "Interface IMyCompanies",
    "keywords": "Interface IMyCompanies Exposes methods available for 'Companies' resource within 'My' view point. Namespace: DNV.Veracity.Services.Api.My.Abstractions Assembly: DNV.Veracity.Services.Api.My.Abstractions.dll Syntax public interface IMyCompanies Methods | Improve this Doc View Source List() Retrieves a collection of company references for the authenticated user. Declaration Task<IEnumerable<CompanyReference>> List() Returns Type Description Task<IEnumerable<CompanyReference>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.Abstractions.IMyMessages.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Abstractions.IMyMessages.html",
    "title": "Interface IMyMessages",
    "keywords": "Interface IMyMessages Exposes methods available for 'Messages' resource within 'My' view point. Namespace: DNV.Veracity.Services.Api.My.Abstractions Assembly: DNV.Veracity.Services.Api.My.Abstractions.dll Syntax public interface IMyMessages Methods | Improve this Doc View Source Get(string) Retrieves an individual message addressed to the authenticated user. Declaration [Obsolete(\"This endpoint is hidden\")] Task<Message> Get(string messageId) Parameters Type Name Description string messageId The unique identifier for the message to be retrieved. Returns Type Description Task<Message> | Improve this Doc View Source GetUnreadCount() Retrieves the numeric value indicating how many messages have not been marked as read by the authenticated user. Declaration Task<int> GetUnreadCount() Returns Type Description Task<int> | Improve this Doc View Source List(bool) Retrieves a collection of messages addressed to the authenticated user. Declaration Task<IEnumerable<Message>> List(bool includeRead = false) Parameters Type Name Description bool includeRead Set this to true to include messages marked as read. Returns Type Description Task<IEnumerable<Message>> | Improve this Doc View Source MarkAllMessagesAsRead() Marks all the messages as read for the authenticated user. Declaration Task MarkAllMessagesAsRead() Returns Type Description Task Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.Abstractions.IMyPolicies.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Abstractions.IMyPolicies.html",
    "title": "Interface IMyPolicies",
    "keywords": "Interface IMyPolicies Exposes methods available for 'Policies' resource within 'My' view point. Namespace: DNV.Veracity.Services.Api.My.Abstractions Assembly: DNV.Veracity.Services.Api.My.Abstractions.dll Syntax public interface IMyPolicies Methods | Improve this Doc View Source ValidatePolicies(string) Validates all policies for the authenticated user. Declaration Task<PolicyValidationResult> ValidatePolicies(string returnUrl = null) Parameters Type Name Description string returnUrl Returns Type Description Task<PolicyValidationResult> | Improve this Doc View Source ValidatePolicy(string, string, string) Validates an individual policy for the authenticated user. Declaration Task<PolicyValidationResult> ValidatePolicy(string serviceId, string returnUrl = null, string skipSubscriptionCheck = null) Parameters Type Name Description string serviceId string returnUrl string skipSubscriptionCheck Returns Type Description Task<PolicyValidationResult> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.Abstractions.IMyProfile.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Abstractions.IMyProfile.html",
    "title": "Interface IMyProfile",
    "keywords": "Interface IMyProfile Exposes methods available for 'Profile' resource within 'My' view point. Namespace: DNV.Veracity.Services.Api.My.Abstractions Assembly: DNV.Veracity.Services.Api.My.Abstractions.dll Syntax public interface IMyProfile Methods | Improve this Doc View Source Get() Retrieves profile of authenticated user. Declaration Task<Profile> Get() Returns Type Description Task<Profile> | Improve this Doc View Source GetProfilePicture() Retreives the profile picture of the authenticated user if one is set, otherwise a 404 is returned. Declaration Task<ProfilePicture> GetProfilePicture() Returns Type Description Task<ProfilePicture> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.Abstractions.IMyServices.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Abstractions.IMyServices.html",
    "title": "Interface IMyServices",
    "keywords": "Interface IMyServices Exposes methods available for 'Services' resource within 'My' view point. Namespace: DNV.Veracity.Services.Api.My.Abstractions Assembly: DNV.Veracity.Services.Api.My.Abstractions.dll Syntax public interface IMyServices Methods | Improve this Doc View Source List() Retrieves a collection of service references for services the authenticated user is subscribed to. Declaration Task<IEnumerable<MyServiceReference>> List() Returns Type Description Task<IEnumerable<MyServiceReference>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.Abstractions.IMyWidgets.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Abstractions.IMyWidgets.html",
    "title": "Interface IMyWidgets",
    "keywords": "Interface IMyWidgets Exposes methods available for 'Widgets' resource within 'My' view point. Namespace: DNV.Veracity.Services.Api.My.Abstractions Assembly: DNV.Veracity.Services.Api.My.Abstractions.dll Syntax public interface IMyWidgets Methods | Improve this Doc View Source Get() Please use the method List() instead. Declaration [Obsolete(\"This method has been deprecated please use List().\")] Task<IEnumerable<Widget>> Get() Returns Type Description Task<IEnumerable<Widget>> | Improve this Doc View Source List() Retrieve a collection of widgets for the services subscribed to by the authenticated user. Declaration Task<IEnumerable<Widget>> List() Returns Type Description Task<IEnumerable<Widget>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.Extensions.ConfigurationExtensions.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Extensions.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions",
    "keywords": "Class ConfigurationExtensions Inheritance object ConfigurationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.My.Extensions Assembly: DNV.Veracity.Services.Api.My.dll Syntax public static class ConfigurationExtensions Methods | Improve this Doc View Source AddMyCompanies(IServiceCollection, string) Adds an implementation of IMyCompanies to the IServiceCollection. Declaration public static IServiceCollection AddMyCompanies(this IServiceCollection services, string clientConfigurationName = \"companies-my-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddMyMessages(IServiceCollection, string) Adds an implementation of IMyMessages to the IServiceCollection. Declaration public static IServiceCollection AddMyMessages(this IServiceCollection services, string clientConfigurationName = \"messages-my-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddMyPolicies(IServiceCollection, string) Adds an implementation of IMyPolicies to the IServiceCollection. Declaration public static IServiceCollection AddMyPolicies(this IServiceCollection services, string clientConfigurationName = \"policies-my-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddMyProfile(IServiceCollection, string) Adds an implementation of IMyProfile to the IServiceCollection. Declaration public static IServiceCollection AddMyProfile(this IServiceCollection services, string clientConfigurationName = \"profile-my-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddMyServices(IServiceCollection, string) Adds an implementation of IMyServices to the IServiceCollection. Declaration public static IServiceCollection AddMyServices(this IServiceCollection services, string clientConfigurationName = \"services-my-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddMyWidgets(IServiceCollection, string) Adds an implementation of IMyWidgets to the IServiceCollection. Declaration public static IServiceCollection AddMyWidgets(this IServiceCollection services, string clientConfigurationName = \"widgets-my-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained."
  },
  "api/DNV.Veracity.Services.Api.My.Extensions.html": {
    "href": "api/DNV.Veracity.Services.Api.My.Extensions.html",
    "title": "Namespace DNV.Veracity.Services.Api.My.Extensions",
    "keywords": "Namespace DNV.Veracity.Services.Api.My.Extensions Classes ConfigurationExtensions"
  },
  "api/DNV.Veracity.Services.Api.My.html": {
    "href": "api/DNV.Veracity.Services.Api.My.html",
    "title": "Namespace DNV.Veracity.Services.Api.My",
    "keywords": "Namespace DNV.Veracity.Services.Api.My Classes MyCompanies MyMessages MyPolicies MyProfile MyServices"
  },
  "api/DNV.Veracity.Services.Api.My.MyCompanies.html": {
    "href": "api/DNV.Veracity.Services.Api.My.MyCompanies.html",
    "title": "Class MyCompanies",
    "keywords": "Class MyCompanies Inheritance object MyCompanies Implements IMyCompanies Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.My Assembly: DNV.Veracity.Services.Api.My.dll Syntax public class MyCompanies : IMyCompanies Constructors | Improve this Doc View Source MyCompanies(ApiClientFactory) Declaration public MyCompanies(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source List() Retrieves a collection of company references for the authenticated user. Declaration public Task<IEnumerable<CompanyReference>> List() Returns Type Description Task<IEnumerable<CompanyReference>> Implements IMyCompanies Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.MyMessages.html": {
    "href": "api/DNV.Veracity.Services.Api.My.MyMessages.html",
    "title": "Class MyMessages",
    "keywords": "Class MyMessages Inheritance object MyMessages Implements IMyMessages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.My Assembly: DNV.Veracity.Services.Api.My.dll Syntax public class MyMessages : IMyMessages Constructors | Improve this Doc View Source MyMessages(ApiClientFactory) Declaration public MyMessages(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source Get(string) Retrieves an individual message addressed to the authenticated user. Declaration public Task<Message> Get(string messageId) Parameters Type Name Description string messageId The unique identifier for the message to be retrieved. Returns Type Description Task<Message> | Improve this Doc View Source GetUnreadCount() Retrieves the numeric value indicating how many messages have not been marked as read by the authenticated user. Declaration public Task<int> GetUnreadCount() Returns Type Description Task<int> | Improve this Doc View Source List(bool) Retrieves a collection of messages addressed to the authenticated user. Declaration public Task<IEnumerable<Message>> List(bool includeRead = false) Parameters Type Name Description bool includeRead Set this to true to include messages marked as read. Returns Type Description Task<IEnumerable<Message>> | Improve this Doc View Source MarkAllMessagesAsRead() Marks all the messages as read for the authenticated user. Declaration public Task MarkAllMessagesAsRead() Returns Type Description Task Implements IMyMessages Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.MyPolicies.html": {
    "href": "api/DNV.Veracity.Services.Api.My.MyPolicies.html",
    "title": "Class MyPolicies",
    "keywords": "Class MyPolicies Inheritance object MyPolicies Implements IMyPolicies Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.My Assembly: DNV.Veracity.Services.Api.My.dll Syntax public class MyPolicies : IMyPolicies Constructors | Improve this Doc View Source MyPolicies(ApiClientFactory) Declaration public MyPolicies(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source BuildResult<T>(HttpResponseMessage) Declaration protected Task<T> BuildResult<T>(HttpResponseMessage response) Parameters Type Name Description HttpResponseMessage response Returns Type Description Task<T> Type Parameters Name Description T | Improve this Doc View Source CheckResponse(HttpResponseMessage, bool) Declaration protected Task CheckResponse(HttpResponseMessage response, bool ignoreNotFound = false) Parameters Type Name Description HttpResponseMessage response bool ignoreNotFound Returns Type Description Task | Improve this Doc View Source ValidatePolicies(string) Validates all policies for the authenticated user. Declaration public Task<PolicyValidationResult> ValidatePolicies(string returnUrl = null) Parameters Type Name Description string returnUrl Returns Type Description Task<PolicyValidationResult> | Improve this Doc View Source ValidatePolicy(string, string, string) Validates an individual policy for the authenticated user. Declaration public Task<PolicyValidationResult> ValidatePolicy(string serviceId, string returnUrl = null, string skipSubscriptionCheck = null) Parameters Type Name Description string serviceId string returnUrl string skipSubscriptionCheck Returns Type Description Task<PolicyValidationResult> Implements IMyPolicies Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.MyProfile.html": {
    "href": "api/DNV.Veracity.Services.Api.My.MyProfile.html",
    "title": "Class MyProfile",
    "keywords": "Class MyProfile Inheritance object MyProfile Implements IMyProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.My Assembly: DNV.Veracity.Services.Api.My.dll Syntax public class MyProfile : IMyProfile Constructors | Improve this Doc View Source MyProfile(ApiClientFactory) Declaration public MyProfile(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source Get() Retrieves profile of authenticated user. Declaration public Task<Profile> Get() Returns Type Description Task<Profile> | Improve this Doc View Source GetProfilePicture() Retreives the profile picture of the authenticated user if one is set, otherwise a 404 is returned. Declaration public Task<ProfilePicture> GetProfilePicture() Returns Type Description Task<ProfilePicture> Implements IMyProfile Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.My.MyServices.html": {
    "href": "api/DNV.Veracity.Services.Api.My.MyServices.html",
    "title": "Class MyServices",
    "keywords": "Class MyServices Inheritance object MyServices Implements IMyServices Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.My Assembly: DNV.Veracity.Services.Api.My.dll Syntax public class MyServices : IMyServices Constructors | Improve this Doc View Source MyServices(ApiClientFactory) Declaration public MyServices(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source List() Retrieves a collection of service references for services the authenticated user is subscribed to. Declaration public Task<IEnumerable<MyServiceReference>> List() Returns Type Description Task<IEnumerable<MyServiceReference>> Implements IMyServices Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.html",
    "title": "Namespace DNV.Veracity.Services.Api.This.Abstractions",
    "keywords": "Namespace DNV.Veracity.Services.Api.This.Abstractions Interfaces IThisAdministrators Exposes methods available for 'Administrators' resource within 'This' view point. IThisServices Exposes methods available for 'Services' resource within 'This' view point. IThisSubscribers Exposes methods available for 'Subscribers' resource within 'This' view point. IThisUsers Exposes methods available for 'Users' resource within 'This' view point."
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.IThisAdministrators.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.IThisAdministrators.html",
    "title": "Interface IThisAdministrators",
    "keywords": "Interface IThisAdministrators Exposes methods available for 'Administrators' resource within 'This' view point. Namespace: DNV.Veracity.Services.Api.This.Abstractions Assembly: DNV.Veracity.Services.Api.This.Abstractions.dll Syntax public interface IThisAdministrators Methods | Improve this Doc View Source Get(string) Retrieves an individual administrator for the authenticated service. Declaration Task<Administrator> Get(string userId) Parameters Type Name Description string userId Returns Type Description Task<Administrator> | Improve this Doc View Source List(int, int) Retrieves a paginated collection of administrator references for the authenticated service. Declaration Task<IEnumerable<AdministratorReference>> List(int page, int pageSize) Parameters Type Name Description int page int pageSize Returns Type Description Task<IEnumerable<AdministratorReference>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.IThisServices.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.IThisServices.html",
    "title": "Interface IThisServices",
    "keywords": "Interface IThisServices Exposes methods available for 'Services' resource within 'This' view point. Namespace: DNV.Veracity.Services.Api.This.Abstractions Assembly: DNV.Veracity.Services.Api.This.Abstractions.dll Syntax public interface IThisServices Methods | Improve this Doc View Source AddSubscription(string, string, SubscriptionOptions) Add a subscription to the authenticated service or nested services. Declaration Task AddSubscription(string serviceId, string userId, SubscriptionOptions options) Parameters Type Name Description string serviceId string userId SubscriptionOptions options Returns Type Description Task | Improve this Doc View Source GetAdministrator(string, string) Retrieve an individual administrator reference to a administrator of the authenticated service or nested services. Declaration Task<Administrator> GetAdministrator(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task<Administrator> | Improve this Doc View Source GetProfilePicture(string, string) Retreives the profile picture of a user if one is set, otherwise a 404 is returned. Declaration Task<ProfilePicture> GetProfilePicture(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task<ProfilePicture> | Improve this Doc View Source GetSubscriber(string, string) Retrieve an individual user reference to a user which has a subscription to a specified service. Declaration Task<UserReference> GetSubscriber(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task<UserReference> | Improve this Doc View Source List(int, int) Retrieve a paginated collection of services the authenticated service has access to. Declaration Task<IEnumerable<ServiceReference>> List(int page, int pageSize) Parameters Type Name Description int page int pageSize Returns Type Description Task<IEnumerable<ServiceReference>> | Improve this Doc View Source ListAdministrators(string, int, int) Retrieve a paginated collection of administrator references of administrators for a specified service. Declaration Task<IEnumerable<AdministratorReference>> ListAdministrators(string serviceId, int page, int pageSize) Parameters Type Name Description string serviceId int page int pageSize Returns Type Description Task<IEnumerable<AdministratorReference>> | Improve this Doc View Source ListSubscribers(string, int, int) Retrieve a paginated collection of user references of users subscribed to a specified service. Declaration Task<IEnumerable<UserReference>> ListSubscribers(string serviceId, int page, int pageSize) Parameters Type Name Description string serviceId int page int pageSize Returns Type Description Task<IEnumerable<UserReference>> | Improve this Doc View Source NotifySubscribers(string, string, NotificationOptions) Send a notification to users subscribed to the authenticated service or nested service. Declaration Task NotifySubscribers(string serviceId, string channelId, NotificationOptions options) Parameters Type Name Description string serviceId string channelId NotificationOptions options Returns Type Description Task | Improve this Doc View Source RemoveSubscription(string, string) Remove a user subscription for a user and the authenticated service or a nested service. Declaration Task RemoveSubscription(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task | Improve this Doc View Source VerifySubscriberPolicy(string, string, string) Verify a policy between a service and user. Declaration Task<PolicyValidationResult> VerifySubscriberPolicy(string serviceId, string userId, string returnUrl = null) Parameters Type Name Description string serviceId string userId string returnUrl Returns Type Description Task<PolicyValidationResult> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.IThisSubscribers.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.IThisSubscribers.html",
    "title": "Interface IThisSubscribers",
    "keywords": "Interface IThisSubscribers Exposes methods available for 'Subscribers' resource within 'This' view point. Namespace: DNV.Veracity.Services.Api.This.Abstractions Assembly: DNV.Veracity.Services.Api.This.Abstractions.dll Syntax public interface IThisSubscribers Methods | Improve this Doc View Source Add(string, SubscriptionOptions) Add a subscription to the authenticated service for a specified user. Declaration Task Add(string userId, SubscriptionOptions options) Parameters Type Name Description string userId SubscriptionOptions options Returns Type Description Task | Improve this Doc View Source Get(string) Retrieve a user reference for a user subscribed to the authenticated service. Declaration Task<UserReference> Get(string userId) Parameters Type Name Description string userId Returns Type Description Task<UserReference> | Improve this Doc View Source List(int, int) Retrieve a paginated collection of user references to users subscribed to the authenticated service. Declaration Task<IEnumerable<UserReference>> List(int page, int pageSize) Parameters Type Name Description int page int pageSize Returns Type Description Task<IEnumerable<UserReference>> | Improve this Doc View Source Remove(string) Remove a user subscription to the authenticated service by specified user. Declaration Task Remove(string userId) Parameters Type Name Description string userId Returns Type Description Task Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.IThisUsers.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.IThisUsers.html",
    "title": "Interface IThisUsers",
    "keywords": "Interface IThisUsers Exposes methods available for 'Users' resource within 'This' view point. Namespace: DNV.Veracity.Services.Api.This.Abstractions Assembly: DNV.Veracity.Services.Api.This.Abstractions.dll Syntax public interface IThisUsers Methods | Improve this Doc View Source Create(CreateUserOptions) Create and affiliate a user with the authenticated company. Declaration Task<CreateUserReference> Create(CreateUserOptions options) Parameters Type Name Description CreateUserOptions options Returns Type Description Task<CreateUserReference> | Improve this Doc View Source Create(params CreateUserOptions[]) Create and affiliate a collection of users with the authenticated company. Declaration Task<IEnumerable<CreateUserReference>> Create(params CreateUserOptions[] options) Parameters Type Name Description CreateUserOptions[] options Returns Type Description Task<IEnumerable<CreateUserReference>> | Improve this Doc View Source Resolve(string) Retrieves a collection of user references for users with a specified email value. Declaration Task<IEnumerable<UserReference>> Resolve(string email) Parameters Type Name Description string email Returns Type Description Task<IEnumerable<UserReference>> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.Models.CreateUserOptions.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.Models.CreateUserOptions.html",
    "title": "Class CreateUserOptions",
    "keywords": "Class CreateUserOptions Inheritance object CreateUserOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This.Abstractions.Models Assembly: DNV.Veracity.Services.Api.This.Abstractions.dll Syntax public class CreateUserOptions Properties | Improve this Doc View Source Email Declaration public string Email { get; set; } Property Value Type Description string | Improve this Doc View Source FirstName Declaration public string FirstName { get; set; } Property Value Type Description string | Improve this Doc View Source LastName Declaration public string LastName { get; set; } Property Value Type Description string | Improve this Doc View Source Options Specify additional registration options, this is not mandatory Declaration public RegistrationOptions Options { get; set; } Property Value Type Description RegistrationOptions Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.Models.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.Models.html",
    "title": "Namespace DNV.Veracity.Services.Api.This.Abstractions.Models",
    "keywords": "Namespace DNV.Veracity.Services.Api.This.Abstractions.Models Classes CreateUserOptions NotificationOptions RegistrationOptions SubscriptionOptions"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.Models.NotificationOptions.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.Models.NotificationOptions.html",
    "title": "Class NotificationOptions",
    "keywords": "Class NotificationOptions Inheritance object NotificationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This.Abstractions.Models Assembly: DNV.Veracity.Services.Api.This.Abstractions.dll Syntax public class NotificationOptions Properties | Improve this Doc View Source ChannelId Declaration public string ChannelId { get; set; } Property Value Type Description string | Improve this Doc View Source HighPriority Declaration public bool HighPriority { get; set; } Property Value Type Description bool | Improve this Doc View Source Message Declaration public Message Message { get; set; } Property Value Type Description Message | Improve this Doc View Source Recipients Declaration public string[] Recipients { get; set; } Property Value Type Description string[] Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.Models.RegistrationOptions.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.Models.RegistrationOptions.html",
    "title": "Class RegistrationOptions",
    "keywords": "Class RegistrationOptions Inheritance object RegistrationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This.Abstractions.Models Assembly: DNV.Veracity.Services.Api.This.Abstractions.dll Syntax public class RegistrationOptions Properties | Improve this Doc View Source ContactEmail The email address of the user or service that creates the new user account Declaration public string ContactEmail { get; set; } Property Value Type Description string | Improve this Doc View Source ContactName The Name of the user or service that creates the new user account Declaration public string ContactName { get; set; } Property Value Type Description string | Improve this Doc View Source CreateSubscription Make the service create a default subscription for the newly created user Declaration public bool? CreateSubscription { get; set; } Property Value Type Description bool? | Improve this Doc View Source ReturnUrl Specify the location to send the newly created user to after the registration process is completed Declaration public string ReturnUrl { get; set; } Property Value Type Description string | Improve this Doc View Source Role Specify the accessLevel/role the user should have with the new subscription. Optional Declaration public string Role { get; set; } Property Value Type Description string | Improve this Doc View Source SendMail Set this to false to take responsibility of sending the registration email to the user. Declaration public bool? SendMail { get; set; } Property Value Type Description bool? | Improve this Doc View Source ServiceId The service id to create subscription for Declaration public string ServiceId { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Abstractions.Models.SubscriptionOptions.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Abstractions.Models.SubscriptionOptions.html",
    "title": "Class SubscriptionOptions",
    "keywords": "Class SubscriptionOptions Inheritance object SubscriptionOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This.Abstractions.Models Assembly: DNV.Veracity.Services.Api.This.Abstractions.dll Syntax public class SubscriptionOptions Properties | Improve this Doc View Source Role Declaration public string Role { get; set; } Property Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.Extensions.ConfigurationExtensions.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Extensions.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions",
    "keywords": "Class ConfigurationExtensions Inheritance object ConfigurationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This.Extensions Assembly: DNV.Veracity.Services.Api.This.dll Syntax public static class ConfigurationExtensions Methods | Improve this Doc View Source AddThisAdministrators(IServiceCollection, string) Adds an implementation of IThisAdministrators to the IServiceCollection. Declaration public static IServiceCollection AddThisAdministrators(this IServiceCollection services, string clientConfigurationName = \"administrators-this-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddThisServices(IServiceCollection, string) Adds an implementation of IThisServices to the IServiceCollection. Declaration public static IServiceCollection AddThisServices(this IServiceCollection services, string clientConfigurationName = \"services-this-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddThisSubscribers(IServiceCollection, string) Adds an implementation of IThisSubscribers to the IServiceCollection. Declaration public static IServiceCollection AddThisSubscribers(this IServiceCollection services, string clientConfigurationName = \"subscribers-this-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained. | Improve this Doc View Source AddThisUsers(IServiceCollection, string) Adds an implementation of IThisUsers to the IServiceCollection. Declaration public static IServiceCollection AddThisUsers(this IServiceCollection services, string clientConfigurationName = \"users-this-api\") Parameters Type Name Description IServiceCollection services The IServiceCollection to add the IHttpClientFactory instance to. string clientConfigurationName The name of the configuration section to retrieve OAuthHttpClientOptions from. Returns Type Description IServiceCollection The IServiceCollection so that additional calls can be chained."
  },
  "api/DNV.Veracity.Services.Api.This.Extensions.html": {
    "href": "api/DNV.Veracity.Services.Api.This.Extensions.html",
    "title": "Namespace DNV.Veracity.Services.Api.This.Extensions",
    "keywords": "Namespace DNV.Veracity.Services.Api.This.Extensions Classes ConfigurationExtensions"
  },
  "api/DNV.Veracity.Services.Api.This.html": {
    "href": "api/DNV.Veracity.Services.Api.This.html",
    "title": "Namespace DNV.Veracity.Services.Api.This",
    "keywords": "Namespace DNV.Veracity.Services.Api.This Classes ThisAdministrators ThisServices ThisSubscribers ThisUsers"
  },
  "api/DNV.Veracity.Services.Api.This.ThisAdministrators.html": {
    "href": "api/DNV.Veracity.Services.Api.This.ThisAdministrators.html",
    "title": "Class ThisAdministrators",
    "keywords": "Class ThisAdministrators Inheritance object ThisAdministrators Implements IThisAdministrators Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This Assembly: DNV.Veracity.Services.Api.This.dll Syntax public class ThisAdministrators : IThisAdministrators Constructors | Improve this Doc View Source ThisAdministrators(ApiClientFactory) Declaration public ThisAdministrators(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source Get(string) Retrieves an individual administrator for the authenticated service. Declaration public Task<Administrator> Get(string userId) Parameters Type Name Description string userId Returns Type Description Task<Administrator> | Improve this Doc View Source List(int, int) Retrieves a paginated collection of administrator references for the authenticated service. Declaration public Task<IEnumerable<AdministratorReference>> List(int page, int pageSize) Parameters Type Name Description int page int pageSize Returns Type Description Task<IEnumerable<AdministratorReference>> Implements IThisAdministrators Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.ThisServices.html": {
    "href": "api/DNV.Veracity.Services.Api.This.ThisServices.html",
    "title": "Class ThisServices",
    "keywords": "Class ThisServices Inheritance object ThisServices Implements IThisServices Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This Assembly: DNV.Veracity.Services.Api.This.dll Syntax public class ThisServices : IThisServices Constructors | Improve this Doc View Source ThisServices(ApiClientFactory) Declaration public ThisServices(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source AddSubscription(string, string, SubscriptionOptions) Add a subscription to the authenticated service or nested services. Declaration public Task AddSubscription(string serviceId, string userId, SubscriptionOptions options) Parameters Type Name Description string serviceId string userId SubscriptionOptions options Returns Type Description Task | Improve this Doc View Source GetAdministrator(string, string) Retrieve an individual administrator reference to a administrator of the authenticated service or nested services. Declaration public Task<Administrator> GetAdministrator(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task<Administrator> | Improve this Doc View Source GetProfilePicture(string, string) Retreives the profile picture of a user if one is set, otherwise a 404 is returned. Declaration public Task<ProfilePicture> GetProfilePicture(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task<ProfilePicture> | Improve this Doc View Source GetSubscriber(string, string) Retrieve an individual user reference to a user which has a subscription to a specified service. Declaration public Task<UserReference> GetSubscriber(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task<UserReference> | Improve this Doc View Source List(int, int) Retrieve a paginated collection of services the authenticated service has access to. Declaration public Task<IEnumerable<ServiceReference>> List(int page, int pageSize) Parameters Type Name Description int page int pageSize Returns Type Description Task<IEnumerable<ServiceReference>> | Improve this Doc View Source ListAdministrators(string, int, int) Retrieve a paginated collection of administrator references of administrators for a specified service. Declaration public Task<IEnumerable<AdministratorReference>> ListAdministrators(string serviceId, int page, int pageSize) Parameters Type Name Description string serviceId int page int pageSize Returns Type Description Task<IEnumerable<AdministratorReference>> | Improve this Doc View Source ListSubscribers(string, int, int) Retrieve a paginated collection of user references of users subscribed to a specified service. Declaration public Task<IEnumerable<UserReference>> ListSubscribers(string serviceId, int page, int pageSize) Parameters Type Name Description string serviceId int page int pageSize Returns Type Description Task<IEnumerable<UserReference>> | Improve this Doc View Source NotifySubscribers(string, string, NotificationOptions) Send a notification to users subscribed to the authenticated service or nested service. Declaration public Task NotifySubscribers(string serviceId, string channelId, NotificationOptions options) Parameters Type Name Description string serviceId string channelId NotificationOptions options Returns Type Description Task | Improve this Doc View Source RemoveSubscription(string, string) Remove a user subscription for a user and the authenticated service or a nested service. Declaration public Task RemoveSubscription(string serviceId, string userId) Parameters Type Name Description string serviceId string userId Returns Type Description Task | Improve this Doc View Source VerifySubscriberPolicy(string, string, string) Verify a policy between a service and user. Declaration public Task<PolicyValidationResult> VerifySubscriberPolicy(string serviceId, string userId, string returnUrl = null) Parameters Type Name Description string serviceId string userId string returnUrl Returns Type Description Task<PolicyValidationResult> Implements IThisServices Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.ThisSubscribers.html": {
    "href": "api/DNV.Veracity.Services.Api.This.ThisSubscribers.html",
    "title": "Class ThisSubscribers",
    "keywords": "Class ThisSubscribers Inheritance object ThisSubscribers Implements IThisSubscribers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This Assembly: DNV.Veracity.Services.Api.This.dll Syntax public class ThisSubscribers : IThisSubscribers Constructors | Improve this Doc View Source ThisSubscribers(ApiClientFactory) Declaration public ThisSubscribers(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source Add(string, SubscriptionOptions) Add a subscription to the authenticated service for a specified user. Declaration public Task Add(string userId, SubscriptionOptions options) Parameters Type Name Description string userId SubscriptionOptions options Returns Type Description Task | Improve this Doc View Source Get(string) Retrieve a user reference for a user subscribed to the authenticated service. Declaration public Task<UserReference> Get(string userId) Parameters Type Name Description string userId Returns Type Description Task<UserReference> | Improve this Doc View Source List(int, int) Retrieve a paginated collection of user references to users subscribed to the authenticated service. Declaration public Task<IEnumerable<UserReference>> List(int page, int pageSize) Parameters Type Name Description int page int pageSize Returns Type Description Task<IEnumerable<UserReference>> | Improve this Doc View Source Remove(string) Remove a user subscription to the authenticated service by specified user. Declaration public Task Remove(string userId) Parameters Type Name Description string userId Returns Type Description Task Implements IThisSubscribers Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Veracity.Services.Api.This.ThisUsers.html": {
    "href": "api/DNV.Veracity.Services.Api.This.ThisUsers.html",
    "title": "Class ThisUsers",
    "keywords": "Class ThisUsers Inheritance object ThisUsers Implements IThisUsers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Veracity.Services.Api.This Assembly: DNV.Veracity.Services.Api.This.dll Syntax public class ThisUsers : IThisUsers Constructors | Improve this Doc View Source ThisUsers(ApiClientFactory) Declaration public ThisUsers(ApiClientFactory apiClientFactory) Parameters Type Name Description ApiClientFactory apiClientFactory Methods | Improve this Doc View Source Create(CreateUserOptions) Create and affiliate a user with the authenticated company. Declaration public Task<CreateUserReference> Create(CreateUserOptions options) Parameters Type Name Description CreateUserOptions options Returns Type Description Task<CreateUserReference> | Improve this Doc View Source Create(params CreateUserOptions[]) Create and affiliate a collection of users with the authenticated company. Declaration public Task<IEnumerable<CreateUserReference>> Create(params CreateUserOptions[] options) Parameters Type Name Description CreateUserOptions[] options Returns Type Description Task<IEnumerable<CreateUserReference>> | Improve this Doc View Source Resolve(string) Retrieves a collection of user references for users with a specified email value. Declaration public Task<IEnumerable<UserReference>> Resolve(string email) Parameters Type Name Description string email Returns Type Description Task<IEnumerable<UserReference>> Implements IThisUsers Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Web.Security.CSP.ContentSecurityPolicy.html": {
    "href": "api/DNV.Web.Security.CSP.ContentSecurityPolicy.html",
    "title": "Class ContentSecurityPolicy",
    "keywords": "Class ContentSecurityPolicy Inheritance object ContentSecurityPolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Security.CSP Assembly: DNV.Web.Security.dll Syntax public class ContentSecurityPolicy Fields | Improve this Doc View Source Name Declaration public static readonly string Name Field Value Type Description string Methods | Improve this Doc View Source CreateDefault(string?) Declaration public static ContentSecurityPolicy CreateDefault(string? nonce = null) Parameters Type Name Description string nonce Returns Type Description ContentSecurityPolicy | Improve this Doc View Source GetDirective(string) Declaration public Directive GetDirective(string directive) Parameters Type Name Description string directive Returns Type Description Directive | Improve this Doc View Source GetValue() Declaration public string GetValue() Returns Type Description string | Improve this Doc View Source SetDirective(string, Directive) Declaration public void SetDirective(string directive, Directive values) Parameters Type Name Description string directive Directive values | Improve this Doc View Source SetDirective(string, string) Declaration public void SetDirective(string directive, string value) Parameters Type Name Description string directive string value Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Web.Security.CSP.Directive.html": {
    "href": "api/DNV.Web.Security.CSP.Directive.html",
    "title": "Class Directive",
    "keywords": "Class Directive Inheritance object HashSet<string> Directive Implements IReadOnlyCollection<string> ISet<string> ICollection<string> IEnumerable<string> IEnumerable IDeserializationCallback ISerializable Inherited Members HashSet<string>.Add(string) HashSet<string>.Clear() HashSet<string>.Contains(string) HashSet<string>.CopyTo(string[]) HashSet<string>.CopyTo(string[], int) HashSet<string>.CopyTo(string[], int, int) HashSet<string>.CreateSetComparer() HashSet<string>.EnsureCapacity(int) HashSet<string>.ExceptWith(IEnumerable<string>) HashSet<string>.GetEnumerator() HashSet<string>.GetObjectData(SerializationInfo, StreamingContext) HashSet<string>.IntersectWith(IEnumerable<string>) HashSet<string>.IsProperSubsetOf(IEnumerable<string>) HashSet<string>.IsProperSupersetOf(IEnumerable<string>) HashSet<string>.IsSubsetOf(IEnumerable<string>) HashSet<string>.IsSupersetOf(IEnumerable<string>) HashSet<string>.OnDeserialization(object) HashSet<string>.Overlaps(IEnumerable<string>) HashSet<string>.Remove(string) HashSet<string>.RemoveWhere(Predicate<string>) HashSet<string>.SetEquals(IEnumerable<string>) HashSet<string>.SymmetricExceptWith(IEnumerable<string>) HashSet<string>.TrimExcess() HashSet<string>.TryGetValue(string, out string) HashSet<string>.UnionWith(IEnumerable<string>) HashSet<string>.Comparer HashSet<string>.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Security.CSP Assembly: DNV.Web.Security.dll Syntax public class Directive : HashSet<string>, IReadOnlyCollection<string>, ISet<string>, ICollection<string>, IEnumerable<string>, IEnumerable, IDeserializationCallback, ISerializable Constructors | Improve this Doc View Source Directive() Declaration public Directive() | Improve this Doc View Source Directive(string) Declaration public Directive(string value) Parameters Type Name Description string value Implements IReadOnlyCollection<T> ISet<T> ICollection<T> IEnumerable<T> IEnumerable IDeserializationCallback ISerializable Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Web.Security.CSP.DirectiveNames.html": {
    "href": "api/DNV.Web.Security.CSP.DirectiveNames.html",
    "title": "Class DirectiveNames",
    "keywords": "Class DirectiveNames Inheritance object DirectiveNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Security.CSP Assembly: DNV.Web.Security.dll Syntax public class DirectiveNames Fields | Improve this Doc View Source ConnectSrc Declaration public static readonly string ConnectSrc Field Value Type Description string | Improve this Doc View Source DefaultSrc Declaration public static readonly string DefaultSrc Field Value Type Description string | Improve this Doc View Source FontSrc Declaration public static readonly string FontSrc Field Value Type Description string | Improve this Doc View Source FrameSrc Declaration public static readonly string FrameSrc Field Value Type Description string | Improve this Doc View Source ImgSrc Declaration public static readonly string ImgSrc Field Value Type Description string | Improve this Doc View Source MediaSrc Declaration public static readonly string MediaSrc Field Value Type Description string | Improve this Doc View Source ObjectSrc Declaration public static readonly string ObjectSrc Field Value Type Description string | Improve this Doc View Source ScriptSrc Declaration public static readonly string ScriptSrc Field Value Type Description string | Improve this Doc View Source StyleSrc Declaration public static readonly string StyleSrc Field Value Type Description string | Improve this Doc View Source WorkerSrc Declaration public static readonly string WorkerSrc Field Value Type Description string Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Web.Security.CSP.html": {
    "href": "api/DNV.Web.Security.CSP.html",
    "title": "Namespace DNV.Web.Security.CSP",
    "keywords": "Namespace DNV.Web.Security.CSP Classes ContentSecurityPolicy Directive DirectiveNames"
  },
  "api/DNV.Web.Security.html": {
    "href": "api/DNV.Web.Security.html",
    "title": "Namespace DNV.Web.Security",
    "keywords": "Namespace DNV.Web.Security Classes HttpContextExtensions WebSecurityMiddlewareExtensions Default Response Headers extensions to IApplicationBuilder."
  },
  "api/DNV.Web.Security.HttpContextExtensions.html": {
    "href": "api/DNV.Web.Security.HttpContextExtensions.html",
    "title": "Class HttpContextExtensions",
    "keywords": "Class HttpContextExtensions Inheritance object HttpContextExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Security Assembly: DNV.Web.Security.dll Syntax public static class HttpContextExtensions Methods | Improve this Doc View Source CreateNonce() Declaration public static string CreateNonce() Returns Type Description string | Improve this Doc View Source Set(IHeaderDictionary, Dictionary<string, string>) Declaration public static void Set(this IHeaderDictionary source, Dictionary<string, string> newHeaders) Parameters Type Name Description IHeaderDictionary source Dictionary<string, string> newHeaders | Improve this Doc View Source Set(IHeaderDictionary, string, string) Declaration public static void Set(this IHeaderDictionary source, string name, string value) Parameters Type Name Description IHeaderDictionary source string name string value | Improve this Doc View Source SetDefault(IHeaderDictionary, string) Declaration public static void SetDefault(this IHeaderDictionary source, string csp) Parameters Type Name Description IHeaderDictionary source string csp | Improve this Doc View Source SetDefaultForApi(IHeaderDictionary) Declaration public static void SetDefaultForApi(this IHeaderDictionary source) Parameters Type Name Description IHeaderDictionary source | Improve this Doc View Source SetDefaultSecurityHeaders(HttpResponse, Func<HttpRequest, bool>?, Func<HttpRequest, bool>?) Declaration public static HttpResponse SetDefaultSecurityHeaders(this HttpResponse source, Func<HttpRequest, bool>? apiPredicate = null, Func<HttpRequest, bool>? exceptionPredicate = null) Parameters Type Name Description HttpResponse source Func<HttpRequest, bool> apiPredicate Func<HttpRequest, bool> exceptionPredicate Returns Type Description HttpResponse | Improve this Doc View Source SetSecurityHeaders(HttpResponse, Func<HttpContext, string>, Func<HttpRequest, bool>?, Func<HttpRequest, bool>?) Declaration public static HttpResponse SetSecurityHeaders(this HttpResponse source, Func<HttpContext, string> setupCSP, Func<HttpRequest, bool>? apiPredicate = null, Func<HttpRequest, bool>? exceptionPredicate = null) Parameters Type Name Description HttpResponse source Func<HttpContext, string> setupCSP Func<HttpRequest, bool> apiPredicate Func<HttpRequest, bool> exceptionPredicate Returns Type Description HttpResponse"
  },
  "api/DNV.Web.Security.PermissionsPolicies.Feature.html": {
    "href": "api/DNV.Web.Security.PermissionsPolicies.Feature.html",
    "title": "Class Feature",
    "keywords": "Class Feature Inheritance object Feature Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.Web.Security.PermissionsPolicies Assembly: DNV.Web.Security.dll Syntax public class Feature Properties | Improve this Doc View Source Enabled Declaration public bool Enabled { get; } Property Value Type Description bool | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description string Methods | Improve this Doc View Source Disable() Declaration public void Disable() | Improve this Doc View Source Enable() Declaration public FeatureBuilder Enable() Returns Type Description FeatureBuilder | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Web.Security.PermissionsPolicies.FeatureBuilder.html": {
    "href": "api/DNV.Web.Security.PermissionsPolicies.FeatureBuilder.html",
    "title": "Class FeatureBuilder",
    "keywords": "Class FeatureBuilder Inheritance object FeatureBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.Web.Security.PermissionsPolicies Assembly: DNV.Web.Security.dll Syntax public class FeatureBuilder Methods | Improve this Doc View Source Custom(string) Declaration public FeatureBuilder Custom(string url) Parameters Type Name Description string url Returns Type Description FeatureBuilder | Improve this Doc View Source Self() Declaration public FeatureBuilder Self() Returns Type Description FeatureBuilder | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Web.Security.PermissionsPolicies.FeatureNames.html": {
    "href": "api/DNV.Web.Security.PermissionsPolicies.FeatureNames.html",
    "title": "Class FeatureNames",
    "keywords": "Class FeatureNames Inheritance object FeatureNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Security.PermissionsPolicies Assembly: DNV.Web.Security.dll Syntax public static class FeatureNames Fields | Improve this Doc View Source Accelerometer Declaration public const string Accelerometer = \"accelerometer\" Field Value Type Description string | Improve this Doc View Source AmbientLightSensor Declaration public const string AmbientLightSensor = \"ambient-light-sensor\" Field Value Type Description string | Improve this Doc View Source Autoplay Declaration public const string Autoplay = \"autoplay\" Field Value Type Description string | Improve this Doc View Source Battery Declaration public const string Battery = \"battery\" Field Value Type Description string | Improve this Doc View Source Camera Declaration public const string Camera = \"camera\" Field Value Type Description string | Improve this Doc View Source ClipboardRead Declaration public const string ClipboardRead = \"clipboard-read\" Field Value Type Description string | Improve this Doc View Source ClipboardWrite Declaration public const string ClipboardWrite = \"clipboard-write\" Field Value Type Description string | Improve this Doc View Source ConversionMeasurement Declaration public const string ConversionMeasurement = \"conversion-measurement\" Field Value Type Description string | Improve this Doc View Source CrossOriginIsolated Declaration public const string CrossOriginIsolated = \"cross-origin-isolated\" Field Value Type Description string | Improve this Doc View Source DisplayCapture Declaration public const string DisplayCapture = \"display-capture\" Field Value Type Description string | Improve this Doc View Source DocumentDomain Declaration public const string DocumentDomain = \"document-domain\" Field Value Type Description string | Improve this Doc View Source EncryptedMedia Declaration public const string EncryptedMedia = \"encrypted-media\" Field Value Type Description string | Improve this Doc View Source ExecutionWhileNotRendered Declaration public const string ExecutionWhileNotRendered = \"execution-while-not-rendered\" Field Value Type Description string | Improve this Doc View Source ExecutionWhileOutOfViewport Declaration public const string ExecutionWhileOutOfViewport = \"execution-while-out-of-viewport\" Field Value Type Description string | Improve this Doc View Source FocusWithoutUserActivation Declaration public const string FocusWithoutUserActivation = \"focus-without-user-activation\" Field Value Type Description string | Improve this Doc View Source Fullscreen Declaration public const string Fullscreen = \"fullscreen\" Field Value Type Description string | Improve this Doc View Source Gamepad Declaration public const string Gamepad = \"gamepad\" Field Value Type Description string | Improve this Doc View Source Geolocation Declaration public const string Geolocation = \"geolocation\" Field Value Type Description string | Improve this Doc View Source Gyroscope Declaration public const string Gyroscope = \"gyroscope\" Field Value Type Description string | Improve this Doc View Source Hid Declaration public const string Hid = \"hid\" Field Value Type Description string | Improve this Doc View Source IdleDetection Declaration public const string IdleDetection = \"idle-detection\" Field Value Type Description string | Improve this Doc View Source Magnetometer Declaration public const string Magnetometer = \"magnetometer\" Field Value Type Description string | Improve this Doc View Source Microphone Declaration public const string Microphone = \"microphone\" Field Value Type Description string | Improve this Doc View Source Midi Declaration public const string Midi = \"midi\" Field Value Type Description string | Improve this Doc View Source NavigationOverride Declaration public const string NavigationOverride = \"navigation-override\" Field Value Type Description string | Improve this Doc View Source Payment Declaration public const string Payment = \"payment\" Field Value Type Description string | Improve this Doc View Source PictureInPicture Declaration public const string PictureInPicture = \"picture-in-picture\" Field Value Type Description string | Improve this Doc View Source PublickeyCredentialsGet Declaration public const string PublickeyCredentialsGet = \"publickey-credentials-get\" Field Value Type Description string | Improve this Doc View Source ScreenWakeLock Declaration public const string ScreenWakeLock = \"screen-wake-lock\" Field Value Type Description string | Improve this Doc View Source Serial Declaration public const string Serial = \"serial\" Field Value Type Description string | Improve this Doc View Source SpeakerSelection Declaration public const string SpeakerSelection = \"speaker-selection\" Field Value Type Description string | Improve this Doc View Source SyncScript Declaration public const string SyncScript = \"sync-script\" Field Value Type Description string | Improve this Doc View Source TrustTokenRedemption Declaration public const string TrustTokenRedemption = \"trust-token-redemption\" Field Value Type Description string | Improve this Doc View Source Usb Declaration public const string Usb = \"usb\" Field Value Type Description string | Improve this Doc View Source VerticalScroll Declaration public const string VerticalScroll = \"vertical-scroll\" Field Value Type Description string | Improve this Doc View Source WebShare Declaration public const string WebShare = \"web-share\" Field Value Type Description string | Improve this Doc View Source XrSpatialTracking Declaration public const string XrSpatialTracking = \"xr-spatial-tracking\" Field Value Type Description string Properties | Improve this Doc View Source All Declaration public static List<string> All { get; } Property Value Type Description List<string>"
  },
  "api/DNV.Web.Security.PermissionsPolicies.html": {
    "href": "api/DNV.Web.Security.PermissionsPolicies.html",
    "title": "Namespace DNV.Web.Security.PermissionsPolicies",
    "keywords": "Namespace DNV.Web.Security.PermissionsPolicies Classes Feature FeatureBuilder FeatureNames PermissionsPolicy PermissionsPolicyExtensions"
  },
  "api/DNV.Web.Security.PermissionsPolicies.PermissionsPolicy.html": {
    "href": "api/DNV.Web.Security.PermissionsPolicies.PermissionsPolicy.html",
    "title": "Class PermissionsPolicy",
    "keywords": "Class PermissionsPolicy Inheritance object PermissionsPolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: DNV.Web.Security.PermissionsPolicies Assembly: DNV.Web.Security.dll Syntax public class PermissionsPolicy Constructors | Improve this Doc View Source PermissionsPolicy() Declaration public PermissionsPolicy() Properties | Improve this Doc View Source Key Declaration public static string Key { get; } Property Value Type Description string Methods | Improve this Doc View Source Feature(string) Declaration public Feature Feature(string name) Parameters Type Name Description string name Returns Type Description Feature | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Web.Security.PermissionsPolicies.PermissionsPolicyExtensions.html": {
    "href": "api/DNV.Web.Security.PermissionsPolicies.PermissionsPolicyExtensions.html",
    "title": "Class PermissionsPolicyExtensions",
    "keywords": "Class PermissionsPolicyExtensions Inheritance object PermissionsPolicyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Security.PermissionsPolicies Assembly: DNV.Web.Security.dll Syntax public static class PermissionsPolicyExtensions Methods | Improve this Doc View Source DisableAllPermissionsPolicy(IHeaderDictionary) Declaration public static void DisableAllPermissionsPolicy(this IHeaderDictionary dict) Parameters Type Name Description IHeaderDictionary dict | Improve this Doc View Source EnableAllPermissionsPolicyForSelf(IHeaderDictionary) Declaration public static void EnableAllPermissionsPolicyForSelf(this IHeaderDictionary dict) Parameters Type Name Description IHeaderDictionary dict"
  },
  "api/DNV.Web.Security.WebSecurityMiddlewareExtensions.html": {
    "href": "api/DNV.Web.Security.WebSecurityMiddlewareExtensions.html",
    "title": "Class WebSecurityMiddlewareExtensions",
    "keywords": "Class WebSecurityMiddlewareExtensions Default Response Headers extensions to IApplicationBuilder. Inheritance object WebSecurityMiddlewareExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Security Assembly: DNV.Web.Security.dll Syntax public static class WebSecurityMiddlewareExtensions Methods | Improve this Doc View Source UseDefaultSecurityHeaders(IApplicationBuilder, Func<HttpContext, Func<Task>, Action<HttpContext>, Task>, Func<HttpRequest, bool>?, Func<HttpRequest, bool>?, Action<IHeaderDictionary>?) Adds and configures the predefined headers for Http response headers. Content-Security-Policy header is not added to request which url contains 'swagger' To avoid overwrite your own customized response header settings, call this method at last. If the predefined headers is not desired, setup you desired headers before calling this method To remove 'server' header on Kestrel Server, add the folowing code into ConfigureService method: services.PostConfigure<KestrelServerOptions>(t => t.AddServerHeader = false); Declaration public static IApplicationBuilder UseDefaultSecurityHeaders(this IApplicationBuilder builder, Func<HttpContext, Func<Task>, Action<HttpContext>, Task> middleware, Func<HttpRequest, bool>? apiPredicate = null, Func<HttpRequest, bool>? exceptionPredicate = null, Action<IHeaderDictionary>? customizeHeaders = null) Parameters Type Name Description IApplicationBuilder builder Func<HttpContext, Func<Task>, Action<HttpContext>, Task> middleware Func<HttpRequest, bool> apiPredicate Func<HttpRequest, bool> exceptionPredicate Action<IHeaderDictionary> customizeHeaders Returns Type Description IApplicationBuilder The IApplicationBuilder. Remarks The prefined security headers includes: X-Xss-Protection: 1 X-Frame-Options: SAMEORIGIN Referrer-Policy: no-referrer X-Content-Type-Options: nosniff X-Permitted-Cross-Domain-Policies: none Expect-CT: enforce, max-age=7776000 X-Xss-Protection: 1 Content-Security-Policy: connect-src 'self' https://dc.services.visualstudio.com https://login.microsoftonline.com https://login.veracity.com https://loginstag.veracity.com https://logintest.veracity.com; default-src 'self'; font-src 'self' data: https://onedesign.azureedge.net; frame-src 'self' https://www.google.com https://www.recaptcha.net/; img-src 'self' data: https://onedesign.azureedge.net; media-src 'self'; object-src 'self' {nonce}; script-src 'self' https://www.recaptcha.net https://www.gstatic.com https://www.gstatic.cn {nonce}; style-src 'self' https://onedesign.azureedge.net {nonce}; worker-src 'self' blob: | Improve this Doc View Source UseDefaultSecurityHeaders(IApplicationBuilder, Func<HttpRequest, bool>?, Func<HttpRequest, bool>?, Action<IHeaderDictionary>?) Adds and configures the predefined headers for Http response headers. Content-Security-Policy header is not added to request which url contains 'swagger' To avoid overwrite your own customized response header settings, call this method at last. If the predefined headers is not desired, setup you desired headers before calling this method To remove 'server' header on Kestrel Server, add the following code into ConfigureService method: services.PostConfigure<KestrelServerOptions>(t => t.AddServerHeader = false); Declaration public static IApplicationBuilder UseDefaultSecurityHeaders(this IApplicationBuilder builder, Func<HttpRequest, bool>? apiPredicate = null, Func<HttpRequest, bool>? exceptionPredicate = null, Action<IHeaderDictionary>? customizeHeaders = null) Parameters Type Name Description IApplicationBuilder builder Func<HttpRequest, bool> apiPredicate Func<HttpRequest, bool> exceptionPredicate Action<IHeaderDictionary> customizeHeaders Returns Type Description IApplicationBuilder The IApplicationBuilder. Remarks The predefined security headers includes: X-Xss-Protection: 1 X-Frame-Options: SAMEORIGIN Referrer-Policy: no-referrer X-Content-Type-Options: nosniff X-Permitted-Cross-Domain-Policies: none Expect-CT: enforce, max-age=7776000 X-Xss-Protection: 1 Content-Security-Policy: connect-src 'self' https://dc.services.visualstudio.com https://login.microsoftonline.com https://login.veracity.com https://loginstag.veracity.com https://logintest.veracity.com; default-src 'self'; font-src 'self' data: https://onedesign.azureedge.net; frame-src 'self' https://www.google.com https://www.recaptcha.net/; img-src 'self' data: https://onedesign.azureedge.net; media-src 'self'; object-src 'self' {nonce}; script-src 'self' https://www.recaptcha.net https://www.gstatic.com https://www.gstatic.cn {nonce}; style-src 'self' https://onedesign.azureedge.net {nonce}; worker-src 'self' blob: | Improve this Doc View Source UseSecurityHeaders(IApplicationBuilder, Func<HttpContext, Func<Task>, Action<HttpContext>, Task>, Func<HttpContext, string>, Func<HttpRequest, bool>?, Func<HttpRequest, bool>?) Declaration public static IApplicationBuilder UseSecurityHeaders(this IApplicationBuilder builder, Func<HttpContext, Func<Task>, Action<HttpContext>, Task> middleware, Func<HttpContext, string> setupCSP, Func<HttpRequest, bool>? apiPredicate = null, Func<HttpRequest, bool>? exceptionPredicate = null) Parameters Type Name Description IApplicationBuilder builder Func<HttpContext, Func<Task>, Action<HttpContext>, Task> middleware Func<HttpContext, string> setupCSP Func<HttpRequest, bool> apiPredicate Func<HttpRequest, bool> exceptionPredicate Returns Type Description IApplicationBuilder | Improve this Doc View Source UseSecurityHeaders(IApplicationBuilder, Func<HttpContext, string>, Func<HttpRequest, bool>?, Func<HttpRequest, bool>?) Declaration public static IApplicationBuilder UseSecurityHeaders(this IApplicationBuilder builder, Func<HttpContext, string> setupCSP, Func<HttpRequest, bool>? apiPredicate = null, Func<HttpRequest, bool>? exceptionPredicate = null) Parameters Type Name Description IApplicationBuilder builder Func<HttpContext, string> setupCSP Func<HttpRequest, bool> apiPredicate Func<HttpRequest, bool> exceptionPredicate Returns Type Description IApplicationBuilder"
  },
  "api/DNV.Web.Swagger.html": {
    "href": "api/DNV.Web.Swagger.html",
    "title": "Namespace DNV.Web.Swagger",
    "keywords": "Namespace DNV.Web.Swagger Classes SwaggerExtensions Contains extension methods for configuring Swagger. SwaggerOptions Represents the options for configuring Swagger. Throws"
  },
  "api/DNV.Web.Swagger.SwaggerExtensions.html": {
    "href": "api/DNV.Web.Swagger.SwaggerExtensions.html",
    "title": "Class SwaggerExtensions",
    "keywords": "Class SwaggerExtensions Contains extension methods for configuring Swagger. Inheritance object SwaggerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Swagger Assembly: DNV.Web.Swagger.dll Syntax public static class SwaggerExtensions Methods | Improve this Doc View Source AddSwagger(IServiceCollection, Action<SwaggerOptions>) Adds Swagger services to the specified service collection. Declaration public static IServiceCollection AddSwagger(this IServiceCollection services, Action<SwaggerOptions> setupAction) Parameters Type Name Description IServiceCollection services The service collection used in the startup of the application. Action<SwaggerOptions> setupAction The action used to configure specified options. Returns Type Description IServiceCollection The updated service collection. | Improve this Doc View Source UseSwaggerWithUI(IApplicationBuilder, Action<SwaggerOptions>?) Extension method that adds Swagger middleware to the specified IApplicationBuilder with Swagger UI served from \"/swagger/index.html\". Declaration public static IApplicationBuilder UseSwaggerWithUI(this IApplicationBuilder app, Action<SwaggerOptions>? setupAction = null) Parameters Type Name Description IApplicationBuilder app The IApplicationBuilder instance being extended Action<SwaggerOptions> setupAction Optional Lambda used to configure the SwaggerOptions Returns Type Description IApplicationBuilder The same instance of the IApplicationBuilder passed in, to allow for the usage of fluent methods."
  },
  "api/DNV.Web.Swagger.SwaggerOptions.html": {
    "href": "api/DNV.Web.Swagger.SwaggerOptions.html",
    "title": "Class SwaggerOptions",
    "keywords": "Class SwaggerOptions Represents the options for configuring Swagger. Inheritance object SwaggerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Swagger Assembly: DNV.Web.Swagger.dll Syntax public class SwaggerOptions Properties | Improve this Doc View Source AuthCodeFlow Gets or sets the authorization code flow for OAuth2 authentication. Declaration public OpenApiOAuthFlow? AuthCodeFlow { get; set; } Property Value Type Description OpenApiOAuthFlow | Improve this Doc View Source ClientCredsFlow Gets or sets the client credential flow for OAuth2 authentication. Declaration public OpenApiOAuthFlow? ClientCredsFlow { get; set; } Property Value Type Description OpenApiOAuthFlow | Improve this Doc View Source ClientId Gets or sets the client ID for Swagger OAuth2 authentication. Declaration public string? ClientId { get; set; } Property Value Type Description string | Improve this Doc View Source ClientSecret Gets or sets the client secret for Swagger OAuth2 authentication. Declaration public string? ClientSecret { get; set; } Property Value Type Description string | Improve this Doc View Source DocumentTitle Gets or sets the title of the Swagger document. Defaults to \"Swagger UI\". Declaration public string? DocumentTitle { get; set; } Property Value Type Description string | Improve this Doc View Source Enabled Gets or sets a value indicating whether Swagger is enabled. Defaults to false. Declaration public bool Enabled { get; set; } Property Value Type Description bool | Improve this Doc View Source ImplicitFlow Gets or sets the implicit flow for OAuth2 authentication. Declaration public OpenApiOAuthFlow? ImplicitFlow { get; set; } Property Value Type Description OpenApiOAuthFlow | Improve this Doc View Source PostGenConfigure Gets or sets an action for additional configuration on SwaggerGen. Declaration public Action<SwaggerGenOptions>? PostGenConfigure { get; set; } Property Value Type Description Action<SwaggerGenOptions> | Improve this Doc View Source PostUIConfigure Gets or sets an action for additional configuration on SwaggerUI. Declaration public Action<SwaggerUIOptions>? PostUIConfigure { get; set; } Property Value Type Description Action<SwaggerUIOptions> | Improve this Doc View Source SyntaxHighlight Gets or sets a value indicating whether syntax highlighting should be used in Swagger. Defaults to false to avoid performance issue of Swagger UI. Declaration public bool SyntaxHighlight { get; set; } Property Value Type Description bool | Improve this Doc View Source Versions Gets or sets the API information of each version. Declaration public IDictionary<string, OpenApiInfo>? Versions { get; set; } Property Value Type Description IDictionary<string, OpenApiInfo> Extension Methods Throws.IfNull<T>(T, string?)"
  },
  "api/DNV.Web.Swagger.Throws.html": {
    "href": "api/DNV.Web.Swagger.Throws.html",
    "title": "Class Throws",
    "keywords": "Class Throws Inheritance object Throws Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DNV.Web.Swagger Assembly: DNV.Web.Swagger.dll Syntax public static class Throws Methods | Improve this Doc View Source IfNull<T>(T, string?) Declaration public static void IfNull<T>(this T source, string? message = null) Parameters Type Name Description T source string message Type Parameters Name Description T"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Api Reference Page",
    "keywords": "Api Reference Page"
  },
  "articles/A-Typical-Sample-of-Veracity-Identity-Implementation-with-Solution-Packages.html": {
    "href": "articles/A-Typical-Sample-of-Veracity-Identity-Implementation-with-Solution-Packages.html",
    "title": "appsettings.json",
    "keywords": "appsettings.json \"Oidc\": { \"ResponseType\": \"code\", \"ClientId\": \"\", \"ClientSecret\": \"\", \"Scopes\": [ \"https://dnvglb2ctest.onmicrosoft.com/a4a8e726-c1cc-407c-83a0-4ce37f1ce130/user_impersonation\" ], \"Authority\": \"https://logintest.veracity.com/tfp/ed815121-cdfa-4097-b524-e2b23cd36eb6/B2C_1A_SignInWithADFSIdp/v2.0\" }, \"APIs\": [ { \"Name\": \"VeracityAPIsV3\", \"Flow\": 0, //\"user-credentials\", \"BaseUri\": \"https://api-test.veracity.com/Veracity/Services/V3/\", \"SubscriptionKey\": \"\", \"OAuthClientOptions\": { \"Scopes\": [ \"https://dnvglb2ctest.onmicrosoft.com/a4a8e726-c1cc-407c-83a0-4ce37f1ce130/user_impersonation\" ], \"ClientId\": \"\", \"ClientSecret\": \"\", \"Authority\": \"https://logintest.veracity.com/tfp/ed815121-cdfa-4097-b524-e2b23cd36eb6/B2C_1A_SignInWithADFSIdp/v2.0\" } }, { \"Name\": \"VeracityAPIsV3\", \"Flow\": 1, //\"client-credentials\", \"BaseUri\": \"https://api-test.veracity.com\", \"SubscriptionKey\": \"\", \"OAuthClientOptions\": { \"Scopes\": [ \"https://dnvglb2ctest.onmicrosoft.com/efb3e529-2f80-458b-aedf-7f4c8c794b45/.default\" ], \"ClientId\": \"\", \"ClientSecret\": \"\", \"Authority\": \"https://login.microsoftonline.com/ed815121-cdfa-4097-b524-e2b23cd36eb6/v2.0\" } } ] Startup.cs services.AddOAuthHttpClientFactory(o => configuration.Bind(\"APIs\", o)); services.AddOAuthCore(); var VeracityMyAPIs = \"VeracityAPIsV3\"; services.AddMyProfile(VeracityMyAPIs) .AddMyCompanies(VeracityMyAPIs) .AddMyServices(VeracityMyAPIs) .AddMyMessages(VeracityMyAPIs) .AddThisUsers(VeracityMyAPIs); services.AddOidc(o => configuration.Bind(\"Oidc\", o)) .AddPolicyValidation(o => { o.PolicyValidationMode = PolicyValidationMode.PlatformTermsAndCondition; o.VeracityPolicyApiConfigName = VeracityMyAPIs; o.GetReturnUrl = (ctx, retPath) => ctx.TryGetXForwardedHostUrl(out var hostUrl) ? $\"{hostUrl}{retPath}\" : $\"{ctx.Request.Scheme}://{ctx.Request.Host}{retPath}\"; }); Controller public class ApiController : ControllerBase { private readonly IMyServices _myServices; private readonly IThisUsers _thisUsers; public ApiController(IMyServices myServices, IThisUsers thisUsers) { _myServices = myServices; _thisUsers = thisUsers; } [HttpGet(\"me/services\")] public async Task<IActionResult> GetMyServices() { return Ok(await _myServices.List()); } [HttpGet(\"this/resolve\")] public async Task<IActionResult> FindByEmail(string email) { var users = await _thisUsers.Resolve(email); return Ok(users?.FirstOrDefault()); } }"
  },
  "articles/DNV.OAuth.Web.html": {
    "href": "articles/DNV.OAuth.Web.html",
    "title": "Get started with DNV.OAuth.Web",
    "keywords": "Get started with DNV.OAuth.Web DNV.OAuth.Web is a .NETCore library for developers to simplify the work of setting up OpenId Connection authentication (OIDC) such as Veracity or Azure AD B2C for ASP.NET Core web project. Below samples will show you how to do authentication through Veracity. Prerequisites Please create an App resource in Veracity developer (https://developer.veracity.com/) and copy out the client id and client secret for the use in further steps below. Please follow the tutorials from here: https://developer.veracity.com/docs/section/developerexperience/introduction. Package Install Ensure you have configured to package NuGet Package Source or find the instructions here. Package Manager Console PM> `Install-Package DNV.OAuth.Web` Basic Authentication Usage To simplify your authentication implementation of Veracity for your .Net 6+ web project, you need to add 3 blocks of codes to Startup.cs. Add namespace reference. using DNV.OAuth.Web; Add AddOidc extension method to ConfigureServices. public void ConfigureServices(IServiceCollection services) { ... var oidcOptions = new OidcOptions { Authority = \"<Authority>\", ClientId = \"<ClientId>\", Scopes = new[] { \"<Scope>\" }, }; services.AddOidc(oidcOptions); ... } Add UseAuthentication and UseAuthorization extension methods to Configure. public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { ... app.UseAuthentication().UseAuthorization(); ... } Then you could launch your project and access an action in a controller that decorated with [Authorize], a challenge request will be sent to IDP(Microsoft or Veracity) to start the authentication process, and the HttpContext will be filled with authentication result. A sample project is ready for you to try out: OidcOAuthSample. Access Token Cache Usage If you web project act as an API gateway, you will want to cache users' access tokens to prevent unnecessary token requests. The library uses MSAL (Microsoft Authentication Library) to manipulate tokens. Authorization code flow needs to be set to acquire access token, and refresh token is required for MSAL to re-acquire token from IDP if the token exceed its expiration. public void ConfigureServices(IServiceCollection services) { ... var oidcOptions = new OidcOptions { Authority = \"<Authority>\", ClientId = \"<ClientId>\", ClientSecret = \"<ClientSecret>\", Resource = \"<Resource>\", Scopes = new[] { \"<Scope>\", \"offline_access\" }, // offline_access is required to retrieve refresh_token. ResponseType = OpenIdConnectResponseType.Code }; ... } To cache the tokens, an implementaion of IDistributedCache such as MemoryDistributedCache needs to be added. public void ConfigureServices(IServiceCollection services) { ... services.AddDistributedMemoryCache(); ... } You can also add RedisCache instead. public void ConfigureServices(IServiceCollection services) { ... services.AddDistributedRedisCache(o => { o.InstanceName = \"<InstanceName>\"; o.Configuration = \"<Configuration>\"; }); ... } Don't forget to add AddOidc after what you did previously. public void ConfigureServices(IServiceCollection services) { ... services.AddOidc(oidcOptions); ... } Add UseAuthentication and UseAuthorization extension methods to Configure. public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { ... app.UseAuthentication().UseAuthorization(); ... } A sample project is ready for you to try out: TokenCacheSample. Authorize Api with a specific JWT scheme Create two Api resources (tick the checkbox \"This is an API\") in Veracity developer and copy out the client ids. Then for both Apis, add client application using the client id you created in the beginning. Add the JWT options with two authentication themes in appsettings.json \"JwtOptions\": { \"App1\": { \"AuthorizationPolicyName\": \"Policy1\", \"Authority\": \"<Authority>\", \"ClientId\": \"<client id of Api 1>\" }, \"App2\": { \"AuthorizationPolicyName\": \"Policy2\", \"Authority\": \"<Authority>\", \"ClientId\": \"<client id of Api 2>\" } } Configure services to use JWT options services.AddJwt(this.Configuration.GetSection(\"JwtOptions\").GetChildren()); Create controller authorized by JWT authentication theme [ApiController] [Route(\"api/[controller]\")] public class TestController : ControllerBase { /// <summary> /// requires token from App1 /// </summary> /// <returns></returns> [HttpGet(\"mobile\")] [Authorize(AuthenticationSchemes = \"App1\")] public IEnumerable<KeyValuePair<string, string>> GetMobileClaims() { return this.User.Claims.Select(c => new KeyValuePair<string, string>(c.Type, c.Value)); } /// <summary> /// requires token from App2 /// </summary> /// <returns></returns> [HttpGet(\"janus\")] [Authorize(AuthenticationSchemes = \"App2\")] public IEnumerable<KeyValuePair<string, string>> GetJanusClaims() { return this.User.Claims.Select(c => new KeyValuePair<string, string>(c.Type, c.Value)); } } Configure swagger a. Add swagger options in appsettings.json \"SwaggerOptions\": { \"Enabled\": true, \"Version\": \"v1\", \"DocumentTitle\": \"Demo API\", \"ClientId\": \"<put your client id here>\", \"ClientSecret\": \"<put your client secret here>\", \"AuthCodeFlow\": { \"AuthorizationUrl\": \"<Authorization url>\", \"TokenUrl\": \"<Token url>\", \"Scopes\": { \"App1\": \"<scope for App 1>\", \"App2\": \"<scope for App 2>\" } }, \"ClientCredsFlow\": { \"AuthorizationUrl\": \"<Authorization url>\", \"TokenUrl\": \"<Token url>\", \"Scopes\": { \"App1\": \"<scope for App 1>\", \"App2\": \"<scope for App 2>\" } } } Add the code snippet below to your Start.cs file // ConfigureServices services.AddSwagger(o => this.Configuration.Bind(\"SwaggerOptions\", o)); //Configure app.UseSwaggerWithUI(o => this.Configuration.Bind(\"SwaggerOptions\", o)); Verify the authentication Run the program and go to the swagger page, obtain the token through the authorization button by providing the client id/secrets of the app created in the beginning. Then you can execute the Api request in TestController and (hopefully) get a 200 Ok response, which means that the authorization worked as intended. Please select the correct scope aligned with the authentication theme when test the api. A sample project is ready for you to try out: DemoSample."
  },
  "articles/DNV.SecretsManager.html": {
    "href": "articles/DNV.SecretsManager.html",
    "title": "Secrets Manager",
    "keywords": "Secrets Manager The DNV.SecretsManager package is a command line tool for managing secrets from the Azure KeyVault or Azure DevOps Variable Groups. This tool allows secrets to be downloaded and uploaded as structured JSON files, meaning secrets may be uploaded in structured collections where previously they might have been maintained individually. What it does Given a large collection of key vault secrets in an Azure Key vault such as those shown below: The secrets manager tool could be executed with a command: secretsmanager keyvault -d -s <keyvault-url> -f output-file.json The resulting output-file.json would look like: { \"Account\": { \"BaseUrl\": <secret value> }, \"Company\": { \"ApiKey\": <secret value>, \"Authority\": <secret value>, \"BaseUrl\": <secret value>, \"ClientId\": <secret value>, \"ClientSecret\": <secret value>, \"Resource\": <secret value> }, \"Customer\": { \"ApiKey\": <secret value>, \"Authority\": <secret value>, \"BaseUrl\": <secret value>, \"ClientId\": <secret value>, \"ClientSecret\": <secret value>, \"IsApiKeyOnly\": <secret value>, \"Resource\": <secret value> }, \"Emailer\": { \"BaseUri\": <secret value>, \"FunctionKey\": <secret value> ... Conversely, an input json file (input-file.json) could be uploaded to an Azure Key vault by executing a command: secretsmanager keyvault -u -s <keyvault-url> -f input-file.json Hierachy The secrets manager assumes a convention where the parent-child relationship between entities in a hierarchy are expressed with a -- delimeter. In practice this means: to express that Company is the parent of ApiKey a key would be named Company--ApiKey, if there exists multiple children to a parent they would be aggregated in to a single parent as may be seen in the result above with keys: Company--ApiKey, Company--Authority and Company--BaseUrl etc. Parent-child relationships may extend to far greater depth than the example given. Arrays It is also possible to include arrays of data in your configuration. To express a collection of values in an array the indexes should be included explicity declared in place of the child name. For example, an array may be expressed with a collection of the following keys: Names--0, Names--1, Names--2 which would result in the following JSON: { \"Names\": [ <secret value>, <secret-value>, <secret-value> ] } Useage secretsmanager <command> [<args>] Commands: keyvault Download or upload secrets from/to Azure Keyvault variablegroup Download or upload secrets from/to Azure Keyvault Key vault command secretsmanager keyvault [-h | --help] -d | --download -u | --upload | -c | --clear -s | --url <url> -f | --filename <filename> Options -h | --help Prints the synopsis of commands and options available. -d | --download Requests the secrets to be downloaded from the specified source to a JSON file. -u | --upload Requests that a provided JSON file be uploaded to a specified source. -c | --clear Deletes all secrets from the specified source. -s | --url <url> Provide the URL to the keyvault. -f | --filename <filename> Specify the file to which you would like to download to or upload from. Variable group command secretsmanager variablegroup [-h | --help] -d | --download -u | --upload | -c | --clear -s | --base-url <base-url> -o | --organization <organization> -p | --pat <pat> -g | --group-id <group-id> -f | --filename <filename> Options -h | --help Prints the synopsis of commands and options available. -d | --download Requests the secrets to be downloaded from the specified source to a JSON file. -u | --upload Requests that a provided JSON file be uploaded to a specified source. -c | --clear Deletes all secrets from the specified source. -s | --base-url <base-url> Provide the base URL to the Azure DevOps. -o | --organization <organization> Provide the organization under Azure DevOps to which a variable group belongs. -p | --pat <pat> Specify the Person Access Token for authentication. -g | --group-id <group-id> Specify the id of the variable group you would like to download from or upload to. -f | --filename <filename> Specify the file to which you would like to download to or upload from."
  },
  "articles/DNVGL.OAuth.Api.HttpClient.html": {
    "href": "articles/DNVGL.OAuth.Api.HttpClient.html",
    "title": "OAuth HTTP Client Factory",
    "keywords": "OAuth HTTP Client Factory The DNVGL.OAuth.Api.HttpClient package is a .NET library which provides a factory for producing authenticated HttpClients for API integration via OAuth. Developers can use this library to create HttpClient instances which will be pre-authenticated for API requests based on provided configuration. This package supports two type of credential authentication: User credentials - A user may authenticate by providing a username and password via a UI. Client credentials - A service or application may provide a client id and secret to silently authenticate. Package Install Ensure you have configured to package NuGet Package Source or find the instructions here. Package Manager Console PM> `Install-Package DNVGL.OAuth.Api.HttpClient` Basic example 1. Configuration Setup API http client configuration in appsettings.json file: { \"ApiHttpClientOptions\": [ { \"Name\": \"userCredentialsClient\", \"Flow\": \"user-credentials\", \"BaseUri\": \"<BaseUri>\", \"SubscriptionKey\": \"<SubscriptionKey>\" }, { \"Name\": \"clientCredentialsClient\", \"Flow\":\"client-credentials\", \"BaseUri\": \"<BaseUri>\", \"SubscriptionKey\": \"<SubscriptionKey>\" \"OAuthClientOptions\": { \"Authority\": \"<Authority>\", \"ClientId\": \"<ClientId>\", \"ClientSecret\": \"<ClientSecret>\", \"Resource\": \"<Resource>\", \"Scopes\": [ \"<Scope>\", \"offline_access\" ], \"CallbackPath\": \"<CallbackPath>\" } } ] } The package injects an IHttpClientFactory which is able to provide multiple HttpClients for different purposes. The HttpClients may all be configured through a configuration section in which the individual client configurations are listed with a unique Name which is used to request HttpClients with the corresponding configurations. The configuration shown above lists 2 HttpClients. The first with name \"userCredentialsClient\" is an example of a configuration which would honour the signed in user's credentials for the API for which it makes requests. The second with name \"clientCredentialsClient\" provides configuration for a client which would be authenticated via the client credential flow with a client id and secret to make requests in an API. This configuration would allow us to request either type of HttpClient by requesting it from from the HttpClientFactory by providing one of the two names: \"userCredentialsClient\" or \"clientCredentialsClient\" in the method call to the HttpClientFactory. 2. Registration Call the ServiceCollection extension method AddOAuthHttpClientFactory to register an instance of the IHttpClientFactory in to your project in your Startup.cs file. The below code is retrieving the configuration from the \"OAuthHttpClientOptions\" section defined in apsettings.json above. public void ConfigureService(IServiceCollection services) { ... services.AddOAuthHttpClientFactory(Congiuration.GetSection(\"ApiHttpClientOptions\").Get<IEnumerable<OAuthHttpClientOptions>>()); ... } If you require a HttpClient applying the user credential flow you should also include the web authentication (AddOidc) and token cache handling (AddDistributedMemoryCache) from the DNVGL.OAuth.Web package. Include the NuGet package in your project and call the required methods as below: public void ConfigureService(IServiceCollection services) { ... services.AddDistributedMemoryCache(); ... var oidcOptions = new OidcOptions { Authority = \"<Authority>\", ClientId = \"<ClientId>\", ClientSecret = \"<ClientSecret>\", Resource = \"<Resource>\", Scopes = new[] { \"<Scope>\", \"offline_access\" }, ResponseType = OpenIdConnectResponseType.Code }; services.AddOidc(oidcOptions); ... services.AddOAuthHttpClientFactory(Congiuration.GetSection(\"ApiHttpClientOptions\").Get<IEnumerable<OAuthHttpClientOptions>>()); ... } If you only require HttpClients applying the client credential flow the DNVGL.OAuth.Web package is not required. 3. Request a client Resolve IHttpClientFactory to create user-credential or client-credential HttpClient to access web API. public class TestController { private readonly IHttpClientFactory _httpClientFactory; public TestController(IHttpClientFactory httpClientFactory) { _httpClientFactory = httpClientFactory; } public User DoSomethingWithSignInUser(string id) { var client = _httpClientFactory.Create(\"userCredentialsClient\"); ... } public Company DoSomethingWithService(string id) { var client = _httpClientFactory.Create(\"clientCredentialsClient\"); ... } }"
  },
  "articles/DNVGL.Veracity.Services.Api.html": {
    "href": "articles/DNVGL.Veracity.Services.Api.html",
    "title": "Veracity - My Services API v3 Clients",
    "keywords": "Veracity - My Services API v3 Clients Packages from the DNVGL.Veracity.Services.Api namespace provide lightweight .NET clients for Veracity My Services API v3 built on top of packages from the Solution Package. These packages allow developers to query and manipulate data from My services including user profiles, service profiles, notification messages, company profiles, admin roles and subscriptions. View Points As a client to API v3, the package is divided in to the following view points: | Name | Description | Supported authentication | |--|--|--| | Directory | Allows fetching and updating resources without a focus on a specifc user or service resource. Recommended for core platform applications. | Client credentials | | My | Allows fetching information and making requests for a user authenticated by user credential flow. | User credentials | | This | Allows manipulation and retrieval of information related to a service where an application is authenticated as a service owner. | Client credentials |"
  },
  "articles/DNVGL.Veracity.Services.Api/DNVGL.Veracity.Services.Api.Directory.html": {
    "href": "articles/DNVGL.Veracity.Services.Api/DNVGL.Veracity.Services.Api.Directory.html",
    "title": "Veracity - My Services API v3 - Directory Client",
    "keywords": "Veracity - My Services API v3 - Directory Client The DNVGL.Veracity.Services.Api.Directory package provides a client to resources available under the 'Directory' view point of API v3. This view point is appropriate for core Veracity applications where resources are not restricted to any context. Only Client credentials authentication is supported by this package. Package Install Ensure you have configured to package NuGet Package Source or find the instructions here. Package Manager Console PM> `Install-Package DNVGL.Veracity.Services.Api.Directory` Example With the nuget package installed, services for each resource may be individually configured, injected and requested inside your solution. 1. Configuration To configure a resource service, introduce configuration in the form of OAuthHttpClientOptions: appsettings.json The Directory view point only supports Client Credential Flow. { \"OAuthHttpClients\": [ ... { \"Name\": \"company-directory\", \"Flow\": \"ClientCredentials\", \"BaseUri\": <BaseUri>, \"SubscriptionKey\": <SubscriptionKey>, \"OAuthClientOptions\": { \"Authority\": <Authority>, \"ClientId\": <ClientId>, \"ClientSecret\": <ClientSecret>, \"Resource\": <Resource>, \"Scopes\": [ <Scope> ], } } ... ] } 2. Registration Register the service or services using extensions methods available from the DNVGL.Veracity.Services.Api.Directory.Extensions namespace. startup.cs Packages from DNVGL.Veracity.Service.Api are dependent on the DNVGL.OAuth.Api.HttpClient package, therefore the HttpClientFactory should also be injected. public void ConfigureServices(IServiceCollection services) { ... services.AddOAuthHttpClientFactory(Congiuration.GetSection(\"OAuthHttpClients\").Get<IEnumerable<OAuthHttpClientOptions>>()); ... services.AddCompanyDirectory(\"company-directory\") ... } 3. Request service Request the service from the constructor by its interface: TestController.cs public class TestController : Controller { ... private readonly ICompanyDirectory _companyDirectory; ... public TestController(ICompanyDirectory companyDirectory) { ... _companyDirectory = companyDirectory ?? throw new ArgumentNullException(nameof(companyDirectory)); ... } ... public async Task<IActionResult> FetchCompany(string companyId) { return Json(await _companyDirectory.Get(companyId)); } ... } Resources Companies Services Users Companies Registration method Service interface AddCompanyDirectory(string clientConfigurationName) ICompanyDirectory Name Description Get(string companyId) Retrieves an individual company. ListUsers(string companyId, int page, int pageSize) Retrieves a paginated collection of user references of users affiliated with a company. Services Registration method Service interface AddServiceDirectory(string clientConfigurationName) IServiceDirectory Name Description Get(string serviceId) Retrieves an individual service. ListUsers(string serviceId, int page, int pageSize) Retrieves a paginated collection of user references of users subscribed to a service. Users Registration method Service interface AddUserDirectory(string clientConfigurationName) IUserDirectory Name Description Get(string userId) Retrieves an individual user. ListByUserId(params string[] userIds) Retrieves a collection of users where the id is included in the parameters. ListByEmail(string email) Retrieves a collection of user references by a specified email value. ListCompanies(string userId) Retrieves a collection of company references of companies with which a user is affiliated. ListServices(string userId, int page, int pageSize) Retrieves a collection of service references of services to which a user is subscribed. GetSubscription(string userId, string serviceId) Retrieve an individual subscription for a specified user and service."
  },
  "articles/DNVGL.Veracity.Services.Api/DNVGL.Veracity.Services.Api.My.html": {
    "href": "articles/DNVGL.Veracity.Services.Api/DNVGL.Veracity.Services.Api.My.html",
    "title": "Veracity - My Services API v3 - My Client",
    "keywords": "Veracity - My Services API v3 - My Client The DNVGL.Veracity.Services.Api.My package provides a client to resources available under the 'My' view point of API v3. This view point is appropriate if you intend to use Veracity as an identity provider for your application. Resources retrieved from this view point are from the perspective of the authenticated user, Only User credentials authentication is supported by this package. Package Install Ensure you have configured to package NuGet Package Source or find the instructions here. Package Manager Console PM> `Install-Package DNVGL.Veracity.Services.Api.My` Example With the nuget package installed, services for each resource may be individually configured, injected and requested inside your solution. 1. Configuration To configure a resource service, introduce configuration in the form of OAuthHttpClientOptions: appsettings.json The My view point only supports User Credential Flow. { \"OAuthHttpClients\": [ ... { \"Name\": \"my-profile\", \"Flow\": \"UserCredentials\", \"BaseUri\": <BaseUri>, \"SubscriptionKey\": <SubscriptionKey>, \"OAuthClientOptions\": { \"Authority\": <Authority>, \"Scopes\": [ <Scope> ] } } ... ] } 2. Registration Register the service or services using extensions methods available from the DNVGL.Veracity.Services.Api.My.Extensions namespace. startup.cs Packages from DNVGL.Veracity.Service.Api are dependent on the DNVGL.OAuth.Api.HttpClient package, therefore the HttpClientFactory should also be injected. public void ConfigureServices(IServiceCollection services) { ... services.AddOAuthHttpClientFactory(Congiuration.GetSection(\"OAuthHttpClients\").Get<IEnumerable<OAuthHttpClientOptions>>()); ... services.AddMyProfile(\"my-profile\") ... } 3. Request service Request the service from the constructor by its interface: TestController.cs public class TestController : Controller { ... private readonly IMyProfile _myPofile; ... public TestController(IMyProfile myProfile) { ... _myPofile = myProfile ?? throw new ArgumentNullException(nameof(myProfile)); ... } ... public async Task<IActionResult> FetchProfile() { return Json(await _myPofile.Get()); } ... } Resources Companies Messages Policies Profile Services Companies Registration method Service interface AddMyCompanies(string clientConfigurationName) IMyCompanies Name Description List() Retrieves a collection of company references for the authenticated user. Messages Registration method Service interface AddMyMessages(string clientConfigurationName) IMyMessages Name Description List(bool includeRead) Retrieves a collection of messages addressed to the authenticated user. Get(string messageId) Retrieves an individual message addressed to the authenticated user. GetUnreadCount() Retrieves the numeric value indicating how many messages have not been marked as read by the authenticated user. Policies Registration method Service interface AddMyPolicies(string clientConfigurationName) IMyPolicies Name Description ValidatePolicies(string returnUrl) Validates all policies for the authenticated user. ValidatePolicy(string serviceId, string returnUrl, string skipSubscriptionCheck) Validates an individual policy for the authenticated user. Profile Registration method Service interface AddMyProfile(string clientConfigurationName) IMyProfile Name Description Get() Retrieves the user profile for the authenticated user. Services Registration method Service interface AddMyServices(string clientConfigurationName) IMyServices Name Description List() Retrieves a collection of service references for services the authenticated user is subscribed to."
  },
  "articles/DNVGL.Veracity.Services.Api/DNVGL.Veracity.Services.Api.This.html": {
    "href": "articles/DNVGL.Veracity.Services.Api/DNVGL.Veracity.Services.Api.This.html",
    "title": "Veracity - My Services API v3 - This Client",
    "keywords": "Veracity - My Services API v3 - This Client The DNVGL.Veracity.Services.Api.This package provides a client to resources available under the 'This' view point of API v3. This view point is appropriate for service owners integrating with Veracity enabling management of their service and sub-service subscriptions. Resources retrieved from this view point are from the perspective of a service, Only Client credentials authentication is supported by this package. Package Install Ensure you have configured to package NuGet Package Source or find the instructions here. Package Manager Console PM> `Install-Package DNVGL.Veracity.Services.Api.This` Example With the nuget package installed, services for each resource may be individually configured, injected and requested inside your solution. 1. Configuration To configure a resource service, introduce configuration in the form of OAuthHttpClientOptions: appsettings.json The This view point only supports Client Credential Flow. { \"OAuthHttpClients\": [ ... { \"Name\": \"this-subscribers\", \"Flow\": \"ClientCredentials\", \"BaseUri\": <BaseUri>, \"SubscriptionKey\": <SubscriptionKey>, \"OAuthClientOptions\": { \"Authority\": <Authority>, \"ClientId\": <ClientId>, \"ClientSecret\": <ClientSecret>, \"Resource\": <Resource>, \"Scopes\": [ <Scope> ], } } ... ] } 2. Registration Register the service or services using extensions methods available from the DNVGL.Veracity.Services.Api.This.Extensions namespace. startup.cs Packages from DNVGL.Veracity.Service.Api are dependent on the DNVGL.OAuth.Api.HttpClient package, therefore the HttpClientFactory should also be injected. public void ConfigureServices(IServiceCollection services) { ... services.AddOAuthHttpClientFactory(Congiuration.GetSection(\"OAuthHttpClients\").Get<IEnumerable<OAuthHttpClientOptions>>()); ... services.AddThisSubscribers(\"this-subscribers\") ... } 3. Request service Request the service from the constructor by its interface: TestController.cs public class TestController : Controller { ... private readonly IThisSubscribers _thisSubscribers; ... public TestController(IThisSubscribers thisSubscribers) { ... _thisSubscribers = thisSubscribers ?? throw new ArgumentNullException(nameof(thisSubscribers)); ... } ... public async Task<IActionResult> FetchSubscribers(int page, int pageSize) { return Json(await _thisSubscribers.List(page, pageSize)); } ... } Resources Administrators Services Subscribers Users Administrators Registration method Service interface AddThisAdministrators(string clientConfigurationName) IThisAdministrators Name Description Get(string userId) Retrieves an individual administrator for the authenticated service. List(int page, int pageSize) Retrieves a collection of administrator references for the authenticated service. Services Registration method Service interface AddThisServices(string clientConfigurationName) IThisServices Name Description AddSubscription(string serviceId, string userId, SubscriptionOptions options) Add a subscription to the authenticated service or nested services. GetAdministrator(string serviceId, string userId) Retrieve an individual administrator reference to a administrator of the authenticated service or nested services. GetSubscriber(serviceId, tring userId) Retrieve an individual user reference to a user which has a subscription to a specified service. List(int page, int pageSize) Retrieve a collection of services the authenticated service has access to. ListAdministrators(string serviceId, int page int pageSize) Retrieve a collection of administrator references of administrators for a specified service. ListSubscribers(string serviceId, int page, int pageSize) Retrieve a collection of user references of users subscribed to a specified service. NotifySubscribers(string serviceId, NotificationOptions options) Send a notification to users subscribed to the authenticated service or nested service. RemoveSubscription(string servieId, string userId) Remove a user subscription for a user and the authenticated service or a nested service. Subscribers Registration method Service interface AddThisSubscribers(string clientConfigurationName) IThisSubscribers Name Description Add(string userId, SubscriptionOptions options) Add a subscription to the authenticated service for a specified user. Get(string userId) Retrieve a user reference for a user subscribed to the authenticated service. List(int page, int pageSize) Retrieve a collection of user references to users subscribed to the authenticated service. Remove(string userId) Remove a user subscription to the authenticated service by specified user. Users Registration method Service interface AddThisUsers(string clientConfigurationName) IThisUsers Name Description Create(CreateUserOptions options) Create a new user. Create(params CreateUserOptions[] options) Create a collection of new users. Resolve(string email) Retrieves a collection of user references for users with a specified email value."
  },
  "articles/Home.html": {
    "href": "articles/Home.html",
    "title": "Solution Package",
    "keywords": "Solution Package A collection of packages and tools for developers to support rapid, robust and extensible development of applications and services within DNV. Some of the supported features include: Authentication OpenId connection authentication OAuth HTTP client factory Security Security headers User management Secrets manager Integration Veracity - My Services API v3 clients Getting started Installing packages"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Tutorials page",
    "keywords": "Tutorials page"
  },
  "articles/PackageInstall.html": {
    "href": "articles/PackageInstall.html",
    "title": "Package Install",
    "keywords": "Package Install To install any package from the Solution Package collection, the package feed should be included in your nuget package sources: This may be added in Visual Studio by navigating to Tools > NuGet Package Manager > Package Manager Settings An Options window will appear, select the Package Sources node on the left hand pane the click the button, provide a Name and enter the Source below: https://dnvgl-one.pkgs.visualstudio.com/_packaging/DNVGL.SolutionPackage/nuget/v3/index.json Click OK to complete. One done it will be possible to add any of the NuGet packages outlined in this documentation to your projects via the Package Manager in visual studio or via the Package Manager Console."
  },
  "articles/securityHeader.html": {
    "href": "articles/securityHeader.html",
    "title": "HTTP Response Security Header",
    "keywords": "HTTP Response Security Header DNVGL.Web.Security provides extension methods to setup http response headers for ASP.NET Core application. Package Install Ensure you have configured to package NuGet Package Source or find the instructions here. Package Manager Console PM> `Install-Package DNVGL.OAuth.Web` 1. Basic Example public class Startup { //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseDefaultHeaders(); //... } } The package set up below default http response headers. Key Value X-Xss-Protection 1 X-Frame-Options SAMEORIGIN X-Content-Type-Options no-referrer X-Permitted-Cross-Domain-Policies none Expect-CT enforce, max-age=7776000 Strict-Transport-Security max-age=15552000; includeSubDomains If you have setup your own response headers before using the pacakge to setup default headers. You own reponse headers will be kept. The package set up below default csp rule in http response headers. Key Value default-src 'self' object-src 'self' connect-src 'self' https://dc.services.visualstudio.com script-src 'self' https://www.recaptcha.net https://www.gstatic.com https://www.gstatic.cn font-src 'self' data: https://onedesign.azureedge.net https://veracitycdn.azureedge.net media-src 'self' worker-src 'self' blob: img-src 'self' https://onedesign.azureedge.net https://dnvglcom.azureedge.net https://cdnveracity.azureedge.net frame-src 'self' https://www.google.com https://www.recaptcha.net/ style-src 'self' https://onedesign.azureedge.net If you have setup your own CSP before using the pacakge to setup default headers. You own CSP will be kept. 2. Customize Response Header The pacakge supports to overwrite the above default setting. This is a code sample to overwrite X-Frame-Options: public class Startup { //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseDefaultHeaders(h=> h.Add(\"X-Frame-Options\", \"DENNY\")); //... } } 3. Customize CSP in Response Header The pacakge supports to overwrite the above default setting. This is a code sample to overwrite styleSrc: public class Startup { //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseDefaultHeaders(h=> h.ReplaceDefaultContentSecurityPolicy(styleSrc: \"'self' 'nonce-123456789909876543ghjklkjvcvbnm'\");); //... } } Or extend the above default setting. This is a code sample to extend styleSrc: public class Startup { //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseDefaultHeaders(h=> h.ExtendDefaultContentSecurityPolicy(styleSrc: \"'nonce-123456789909876543ghjklkjvcvbnm'\");); //... } } 4. Skip CSP in Response Header for specific requests. By default, The package doesn't add csp into respsone for all http requests which url contain '/swagger/'. It supports to overwrite the default skip logic. This is a code sample to skip all request which url contains '/nocsprequired/'. public class Startup { //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseDefaultHeaders(h=> h.SkipContentSecurityPolicyForRequests((req) => req.Path.ToString().ToLowerInvariant().Contains(\"/nocsprequired/\"))); //... } } 5. Permissions Policy Permissions Policy HTTP Header can be provided by your web server / web application in order to improve the security of your visitors and the data they may be accessing on your site. Standardized Features Feature Name Description accelerometer The Accelerometer interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes. ambient-light-sensor The AmbientLightSensor interface of the Sensor APIs returns the current light level or illuminance of the ambient light around the hosting device. autoplay Controls the ability to have Media (Audio or Video) elements begin playback without user interaction in the current document. When this policy is disabled and there were no user gestures, the Promise returned by HTMLMediaElement.play() will reject with a DOMException. The autoplay attribute on <audio> and <video> elements will be ignored. battery The Battery Status API can be used to defer or scale back work when the device is not charging in or is low on battery. camera Manages access to Camera interfaces (physical and virtual). cross-origin-isolated Cross-origin isolation enables a web page to use powerful features such as SharedArrayBuffer, performance.measureUserAgentSpecificMemory(), high resolution timer with better precision, or the JS Self-Profiling API. This also impacts the \"document-domain\" permission when set (see below). display-capture A document's permissions policy determines whether any content in that document is allowed to use getDisplayMedia. document-domain Provides access to the deprecated \"document.domain[=domain]\" setter. When the \"document-domain\" feature is disabled, the setter will throw a \"SecurityError\" exception. In cases where crossOriginIsolated or originAgentCluster return true, the setter will do nothing. It is recommended to avoid using the document.domain setter, instead, use postMessage() or MessageChannel objects to communicate across origins in a safe manner. encrypted-media Encrypted Media Extensions provides an API that enables web applications to interact with content protection systems, to allow playback of encrypted audio and video. Provides access to the requestMediaKeySystemAccess() method, a part of the MediaKeys object. execution-while-not-rendered Controls if tasks should execute for nested browsing contexts (eg. iframes) when it has/is not being rendered. execution-while-out-of-viewport Controls if tasks should execute for nested browsing contexts (eg. iframes) when not within the current viewport. fullscreen Determines whether any content in a document is allowed to go fullscreen. If disabled in any document, no content in the document will be allowed to use fullscreen. geolocation The Geolocation API provides access to geographical location information associated with the host device. gyroscope Gyroscope sensor interface to monitor the rate of rotation around the three local primary axes of the device. keyboard-map Controls whether the getLayoutMap() method is exposed on the \"Keyboard\" interface. magnetometer Magnetometer sensor interface to measure a magnetic field in the X, Y and Z axis. microphone Manages access to Microphone interfaces (physical and virtual). midi Musical Instrument Digital Interface (MIDI) protocol enables electronic musical instruments, controllers and computers to communicate and synchronize with each other. navigation-override Enables the page author to take control over the behavior of spatial navigation, or to cancel it outright. Spatial navigation is the ability to move around the page directionally which can be useful for a web page built using a grid-like layout, or other predominantly non linear layouts. More often this is used in browsers on devices with limited input control, such as a TV. payment Allow merchants (i.e. web sites selling physical or digital goods) to utilise one or more payment methods with minimal integration. picture-in-picture Allow websites to create a floating video window always on top of other windows so that users may continue consuming media while they interact with other content sites, or applications on their device. This item controls whether the request Picture-in-Picture algorithm may return a SecurityError and whether pictureInPictureEnabled is true or false. publickey-credentials-get Determines whether any content in the allowed documents is allowed to successfully invoke the Web Authentication API. If disabled in any document, no content in the document will be allowed to use the foregoing methods, attempting to do so will return an error. screen-wake-lock A screen wake lock prevents the screen from turning off. Only visible documents can acquire the screen wake lock. sync-xhr The sync-xhr policy controls whether synchronous requests can be made through the XMLHttpRequest API. If disallowed in a document, then calls to send() on XMLHttpRequest objects with the synchronous flag set will fail, causing a NetworkError DOMException to be thrown. usb The WebUSB API provides a way to safely expose USB device services to the web. Controls whether the usb attribute is exposed on the Navigator object. web-share Exposes the navigator.share() API where supported, which shares the current URL via user agent provided share to locations. xr-spatial-tracking The WebXR Device API provides the interfaces necessary to enable developers to build compelling, comfortable, and safe immersive applications on the web across a wide variety of hardware form factors. Proposed Features Feature Name Description clipboard-read Read from the device clipboard via the Clipboard API clipboard-write Write to the device clipboard via the Clipboard API gamepad Determines whether any content in that document is allowed to access getGamepads(). If disabled in any document, no content in the document will be allowed to use getGamepads(), nor will the \"gamepadconnected\" and \"gamepaddisconnected\" events fire. speaker-selection Determines whether any content in a document is allowed to use the selectAudioOutput function to prompt the user to select an audio output device, or allowed to use setSinkId to change the device through which audio output should be rendered, to a non-system-default user-permitted device. Experimental Features Feature Name Description conversion-measurement Click Through Attribution Reporting. To enable this, use the Chrome command line flag --enable-blink-features=ConversionMeasurement focus-without-user-activation Helps control the use of automated focus in a main frame or <iframe>. The proposed feature provides a means for developers to block the use of automatic focus in nested contents. hid Allow a web page to communicate with HID devices (Human Interface Device) idle-detection Allow usage of the IdleDetector interface to better detect if a user is at their device, instead of trying to identify if a user has just become inactive, such as left window open, screen saver activated, screen turned off, changed tabs or changed applications. interest-cohort Federated Learning of Cohorts (FLoC) is a new way that browsers could enable interest-based advertising on the web. A site should be able to declare that it does not want to be included in the user's list of sites for cohort calculation. serial Provide direct communication between a web site and the device that it is controlling via a Serial port. To enable this, use the Chrome command line flag --enable-blink-features=Serial sync-script Unknown - No information currently available. To enable this, use the Chrome command line flag --enable-blink-features=ExperimentalProductivityFeatures. trust-token-redemption This API proposes a new per-origin storage area for “Privacy Pass” style cryptographic tokens, which are accessible in third party contexts. These tokens are non-personalized and cannot be used to track users, but are cryptographically signed so they cannot be forged. window-placement Proposal to provide additional informatiion for Multi-Screen Window Placement. vertical-scroll Vertical scroll policy is a feature introduced to assist websites in blocking certain embedded contents from interfering with vertical scrolling. Stopping a user from vertically scrolling the page might be a frustrating experience. 5.1 Customize Permissions Policy Customize Permissions Policy in HTTP Header public class Startup { //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseDefaultHeaders(h=> { var policy = new PermissionsPolicy(); policy.Feature(FeatureNames.Camera).Disable(); policy.Feature(FeatureNames.Fullscreen).Enable(); policy.Feature(FeatureNames.Geolocation).Enable().Self(); policy.Feature(FeatureNames.Usb).Enable().Custom(\"https://www.dnv.com\"); policy.Feature(FeatureNames.Microphone).Enable().Self().Custom(\"https://www.google.com\"); h.Add(PermissionsPolicy.Key, policy.ToString()); }); //... } } 5.2 Enable all Permissions Policy Enable all Permissions Policy in HTTP Header public class Startup { //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseDefaultHeaders(h=> h.EnableAllPermissionsPolicyForSelf()); //... } } 5.3 Disable all Permissions Policy Disable all Permissions Policy in HTTP Header public class Startup { //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseDefaultHeaders(h=> h.DisableAllPermissionsPolicy()); //... } }"
  },
  "articles/userManagement.html": {
    "href": "articles/userManagement.html",
    "title": "User Management and Authorization",
    "keywords": "User Management and Authorization DNVGL.Authorization.UserManagement.ApiControllers provides restAPIs to manage user, role and company. It also provides mechanisms to authorize API endpoints. Go through Overview to understand the logic behind the package. Check out Demo Projects. Prerequisites PM> Install-Package DNVGL.Authorization.UserManagement.ApiControllers PM> Install-Package DNVGL.Authorization.UserManagement.EFCore Basic Usage This simple example will show you the minimum steps to setup user management and authorization in a ASP.NET Core project. The example uses SQL Server as database and Veracity authentication (Azure AD B2C). 1. register user management module in ASP.NET core project. PM> Install-Package Microsoft.EntityFrameworkCore.SqlServer public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement().UseEFCore(new EFCoreOptions { DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\") }); //... } public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... //Put UseRouting or MapControllers before UseAuthentication and UseAuthorization //app.MapControllers(); app.UseRouting(); app.UseAuthentication().UseAuthorization(); //... //... //The following code is required if app.UseRouting() is used instead of app.MapControllers(); app.UseEndpoints(endpoints => { //... endpoints.MapDefaultControllerRoute(); }); //... } } 2. Create tables in database Find and execute NewTableScript.sql which is located at the content directory once you imported the package in your project. 3. Create a super admin in Table - Users. The following is sample. | Id | Email | FirstName | LastName | VeracityId | SuperAdmin | Active | Deleted | |--|--|--|--|--|--|--|--| | 1 | email | first name | last name | veracity id | 1 | 1 | 0 4. Generate Swagger api documentation (Optional) NOTE: This step is optional. You can generate API docs in your own way. The following code has dependency on Nuget package - Swashbuckle.AspNetCore. Additionaly, you will get more explanation if you set apidocs/DNVGL.Authorization.UserManagement.ApiControllers.xml's Copy to Output Directory as Copy Always. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddControllers(); services.AddSwaggerGen(c => { // swagger documentaion group for User Management. c.SwaggerDoc(\"UserManagement\", new OpenApiInfo { Title = \"User Management\", Version = \"v1\" }); // swagger documentaion group for your system. c.SwaggerDoc(\"WebAPI\", new OpenApiInfo { Title = \"Web API\", Version = \"v1\" }); c.TagActionsBy(api => { if (api.GroupName != null) { return new[] { api.GroupName }; } var controllerActionDescriptor = api.ActionDescriptor as ControllerActionDescriptor; if (controllerActionDescriptor != null) { return new[] { controllerActionDescriptor.ControllerName }; } throw new InvalidOperationException(\"Unable to determine tag for endpoint.\"); }); c.DocInclusionPredicate((name, api) => { if (name == \"UserManagement\") return api.GroupName != null && api.GroupName.StartsWith(\"UserManagement\"); else return api.GroupName == null; }); var xmlFile = $\"DNVGL.Authorization.UserManagement.ApiControllers.xml\"; var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile); if (File.Exists(xmlPath)) c.IncludeXmlComments(xmlPath); }); //... } //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseSwagger(); app.UseSwaggerUI(c => { c.SwaggerEndpoint(\"/swagger/UserManagement/swagger.json\", \"User Management API v1\"); c.SwaggerEndpoint(\"/swagger/WebAPI/swagger.json\", \"Web API v1\"); }); //... } } 5. Explore user management APIs Build and Run your project. Open swagger in Browser 6. Define permissions Define permissions by implementing interface - IPermissionMatrix. The following code defined two permissions. public class PermissionBook : IPermissionMatrix { public enum WeatherPermission { //... [PermissionValue(id: \"8\", key: \"ReadWeather\", name: \"Read Weather\", group: \"Weather\", description: \"ReadWeather\")] ReadWeather, [PermissionValue(id: \"8\", key: \"WriteWeather\", name: \"Write Weather\", group: \"Weather\", description: \"WriteWeather\")] WriteWeather, //... other permissions } } 7. Authorize API with permissions Decorates API actions with permission. [HttpGet] [PermissionAuthorize(WeatherPermission.ReadWeather)] public IEnumerable<WeatherForecast> Get() { //... api logic } Recommended content Read First ✓ ✓ ✓ Something you need to know before using the package to handle user management and authorization. Integration with ASP.NET Core's Role-based authorization ✓ Integrate user management module with Role-based authorization in ASP.NET Core. In this way, you are allowed to authorize API with asp.net core's [Authorize(Roles = \"****\")]. Guidance for different databases Use Azure CosmosDB as database Use SQL Server as database User other databases. The package can use all database engines supported by EF Core 5.0+. Here is a list - EF Core 5.0 Database providers Guidance for configuration User Management Configuration Guidance for customization Extend Data model - Company, Role, User Replace EF Core with your own data access Guidance for access control ✓ Resource access control guide you to control access on resource of company. Guidance for defining premissions outside souce code Define permissions in json, database or other places"
  },
  "articles/userManagement/accessControl.html": {
    "href": "articles/userManagement/accessControl.html",
    "title": "Resource Access Control",
    "keywords": "Resource Access Control In this section, you learn how to control access on resource of a company. It is useful in user management modes Company_CompanyRole_User and Company_GlobalRole_User. Prerequisites✓ First of all, Specify a way to get company identity. there are three different ways to do that. 1. Put companyId in API route, or as query parameter. companyId is case senstive here. // From Route [Route(\"api/company/{companyId}/users\")] public async Task<UserViewModel> GetUsers([FromRoute] string companyId) { //... logic } // Or from query [Route(\"api/company/users\")] public async Task<UserViewModel> GetUsers([FromQuery] string companyId) { //... logic } 2. Put custom variable name of company id in API route, or as query parameter. For example, Replace companyId with companyKey. // From Route [CompanyIdentityFieldNameFilter(companyIdInRoute: \"companyKey\")] [Route(\"api/company/{companyKey}/users\")] public async Task<UserViewModel> GetUsers([FromRoute] string companyKey) { //... logic } // Or from query [CompanyIdentityFieldNameFilter(companyIdInQuery: \"companyKey\")] [Route(\"api/company/users\")] public async Task<UserViewModel> GetUsers([FromQuery] string companyKey) { //... logic } 3. Put a global function to get company identity from httpcontext public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement( //... PermissionOptions = new PermissionOptions() { //... GetCompanyIdentity = (httpContext) =>{ ///... customized logic } } //... } } Limit access to company users If the company resouce is only accessible to users of that company. Put AccessibleCompanyFilterAttribute on you API endpoint. [AccessibleCompanyFilter] public async Task<IEnumerable<UserViewModel>> GetUsers([FromRoute] string companyId) { //... } Open access to user who have permission to view all companys' resource. Like super admin, you can open access to those users if required. Put AccessCrossCompanyPermissionFilterAttribute on API and assign permsission need to check. For below case, any user who has ViewCompany permission can get users of every company. [AccessCrossCompanyPermissionFilter(Premissions.ViewCompany)] [AccessibleCompanyFilter] public async Task<IEnumerable<UserViewModel>> GetUsers([FromRoute] string companyId) { //... }"
  },
  "articles/userManagement/authorize.html": {
    "href": "articles/userManagement/authorize.html",
    "title": "Integration with Role-based authorization in ASP.NET Core",
    "keywords": "Integration with Role-based authorization in ASP.NET Core In this section, you learn how to use Role-based authorization in an ASP.NET core project. First of all, It's required to have a basic understanding of Role-based authorization in ASP.NET Core. Configuration to enable Role-based authorization. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddAuthentication().AddCookie(o => o.Events.AddCookieValidateHandler()); //... } public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... //Put UseRouting before UseAuthentication and UseAuthorization app.UseRouting(); app.UseAuthentication(); app.UseAuthorization(); //... } } Configuration to enable Role-based authorization if DNVGL.OAuth.Web is used in authentication. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddOidc(o => { //.... }, cookieOption => cookieOption.Events.AddCookieValidateHandler()); //... } public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... //Put UseRouting before UseAuthentication and UseAuthorization app.UseRouting(); app.UseAuthentication(); app.UseAuthorization(); //... } } Then AuthorizeAttribute can be used to decorate an API to perfrom authorization. [HttpGet] [Authorize(Roles = \"ReadWeather\")] public IEnumerable<WeatherForecast> Get() { //... api logic } Alternatively, PermissionAuthorizeAttribute is still working. [HttpGet] [PermissionAuthorize(WeatherPermission.ReadWeather)] public IEnumerable<WeatherForecast> Get() { //... api logic }"
  },
  "articles/userManagement/configuration.html": {
    "href": "articles/userManagement/configuration.html",
    "title": "User Management Configuration",
    "keywords": "User Management Configuration Config Database Use Azure CosmosDB as database Use Azure SQL Server as database User other databases. The package can use all database engines supported by EF Core 5.0+. Here is a list - EF Core 5.0 Database providers User Management Configuration Config unauthorized behavior The package provides the following two built-in methodologies to handle unauthorized access. | Name | Description| |--|--| | Return403ForbiddenCode | It will send 403 reponse to the client directly. It is default hehavior| | ThrowExceptionDirectly | It will throw UnauthorizedAccessException directly. Then developer should capture this exception and handle properly. | Change the default heavior to throw a exception directly. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement( //... PermissionOptions = new PermissionOptions() { //... HandleUnauthorizedAccess = BuiltinUnauthorizedAccessHandler.ThrowExceptionDirectly }) //... } } Customize unauthorized behavior public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement( //... PermissionOptions = new PermissionOptions() { //... HandleUnauthorizedAccess = (httpContext, missedPermission) =>{ ///... customized logic } } //... } } Config logic to get user id in Identity Provider By default, The pacakge reads user id from the Claim which type is userId. It is feasible in case Veracity Identity Provider (Azure AD B2C). Setup your own logic if required. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement( //... PermissionOptions = new PermissionOptions() { //... GetUserIdentity = (User) => User.Claims.FirstOrDefault(t => t.Type == \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\")?.Value } //... } }"
  },
  "articles/userManagement/cosmos.html": {
    "href": "articles/userManagement/cosmos.html",
    "title": "Use Azure CosmosDB as database",
    "keywords": "Use Azure CosmosDB as database Prerequisites Azure CosmosDB instance is created. The following instruction assumes there is a collection named User exists in database named UserManagement. PM> Install-Package Microsoft.EntityFrameworkCore.Cosmos Register user management module in ASP.NET core project public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement().UseEFCore( new EFCoreOptions { DbContextOptionsBuilder = options => options.UseCosmos(\"***Connection string***\", \"UserManagement\"), ModelBuilder = (modelBuilder) => modelBuilder.HasDefaultContainer(\"User\"), }); //... } } Create a super admin in database. The following is a user record template. Replace \"***\" with the real value. Id is the primary key and unique. Create a container with the partition key set to \"__partitionKey\" in Azure Cosmos DB. NOTE: Discriminator and id are two field managed by EF Core. id is a string in the format of [Discriminator]|[Id]. For user record, Discriminator is a constant - \"User\". { \"Id\": \"u1\", \"Active\": true, \"CreatedBy\": \"***\", \"CreatedOnUtc\": \"***\", \"Deleted\": false, \"Description\": \"***\", \"Discriminator\": \"User\", \"Email\": \"***\", \"FirstName\": \"***\", \"LastName\": \"***\", \"SuperAdmin\": true, \"UpdatedBy\": \"***\", \"UpdatedOnUtc\": \"***\", \"VeracityId\": \"***\", \"id\": \"User|u1\" }"
  },
  "articles/userManagement/customModel.html": {
    "href": "articles/userManagement/customModel.html",
    "title": "Customize Data Model",
    "keywords": "Customize Data Model In this section, you learn how to extend data model of Company, Role and User with extra fields to support a project's need. Prerequisites PM> Install-Package DNVGL.Authorization.UserManagement.Abstraction Extend data models by inheriting from built-in data models public class MyCompany:Company { public string ExtraCompanyProperty { get; set; } } public class MyRole : Role { public string ExtraRoleProperty { get; set; } } public class MyUser : User { public string ExtraUserProperty { get; set; } } Register your data models Only User model is customized public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagementWithCustomModel<MyUser>().UseEFCore<MyUser>(new EFCoreOptions { DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\") }); //... } } Both Company and User model are customized public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagementWithCustomModel<MyCompany, MyUser>().UseEFCore<MyCompany, MyUser>(new EFCoreOptions { DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\") }); //... } } All Company, Role and User model are customized public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagementWithCustomModel<MyCompany, MyRole, MyUser>().UseEFCore<MyCompany, MyRole, MyUser>(new EFCoreOptions { DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\") }); //... } } API for custom model POST and PUT api endpoints are different between built-in model and custom model. The following the API for custom model. Path HTTP Action /api/companies/custommodel POST /api/companies/custommodel/{id} PUT /api/company/{companyId}/roles/custommodel POST /api/company/{companyId}/roles/custommodel/{id} PUT /api/company/{companyId}/users/custommodel POST /api/company/{companyId}/users/custommodel/{id} PUT /api/admin/users/custommodel POST /api/admin/users/custommodel/{id} PUT"
  },
  "articles/userManagement/dataAccess.html": {
    "href": "articles/userManagement/dataAccess.html",
    "title": "Customize Data Access Implementation",
    "keywords": "Customize Data Access Implementation In this section, you learn how to replace built-in EFCore implementation with your own data access implementation. Prerequisites PM> Install-Package DNVGL.Authorization.UserManagement.Abstraction PM> Install-Package DNVGL.Authorization.Web Implement interfaces The following four interfaces needs to be implemented. public class YouOwnCompanyRepository: ICompany<Company> { //... } public class YouOwnRoleRepository: IRole<Role> { //... } public class YouOwnUserRepository: IUser<User> { //... } public class YouOwnUserPermissionReader : IUserPermissionReader { //... } Register interface implementation public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement(); services.AddScoped<IUserPermissionReader, YouOwnUserPermissionReader>() .AddScoped<IRole<Role>, YouOwnRoleRepository>() .AddScoped<IUser<User>, YouOwnUserRepository>() .AddScoped<ICompany<Company>, YouOwnCompanyRepository>(); //... } }"
  },
  "articles/userManagement/dataModel.html": {
    "href": "articles/userManagement/dataModel.html",
    "title": "Data Model",
    "keywords": "Data Model In this section, you learn the built-in data model in User Management Package. These model is defined in package - DNVGL.Authorization.UserManagement.Abstraction. You are allowed to extend data models with extra fields. Extend Data model - Company, Role, User Company Field Type Description Id string The primary key of the company Name string Description string ServiceId string It is the veracity service id. DomainUrl string It is domain url like dnv.com. or the secondary directory in url like oilgas in dnv.com/oilgas/phonebook. Permissions string Permissions are combined as a string which use semicolon(;) as a delimiter. Active bool Deleted bool true if the company is soft deleted, otherwise false. CreatedBy string CreatedOnUtc DateTime UpdatedBy string UpdatedOnUtc DateTime Role Field Type Description Id string The primary key of the role Name string Description string Active bool Deleted bool true if the role is soft deleted, otherwise false. Permissions string Permissions are combined as a string which use semicolon(;) as a delimiter. CompanyId string The id of the company to which this role belongs. It is null if it is a global role. CreatedBy string CreatedOnUtc DateTime UpdatedBy string UpdatedOnUtc DateTime User Field Type Description Id string The primary key of the user Email string FirstName string LastName string VeracityId string It is an id provided by identity provider. Description string RoleIds string Role's ids are combined as a string which use semicolon(;) as a delimiter. CompanyIds string Company's ids are combined as a string which use semicolon(;) as a delimiter. Active bool SuperAdmin bool true if the user is a super admin, otherwise false. Deleted bool true if the user is soft deleted, otherwise false. CreatedBy string CreatedOnUtc DateTime UpdatedBy string UpdatedOnUtc DateTime"
  },
  "articles/userManagement/overview.html": {
    "href": "articles/userManagement/overview.html",
    "title": "Overview",
    "keywords": "Overview In this section, you learn the different modes of user management, permission setup, package limitations, and decide the adoption of the package. 1. Three user management modes one user is allowed to be assigned to mutiple companies. Company_CompanyRole_User is the default mode. Mode Company Role User Company_CompanyRole_User ✓ ✓ Role is defined at company level. ✓ Company_GlobalRole_User ✓ ✓ Role is defined at global level. ✓ Role_User ☒ ✓ ✓ Change default user management mode API endpoint and schema has slight difference on different modes. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement( new UserManagementOptions { //... Mode = UserManagementMode.Role_User }); //... } } 2. Permission setup Build-in Permissions The following are serveral built-in permissions used to authorize user management apis. | Permission | Description | |--|--| | Premissions.ManageUser | permission to make change on user. | | Premissions.ViewUser | permission to read user. | | Premissions.ManageRole | permission to make change on role. | | Premissions.ViewRole | permission to read role. | | Premissions.ManageCompany | permission to make change on company. | | Premissions.ViewCompany | permission to read company. | Create your own premissions Define permissions by implementing interface - IPermissionMatrix. The following code defined two permissions. You are also allowed to manage permissions outside of the source code. Here is the instruction. public class PermissionBook : IPermissionMatrix { public enum WeatherPermission { //... [PermissionValue(id: \"8\", key: \"ReadWeather\", name: \"Read Weather\", group: \"Weather\", description: \"ReadWeather\")] ReadWeather, [PermissionValue(id: \"9\", key: \"WriteWeather\", name: \"Write Weather\", group: \"Weather\", description: \"WriteWeather\")] WriteWeather, //... other permissions } } Authorize API with permissions Decorates API actions with permission. You are also allowed to use Role-based authorization like [Authorize(Roles = \"****\")]. Here is the instruction. [HttpGet] [PermissionAuthorize(WeatherPermission.ReadWeather)] public IEnumerable<WeatherForecast> Get() { //... api logic } 3. Data Model The predefeind data models of Company, Role and User may not fully meet your needs. Please check the built-in model definition, and follow this instruction to extend the data model. 4. Company/ Role/ User deletion By default, the soft deletion is enabled. Change the default behavior to hard delete record. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement().UseEFCore(new EFCoreOptions { DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\"), HardDelete = true }); //... } } 5. Data Access Implementation We provide data access implementation in package - DNVGL.Authorization.UserManagement.EFCore. It has dependency on EF Core 5.0+. If you don't want to introduce EF Core in your project. then this package is not required to be installed. Here is an instruction to Replace EF Core with your own data access 6. Performance ✓ By default, The package reads and check user's permission from database for every http request. You can change this behavior to load user's permission in to claim (in cookie), and then read, check user's premission from claim. The following is to setup such behavior. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddAuthentication().AddCookie(o => o.Events.AddCookieValidateHandler(services)); //... } } 7. Swagger UI By default, Swagger UI probably do not show User Management APIs. Then you could follow the instructuon to get it displayed."
  },
  "articles/userManagement/permissionStore.html": {
    "href": "articles/userManagement/permissionStore.html",
    "title": "Configure Permission definition out of source code.",
    "keywords": "Configure Permission definition out of source code. In this section, you learn how to configure permissions out of source code. Permission data is allowed to be stored in different forms like Json file, xml file or in database. Prerequisites PM> Install-Package DNVGL.Authorization.Web Implement interface IPermissionRepository Interface IPermissionRepository is required to be implemented to load meta data of all permssions. public class OwnPermissionRepository : IPermissionRepository { public async Task<IEnumerable<PermissionEntity>> GetAll() { //... logic } } PermissionEntity Definition Field Type Description Id string The primary key of a permission Key string A readable unique key of a permission Name string Permission name Description string Permission description Group string Permission group Create mandatory permissions Key ManageUser ViewUser ViewRole ManageRole ViewCompany ManageCompany Register IPermissionRepository service public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement().UseEFCore(new EFCoreOptions { DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\") }).UsePermissionRepository<OwnPermissionRepository>(); //... } }"
  },
  "articles/userManagement/sqlserver.html": {
    "href": "articles/userManagement/sqlserver.html",
    "title": "Use SQL Server as database",
    "keywords": "Use SQL Server as database Prerequisites PM> Install-Package Microsoft.EntityFrameworkCore.SqlServer Register user management module in ASP.NET core project public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddUserManagement().UseEFCore( new UserManagementOptions { DbContextOptionsBuilder = options => options.UseSqlServer(@\"Data Source=.\\SQLEXPRESS;Initial Catalog=UserManagement;Trusted_Connection=Yes;\") }); //... } } 2. Create tables in database Find and execute NewTableScript.sql which is located at the Content directory once you imported the package in your project. 3. Create a super admin in Table - Users. The following is sample. | Id | Email | FirstName | LastName | VeracityId | SuperAdmin | Active | Deleted | |--|--|--|--|--|--|--|--| | 1 | email | first name | last name | veracity id | 1 | 1 | 0"
  },
  "articles/userManagement/swagger.html": {
    "href": "articles/userManagement/swagger.html",
    "title": "APIs documentation with Swagger",
    "keywords": "APIs documentation with Swagger In this section, you learn how to expose User Management APIs documentaion in Swagger UI. By default, they are probably not shown in Swagger UI. Then you could follow below instructuon to get it displayed on Swagger UI. Prerequisites PM> Swashbuckle.AspNetCore Configure swagger in Startup.cs It will serperate User Management APIs from your project APIs. public class Startup { //... public void ConfigureServices(IServiceCollection services) { //... services.AddControllers(); services.AddSwaggerGen(c => { // swagger documentaion group for User Management. c.SwaggerDoc(\"UserManagement\", new OpenApiInfo { Title = \"User Management\", Version = \"v1\" }); // swagger documentaion group for your system. c.SwaggerDoc(\"WebAPI\", new OpenApiInfo { Title = \"Web API\", Version = \"v1\" }); c.TagActionsBy(api => { if (api.GroupName != null) { return new[] { api.GroupName }; } var controllerActionDescriptor = api.ActionDescriptor as ControllerActionDescriptor; if (controllerActionDescriptor != null) { return new[] { controllerActionDescriptor.ControllerName }; } throw new InvalidOperationException(\"Unable to determine tag for endpoint.\"); }); c.DocInclusionPredicate((name, api) => { if (name == \"UserManagement\") return api.GroupName != null && api.GroupName.StartsWith(\"UserManagement\"); else return api.GroupName == null; }); var xmlFile = $\"DNVGL.Authorization.UserManagement.ApiControllers.xml\"; var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile); if (File.Exists(xmlPath)) c.IncludeXmlComments(xmlPath); }); //... } //... public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { //... app.UseSwagger(); app.UseSwaggerUI(c => { c.SwaggerEndpoint(\"/swagger/UserManagement/swagger.json\", \"User Management API v1\"); c.SwaggerEndpoint(\"/swagger/WebAPI/swagger.json\", \"Web API v1\"); }); //... } } Copy document to output (optional) It is an optionanl step. With this step, more infomation will shown on the Swagger UI. otherwise, only API endpoints are displayed on Swagger UI. Open swagger in Browser By default, the link to open swagger is the [HOST]/swagger. Then choose User Management API from definition drowdown list."
  },
  "articles/WebProjectTemplates.html": {
    "href": "articles/WebProjectTemplates.html",
    "title": "Introduction to Solution Web Project Templates",
    "keywords": "Introduction to Solution Web Project Templates Project templates produce ready-to-run projects that make it easy for users to start with a working set of code. .NET includes a few project templates such as a console application or a class library. So we provide a project template to help you initialize web project. We don't plan to introduce how to setup a project template via dotnet core cli. If you are interested, please refer Tutorial: Create a template package . Introduce templates into dotnet CLI Tools Overview The DNV.SolutionPackage.ProjectTemplates helps developer to quickly initialize a work around web application project. We don't need to take more time on setting up. The developer can focus on business domain development tasks. This template contains authentication with Veracity. If the application need user management, it is also provided. Install the template package There are two methods to install SolutionPackage project templates. One is to install it directly from Nuget package source. Other is to install from local file. dotnet new -i DNV.SolutionPackage.ProjectTemplates::1.0.0 --nuget-source \"https://dnvgl-one.pkgs.visualstudio.com/_packaging/DNVGL.SolutionPackage/nuget/v3/index.json\" dotnet new -i C:\\Temp\\DNV.SolutionPackage.ProjectTemplates.1.0.0.nupkg The following template packages will be installed: C:\\Temp\\DNV.SolutionPackage.ProjectTemplates.1.0.0.nupkg Success: DNV.SolutionPackage.ProjectTemplates::1.0.0 installed the following templates: Template Name Short Name Language Tags ------------------------------- -------------- -------- ---- DNV.SolutionPacakge.WebTemplate DNVWebTemplate DNV List the templates dotnet new --list After the template package installation, DNV.SolutionPackages.WebTemplate is in the templates list. You also can use dotnet new --list command to list the detail which templates have installed. dotnet new -l These templates matched your input: Template Name Short Name Language Tags -------------------------------------------- ------------------- ---------- ------------------------------------- ASP.NET Core Empty web [C#],F# Web/Empty ASP.NET Core gRPC Service grpc [C#] Web/gRPC ASP.NET Core Web API webapi [C#],F# Web/WebAPI ASP.NET Core Web App webapp,razor [C#] Web/MVC/Razor Pages ASP.NET Core Web App (Model-View-Controller) mvc [C#],F# Web/MVC ASP.NET Core with Angular angular [C#] Web/MVC/SPA ASP.NET Core with React.js react [C#] Web/MVC/SPA ASP.NET Core with React.js and Redux reactredux [C#] Web/MVC/SPA Blazor Server App blazorserver [C#] Web/Blazor Blazor WebAssembly App blazorwasm [C#] Web/Blazor/WebAssembly/PWA Class Library classlib [C#],F#,VB Common/Library Console App console [C#],F#,VB Common/Console DNV.SolutionPacakge.WebTemplate DNVWebTemplate DNV dotnet gitignore file gitignore Config ... There are some built-in template packages, also you see our DNV.SolutionPackage.WebTemplate in the list. Uninstall the template package The dotnet new --uninstall command can remove the template. dotnet new --uninstall DNV.SolutionPackage.ProjectTemplates dotnet new -u DNV.SolutionPackage.ProjectTemplates Success: DNV.SolutionPackage.ProjectTemplates::1.0.0 was uninstalled. Create project via Solution Package project templates Let's take a look the functions of DNV.SolutionPackage.WebTemplate. The dotnet new DNVWebTemplate --help command list all the parameters. dotnet new DNVWebTemplate --help DNV.SolutionPacakge.WebTemplate Author: Tim Tu Options: -t|--template The type of webtemplate to use basic - basic management - management Default: basic -s|--skipRestore If specified, skips the automatic restore of the project on create. bool - Optional Default: false -sk|--skipDBSetup If specified, skips the DB creation process on create. bool - Optional Default: false The -t|--template option chooses main functions will be installed in created project. The basic is default value, the created project will integrate authentication library DNVGL.OAuth.Web which also is from DNV.SolutionPackage. The management option not only has all basic functions, but also integrates user management The -s|--skipRestore option restores the dependencies of the created project. The default value is false. Doesn't restore the dependencies after created project. The -sk|--skipDBSetup option must works with -t|--template management option. It will create tables related with user management in local SQL Server database. If there is no SQL Server in your local machine, A folder Scripts will be created in solution folder. The Scripts folder contains db.bat and dbcreation.sql files. Use dbcreeation.sql to generate tables in specify database. The dotnet new DNVWebTemplate command create project from DNV.SolutionPackage.WebTemplate template. dotnet new DNVWebTemplate --template management --name Demo.Management.Website --output ManagementSolution The template \"DNV.SolutionPacakge.WebTemplate\" was created successfully. Processing post-creation actions... No Primary Outputs to restore. Template is configured to run the following action: Actual command: Scripts/db.bat Do you want to run this action [Y(yes)|N(no)]? N In the work folder, there are new solution and project files in folder ManagementSolution. When the website is running, the first access user will be added as administrator. This function is implemented in AuthController.cs file. Please pay attention when you use in your business. The front-end of website is SPA application. The source code is in ClientApp folder. Please refer https://webapptemplatedoc.z6.web.core.windows.net/articles/intro.html ."
  },
  "index.html": {
    "href": "index.html",
    "title": "Solution Package",
    "keywords": "Solution Package A collection of packages and tools for developers to support rapid, robust and extensible development of applications and services within DNV. Some of the supported features include: Authentication OpenId connection authentication OAuth HTTP client factory Security Security headers User management Secrets manager Integration Veracity - My Services API v3 clients Getting started Installing packages"
  }
}